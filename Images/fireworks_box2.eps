%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Adobe Illustrator Artwork
%%Creator: Adobe Illustrator(R) 24.3
%%For: Donets
%%CreationDate: 12/2/2021
%%BoundingBox: 0 0 2000 2000
%%HiResBoundingBox: 0 0 2000 2000
%%CropBox: 0 0 2000 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 24.3.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 24.3.0 x569 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 6.0-c002 79.164352, 2020/01/30-15:50:38        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpRights="http://ns.adobe.com/xap/1.0/rights/"
   xmpMM:DocumentID="xmp.did:6a852a7e-a84a-884b-89c9-e5e6b2fc5ad0"
   xmpMM:InstanceID="xmp.iid:cc59ba03-621e-0b41-9500-c55fbbab35f7"
   xmpMM:OriginalDocumentID="xmp.did:1625c5f4-4a1b-8347-bc1d-a536da361902"
   xmpMM:RenditionClass="default"
   dc:format="application/postscript"
   xmp:CreatorTool="Adobe Illustrator 24.3 (Windows)"
   xmp:CreateDate="2021-12-02T15:36:53+02:00"
   xmp:MetadataDate="2021-12-02T15:37+02:00"
   xmp:ModifyDate="2021-12-02T15:36:53+02:00"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:HasVisibleOverprint="False"
   illustrator:CreatorSubTool="Adobe Illustrator"
   pdf:Producer="Adobe PDF library 15.00"
   xmpRights:Marked="True">
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1625c5f4-4a1b-8347-bc1d-a536da361902"
      stEvt:when="2021-12-01T14:13:11+02:00"
      stEvt:softwareAgent="Adobe Illustrator 24.3 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:62f99ba2-7f08-5a4d-8398-9c28487ae951"
      stEvt:when="2021-12-02T13:02:38+02:00"
      stEvt:softwareAgent="Adobe Bridge 2020 (Windows)"
      stEvt:changed="/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:6a852a7e-a84a-884b-89c9-e5e6b2fc5ad0"
      stEvt:when="2021-12-02T15:36:53+02:00"
      stEvt:softwareAgent="Adobe Illustrator 24.3 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:cc59ba03-621e-0b41-9500-c55fbbab35f7"
      stEvt:when="2021-12-02T15:37+02:00"
      stEvt:softwareAgent="Adobe Bridge 2020 (Windows)"
      stEvt:changed="/metadata"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpMM:DerivedFrom
    stRef:instanceID="uuid:fef9bf4e-aa63-4aed-922f-d6d75da21625"
    stRef:documentID="xmp.did:1625c5f4-4a1b-8347-bc1d-a536da361902"
    stRef:originalDocumentID="xmp.did:1625c5f4-4a1b-8347-bc1d-a536da361902"
    stRef:renditionClass="default"/>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">box_with_rockets</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Sergii Korolko</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="256"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq+aPzb/NfX9a8z3Ok+WNXuNM0TSGMEl5ZP6b3V2v9&#xA;4RIp5elF9kAGjGp3FM2Wh0HigyltF3XZfZX5gGUrEenmXo35AfmHf+a/LNzY6zP6+v6HN9Xu5jQN&#xA;LC9TBM1KbniyE03K175hZsRhMxPR1mpwHFkMD0eo5U0OxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvMfz2/MSXyz5eTSNKm4eY9cDQ2jKfit4AP31zt0&#xA;4g8U/wAo7dDl2DCckxEORpNNLNkEB1fN9tbRW1vHBEKRxjio/ifnnX48YhERHIPoeHFHHAQjyCdf&#xA;lr5s/wAHfmfpuoyvw0vWB+jtSqaKBIwEch/1JOB+XLNJ2th3Ew817QabcZA+xM0rzLsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVeb/ntrt7Y+U7XStPuZLW9169isfVh&#xA;YrKtuA01yyMNx+6jK1/ysx9Xn8LFKfcPt6NeWfDElhMUV3+VeoWWt6P68/lW4RItf0ku8wQAD/Sr&#xA;cMTSSMbkftLUdaHMPFqJY5RGQ3GfXul3e49GmGQxIEuR+97vYX9nqFlBfWUy3FndRrLbzxmqujiq&#xA;sD7jNo5SviqC1rWNO0XSbvVtSmEFhYxPPcSnsiCpoO5PQDudsVfHmu+Y9R81+Yr3zPqSmOa+IWzt&#xA;Sa/V7NP7mEe9PienViTnTdm6Xw4cR+qX3Pbdi6HwcfHL65fYELmydyl2v2YutMlWlWjHNR8huPpF&#xA;cxtXi48ZDia7D4mIh9W/kd53/wAXfl5p95PJ6mpWI+oakSasZoAAJD/xljKv8znJSjRp89nAxJBZ&#xA;9kWLsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirwj83dR/Sf5n2enqeV&#xA;v5d04yuB+zdag9KH5QQj/gs0Pb+bhxCH84/YPwHB186iB3s5vtOivdOezm+y6cQ3gw6MPkcy82nG&#xA;TGYHubJwEo0WA+QvNs35fa6fL+rPw8pX9wUglc/Dpt3I32ST9m2nb6EbwDZT2XrjK8OT+8j9v4/a&#xA;x02cn0S+oPfM3LmPnb/nIfzu2ra1H5IsnP6O04x3WusOks5Ae3tz4qg/eOPHj4ZseztL4k7P0xdx&#xA;2NofGycUvoj9/QPOLKwku2KpNBDxpvcTxQjfw9RlrnRzyCPO/k9lkzCHO/gCURcaDdQRNL9YspUQ&#xA;Vb0by2kYf7FZOR+gZGOeJ7/kf1MIaqMjVS/0sv1JaQCKHoeuXOQyX/nHHzb/AIa/Me48uXL8NP18&#xA;ejHU0AuoqvA3+zUunuSvhnK67DwTeG7W0/Bkt9a5gupdirsVSrzP5o0Pyxo82r63dLaWMNAXbdnc&#xA;/ZjjQfE7t2UYqxnyl+b+ieYdeXQZdN1DRdTnia4sYNSiSP140FW4em8lHVfiKNQ0zG02sxZ78OQl&#xA;XcznjlGrFWzvMlg7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXzBb6j+mta17zFy5jVt&#xA;Rma3c97W3P1a2+j04gfpzjO3c3Fn4f5o/a6fWzuddz2zOodiwb8xNCt7hPrEsQltrpTBdxnodtq/&#xA;MbfRnPdr4TCcc0dj+no4OqiYkTCM/J3z5Pa3EfkXX52knjQny7qMpqbm3jG9vIx/3dAvT+ZPcb7z&#xA;s7XDUQv+Icw52nzjJHzY/wDnd+S0d35gi802eqtawavqGn2mp2BBqZLmaKzEsDioB4sCVcU2JB/Z&#xA;zb4tRKAocnY4NZPHExB2KA8t/ln+XQ1I6ZeaerXts8kV7DNcTepWMECQrzWivQMpAAIObHJGocQ5&#xA;FyZ5JcPECd/NHedfye8lyaDMvl3RQ2tM0S2bxz3FFLyqrM37zhQIWJ5bDrlGCY4xxn0/saceeQlv&#xA;I172NfmD+UmkaAujyafdXVrFcCSC8mEheM3IRWhADn4eZD7V9syNHlOQy3IrkPx8HK02vykn1Fhv&#xA;5e/lx5380+bLO406CT6jp1/E1zrrj04oxbukp41NWenGipXelaDfMfWZruJ3kx1mt8SPDL6n2xmu&#xA;dU7FUm83ebtF8qaLLq+rylIEIjhhjHOaeZ/sQwp1eRz0H0napwSkALPJXldvYa75m1mLzT5wjWOW&#xA;Gp0PQVPOCwRusjkikly37Tfs9vbzX2i9ozn/AHWGxi6y/ne7+j97tNNpuHeXNINe1OSy/MryrqMe&#xA;ywatBbzSVpwiuAbN9/CtxvmX7ISEZ0f4o/t+5yNfD9yD3F9GZ6A6N2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV5v+eP5kar5J8v2LaNHE2rardfVoJLhS8USKheSTiCvJhQBR039sv02A5cggNra8uTgiZd&#xA;zFPJP5+6pafVIPzCt44LLUN9P8yWqkWx34lLlKt6ZVhQsDQdwB8WX6rQSxE0eIDn5e8fgNeHUiYH&#xA;Ql7hBPBcQxzwSLLBKoeKWMhkZWFQysNiCMwXIX4qxn8zNffQPIOu6rFX6xDaOlrTr9Ym/cwU/wCe&#xA;si4CQBZUl4Po9ilhpVpZIapbwpGCep4qBU55zqMhnklI9S89klxSJe0QtziR615KDX5jO6gbALuR&#xA;yQPmBbSTSLmO5kWJWQlGcgfEvxLTx3GYuvEDikJGtvta8wBiQXi3mO5sWghgEkn6UMqvpK2gLXQu&#xA;4zyiaAKC3NW/t2zney4ZvFBxj391ebg6aM+K4h61+ZF/5lh8keTTeCGPzJcajpv1xHBaEXkVvJcS&#xA;qRER8IkhPQ0p0zv9PESmAeTvsUQZUU48rahY+YLT9IXdhDFrNozWd6OKuyOoDEI5HL03VldfY5Zq&#xA;MZxHhB9J3CcsTA10Q/m7U9VhsGi0BYIrsSqvrzqTGux5HivUgDavfJaXFGUvXdMsMBI7sGvdV8w3&#xA;Vp+g/OEdpf6RqTLCuoW4aKSKYnlHzXp8TDijL0amZeXBCA48diUejdkxCI4o9GV/8452jWv5fzoS&#xA;W/3KXyiUgAyCKT0uRp/xjpmryTMpElxJSs29RyDFIvOXnTQ/KOkNqOqSGrH07OziHK4uZ22SGCPq&#xA;7sfu6nbIykIgkmgFAt575c8ra15m11POPnID68gI0zS1blb6fC3+64+zzEf3kv0DYZyOXPPtOZjG&#xA;46SJ3PI5PL+r+PdmxiMQs/X9yf6hcRy3DGMBYYxwjA6cR3+nrnC9raqObOeAVjj6Ygdw/Wd3YYYE&#xA;R35vE/zHluP0ebyFuMtuzXin3t5EuKfT6edF2BMY88feB87H6XK1cLwyHl9z6pgningjniPKKVQ8&#xA;beKsKg/dnpDzC/FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8G/5yt/3h8p/8x83/ACZzY9k/4zH4/cXG&#xA;1n91JhX5Z6lp94bjynrMa3GnahV7dJOizAbgH9nko29x750HaeIgDLD6o8/c6vRzB9EuR+9P7Wfz&#xA;v+UlyZ9GL635Jdy0+kSt8VvyNSYX39I1P+o3cA0zRHTQzb4/TP8Am9D/AFf1OxGWWP6t49/6/wBb&#xA;2zyR+YHljzppn1/Q7r1DHRbqzkHC4t3P7E0Z3X5/ZPYnNbKJiaOxcsEEWEF+a/lDVfNfk+XTNKnj&#xA;hv4ri3vIFnLCGVraQSCKQrUhWp1od6ZVkhxxMe8UiUbBDxlbLzHaa1JomuWUWm38cUM6iOX6zG0M&#xA;7OiNyAj/AGomB27Zwna+k/J0b4uK/Ll83Cj2df8AF9jPdM07W7m1kiudYeFbdFWNbdEUkUoKllLd&#xA;vHMjsfXZNWDHiMeCvxfwcs6bhABJY/5k03RoGnN1dFrmJEZ/rMxPJW25fGfEHNZ2tHUYtTw7yieR&#xA;68v1tkcGOrrdJNA1Sz0/zj5T1izeN7X9IDT5pYyGVo71GtgCwO4WVkPzGbH2cyzhqJQndyjyPzZS&#xA;ej/nLOP0p5LtWbjG+pXE7fEAKxWMyL16nlMAM9A0o9YbMH1hS8hrP9b8yXMQrF6kMUe3WaKDk/z2&#xA;kQZla4j0D8c23U8wpea9XTTdFtgsLXN7dTmOzsoqepPLuFVa7Ci7sx2VQSdhleOYhciuDm8c/MvU&#xA;/N/ljUNNfUtRW6tbsxXNxZRRxrFC0UoYrEePqtwIHFmb4j1GYJ7Sn4vCa4JB3Q0EZ6SWUE8cZUR0&#xA;ojptd/F7x+QSxn8rNKuEofrct9clhUV9W+mZTQ/5NBhlzebLJvOnm/TfKfl+fWb9XlVGSK3tYhWW&#xA;eeVuMUMY7s7H6Bv2yEpCIJOwCALYD5V8p61resnzj5xKvq8ilLKyQ8oLC3b/AHRB4uf92y9WOw2z&#xA;kskp9qS6x0kT7jkI/wB7+OfLNiBiH9P7maaxcra2YhiorSfCoG1F75D2i1kdLpfCx+kz9IrpHr+r&#xA;4stPDilZ6MWvn4Wc7/yxsR86Z5vjFyHvdpEbh5X5vtUu7FbaQ0jnEkLkeEi8TnUaDJwT4h0o/JzZ&#xA;R4omPeHvX5Var+lfy28s3xbk8mnWyyt4yRxiOTr/AJaHPUnj2U4q7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXgv8Azlf/AMc/yp/zHTf8mc2PZX+MR+P3FxtX/dF4lb3E1tcRXEDlJoXWSJx1DKagj6c7WURI&#xA;UeReeBo2H0j5b1q317QbbUFAInTjPF1CyD4ZEIPav4ZxmpwnFkMe56DFkE4gsD82fl1qWjakPNfk&#xA;aeTTtTt6tJBb916sFT7MiGm8TD5eGZEZ49QOHLtLpP8AW0mEsW8OXWP6meflN+eFr5suItA1yAaf&#xA;5o4M0Yjqba7EalnaAmpVgoJaNu24J3prtVo8mCVSHx6FysOeOQWEF+c9p9W85eX9RB+DUbO6sJB/&#xA;l27JcQ7/AOq82cl7TYeLTiX82X2Hb76ciKC0ObXYPMEEtzdfWNL1CJo41oq+nLT1QpCgV+wQDmg9&#xA;mc2IZjACpkH4s8l80h/OfTRK1lP0E8Utu7eHEhl/4mc6HtQcMoyakn8zaTLYeUnSzj4NZwpdWDDf&#xA;4rYiVGBXqarU5yXZmrP5yMyd+Lf47NkhQZB/zkXeXWuv5HOjqjyXdteX6NIxURxyLa8HJHUfGdhv&#xA;nq2myCEiT3Ljlwm0z8pfmV5T8qeTVsNW1JJ9VsUkkkhUhrq6ldyxPGv947P+0em52BORzSlIHJL6&#xA;e9njxZM0wIi5S2CN8mo+op/iTUo0TV9Qj9SG1DchaWcrVhijBoRzCBnalXb2VQuEc3ibu0yaQ4CY&#xA;HcjYnpY5ge78dHkX593P13zPJaA1+qWscdB2Zqy/qcZq9Rk/fDye07I0t9nS/pkn5bfoel/84nee&#xA;Rqfla68qXUlbvRX9azBIq1pOxJUDr+6l5fIMozcY5WHzrWYeDIe47vTPzQ8onzR5Sms4rlbK/s5Y&#xA;9Q028k/u4rm1PqRtJ/kdQx7A1wZcYyQMJcpCj8XGBo2w78vvzl0jXbC1h1mP9Eas8SOIn2hmRhVZ&#xA;IG7qw3od179q6+ePNpYjxYnw62nEWK/pRH0/AcPu5MMWtw5pGMJDiBojz7vxuelp9qN39buWlU8o&#xA;R8MZHSg/r1zy3tvWnU6iUx9A9MfcP183fYcfBGuqT62/HTJvE0H3sM1+mFzDk4h6nnXmUD6tEe4e&#xA;n4HOg0vMudF6j/zjzexzflytnGKJpeoX9mg3FEFy8yD6EmAHtnp2lmZYoyPMxH3PI5o8M5DuJel5&#xA;kNTsVdirsVdirsVdirsVdirsVdirsVeCf85Zf8c3yt/zHT/8mc2HZX+MR+P3Fx9X/dl4fncPOPS/&#xA;yW1uaPULvRmBaCdPrEZ7JIlA3/BKfwzSds4QYifUbOw0GTcxZV5u/NXy/oJktbY/pLVEBrbQEcEP&#xA;/Fsn2V+XXNXg0M57n0j7fk5884Gw3LF/yIhtfMf5nS+YdZkWG9hWe40izgUJC05X05+R61jimBRe&#xA;9WP7ODtWcxww/gHL9q6WABMv4i9Y/Pex5+TbbVVHxaJqNpeMe/pSObWb7o7lj9Gc12jh8XTzj3xP&#xA;z5hzQ8d8y+a9StJLOw05+FzbyB4gq8maVz+7FG+E7tT6c4zsXSRhec8/uA5uww44mFyer+bPLmma&#xA;rpNqLsl/jDJJGeJqyH7PXbbvmd7Q6yccEMkOXEPkQXChEE0kV7pdvB5ZmspHaWG2gfi7UL8UUkD/&#xA;AIHbOGx5pSzCQ2JLcY7U8p8weaXby35XdJ63GkaDcaemwYq66gLONl/mPp26sB4Uz2rTzEoiUto1&#xA;ZacWMzkIgWSwS3tyXVyn70k8E+0wLmpqerOx6nNR2j2gc8uGO2Mcg+sdg9hx0kPEyD96f9iO7395&#xA;+HJ9PeQfLh0Dy1bWku95IBLeMdz6jAfD8kUBR8sytPi4IAdXje19b+Z1EpD6RsPd+3m8A89ah+kv&#xA;NWsXQNVe4kSM/wCRH+7T/hVGajLO8hPm+iaDT+Ho4w/ofad0n/LPznJ5I/MSw1nkRZrJ6WoIP2rW&#xA;egl278RRx7qM3GmnyfOO2tNvKuhv4Hn+PJ9ffm9qbf4K/RdjKPrXmeaHSLSRCCPTuz+/kBHZbVZG&#xA;rmcHlzyeTeYvKC2yfUr225Wi7W0oGwC/ZKsPskbZ1en1GPNHb5PlGu0ep0OYyN0T9XSXv/UxNdT8&#xA;5eUJFNhqUk+lMw5QzfvFCg9GDbinahp7ZpO0vZbR6kHijw8XMx263vWx/wA63pey/anMRV+odDy+&#xA;Hd7hTL7/AM9akYfqt7YLL0bnayAtt0qJfSG/zzjs/wDwN+CRlhye4SH++2+53fZ/tzCVHJCu8/qH&#xA;q/3TH4dbv/NdxJpugaDqN9PalZLgxpb8UDlkXkxm4gMQep7Zrh7KanDL1GHzP6nsdP27gyx4oiXy&#xA;e6/k15N1fyt5WuIdYCR6lqd7JqE9rGwkWDnFFCsXqDZ2CQAsRtUmm2dVpcHhYxC7p1ebJxzMu9ne&#xA;XtTsVdirsVdirsVdirsVdirsVdirsVeCf85aK36H8sScT6a30ys9NgWgNBXxNDmf2Wa1Efj9xcfV&#xA;f3ZeEC8hd/ThrNLv8CbnYV38M7KWpgOroo4JHoznyFbXmp3KaLeXjaVp9yPijtAEkuWG/pzTbSUZ&#xA;ailQPDNZrTIDxALrv6e5ztPAD0kvV5fyh8ntpMUVpamzm40W6jNXJG1XB+Fq9+58c00O0csJXdhy&#xA;54YlIdL8la35csLxbBI21TSLiHVtBMZoLhogyXENPtD1oW9J6/zj2w6/PHMIyj8fLu/SxwgxO71r&#xA;U107z1+XV2tiwls/MGmyLbMaVBuIiEr4MjHfwIzUuc+SbbzCsmq6Xql23wQ3NrNeDclOLIz8lPdO&#xA;m3hTOXnpCME8URvwyiPt+92WKV46fTJkW40IEkk27ih23HQfRR6Zzk83jdlb/VjIH20PsLiVU2Ce&#xA;cPNVrp9vPp4jeS7niZBVSqKHUjlyP2uvbNP2foZZCJ36QWU51s+dbVJ2vJ/rDlxaM0Nsp6IpJJoP&#xA;E1656Pqc144xHIi3tPYnQwkZ5zvKPpj5d5/Hm9G/KLy2NX80pczLytNMAuJK9DJWkS/8F8X+xyrR&#xA;4uKd9A9L7R67wdOYj6sm3w6/q+L3XXtRGmaJf6gSB9VgklWvdlUlR9JzbZJcMSXzzSYPFyxh/OkA&#xA;+U2JYksak7knvnPvsVMa1ePjKkg91J+R2za6eW1Pn/a+KpCXwe/fk55yuvNk3l2x1MkJ5Psp4LWR&#xA;z/fz3LCOEj3htEMf05uMUJSgZgbDm+ea3Ljw6gYSaMrMfOv7fsL2qSOORCkih0b7SsAQfoOAEg2F&#xA;nASFEWHkv5n6RpDv9Wt1NuzniRGfh+HdtjWnxEDbM/H2lliKJ4ve6eXYOm4uKEeA+XL5fqSGTTZj&#xA;o31sXSs9BDUg8/UAp0Ht8XXM0drivp3dT/oYIntMcF9z1P8A5xs8tJp3ku51oismu3TyQyHqbW2J&#xA;hg28GYSSD2bNRqMxyTMi9TpsAxQEQ9bylvdirsVdirsVdirsVdirsVdirsVdirsVQmqaRpOrWhs9&#xA;VsoL+0YgtbXUSTRkjoSkgZcVeG/m5+XukeU9f0HzjoNhDp+lRzR2Wr29rEkUUfqNxin4IABz5lGP&#xA;c8PfM3SZdpQPKQ+3o0ZoWL7lW8/L+01Nfrmjyiw1WBg/p1Iicg1VxTdGr4VHtmbp+0jEcM/VH7f2&#xA;uIcV7jm9H0LVbHWNGintJlmooRyvUSKACCDQg5rc+KWOZBFOXGQkHnv5uXt1YzaJd2krQ3ELztHI&#xA;vUGkf+dM2vZMBITBFjb9Liag1SP/ACP85RvqWoeXJgIY7svqemRV+FJHYG9gjqfs+q4mRfB2H7OY&#xA;Gv0hwz/onk5eny8Q8w8G89aYND/MLzJohQLAL+V4YztxS4P1iEL/AM85gM5zVDhyX3uw02ThlXQv&#xA;Tfyc8w/WPLd1orgCaxZFZqULxs5eNj7gqyH6O+cZ26ZaeU63hnA+Eokfj4+Tblx0bZN5ksLW80a7&#xA;WeNXaOGR4mYbo4QkMD8xnNaPLKGSNHqGuQsPnLWdOu9I1X1bqPhb6mDNE38pBoOXhyH8M9H08xnx&#xA;VDeWPm9L7Jdqx0+U4sm0Mlb9x/b+p9Afk7oyaf5OiuSB6+ou1w578QeCD7lr9ObPRQqF97ke0uqO&#xA;TVGPSAr9J/HkofnVrIsvKYsUak2pSrHTv6cZEjn7wo+nBrZ1Cu9s9l9L4mp4zygL+J2H6Xgead9G&#xA;SbVouUMnijch9+bDTy3DyHa+K4y8jbOvydtbmKxv7tqrDK8SQ9R8UXMsw/5GDfO17CxkY5E8iX5+&#xA;/wCCFqYnUYoRPrhE38Tt+t7DY+e9SsYSLsC7iQbFjST2+IVr9I+nMrP2XjnvH0n7HTdne1Oox1HI&#xA;PEH+y+fX4/NgOvecdOv9Uld3aPh8A5qeo3b7PL9onNXk7OyxO272uDtXDOIO8b7/ANlpZNdjVJIN&#xA;G0qXnqWrSx2VpQH4XuGCcydqBASx+WUS004C5Cg5UNVjmeGJsvr7R9Ks9I0my0qyXhZ2EEdtbp4R&#xA;xIEX8BmO5KLxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsQ/MjWdBh0r9AatY3WpLrsM8SWlmsRk&#xA;KxhAzBppIkVlMilTy675CeWMBZNMowMtg8c/L7zdqdhef4d8wK1trliOEXrlAbiEj4KmNnQvx3or&#xA;H5kg5nx4c2PxYbjlLyP7XCy4zjlRQf5deav0PqqxyS8bC9orvXZG/Yk+W9D7fLOh1+m8SFj6g4uD&#xA;JwmjyZl528ta/wCZ5n9NoVGn/HZqaqZlnUcwzVIDK0W21N81uj1OPAN79XPyr+1uzYzIvM5La60o&#xA;X0V3PNpGqWSC706VXaGb61EeKxxunxVnikkhXj1Ld8yO1uHJg44kbdWOksZAKu+iMtfys83+Ybm4&#xA;1G7s2ijv4okF9rl7M96GirSQV9dwSpVeLutAvTOA1GKc+GUp8PD8j5fgO/yYIXtt9p/V9qC/Lm18&#xA;wwec9QtdJgt765jtX9aGSdoFkWOVFLI4jlq9fEUp3zC1/Zo1mIQ4uGjYNX+kN+Ueb06x1qG8uZdM&#xA;vrWXT9URC0unXQXk0Z2LxspaOWOppyRjTvQ5w3aHZObSG5bx6SH42P4FuOYkc2CfmpoMuo6npIjV&#xA;Qq3UQkDCqtGRuCNqr8G+bb2f1vgwyecCnTxvPH3qekap5u8qsbbSXW705SSNLuuTKgrU+jIv7yMb&#xA;+DJ4AZvdJ23Q9fz/AB+w+96zNoMebeB4Zdx/Qd9vge4UGK/mH5t1nX9Rju7/AEyWxt7WL0441PrI&#xA;CSSzc1ANW/1R0zNyZo5yDGUfc7fsnUY9DjMZxnZNmVAj4USfsYkt4rEBYpST0rGyj6SwAGQOAjcm&#xA;PzDsj7R6bkBO/wCpL9Len6DrGuavaafbxBEvLiG3lfkrGMTPwqR3oqs21dgcz9HjhIgXbx/bXbmQ&#xA;3wR4eLvonfZ9RXP5d6LFp0Fpo8a2AtU9OJBUowH8/fkTuW6nvXOm0faBxeki4/c+Vds+z8NYfEB4&#xA;cvf/ADvf+v72A+cdM1XR7VxNAxoCyvH8ammy9OlT45vMeuxTFg/PZ4+PYOpxZKnA13jcfj3vJn5c&#xA;jzry7161wg276q2eq/8AOOHlZtS89z61cRn6toFvWInp9avAUQ7/AMsIkP8Ashml7SzWREdHfdlY&#xA;DEGR6vqDNY7Z2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVjnnzyn/iTQnt4HWDVrVvrOkXbVpFc&#xA;oCF5Eb8HBKSAfsk98hkgJxIPIsoyMTYfMPn9LnVB+nDbtZ6rZn07+CtJIngPpzKSAu8MqE16U5MO&#xA;oynsbVHTag4p/RPb9RcnWYRlwicecU8h8g3EthFdaK/r288KXENo5/eAOoYojHZgK7A79t86/D2i&#xA;AeDJsQebz0sd7h6b+WtzqM3llVv6+rBM8KcxRwkYUBWr3U1Ga3tKMRl9PUW5GIkx3Y8b8al+Z9/q&#xA;F4EbT/KkJitUZaj1JIleWSvZiX4A9gu32jnIdrdozxZI448qsjvNbfjzel0OliNMcn8c5cI8gOfz&#xA;RGn3tn5r0m680a5qc0flpJnt9PsrOZ7USrE5QzzzRGOXi7K3BVYLx3NSdsSGKMYnJmHiZNtudXyi&#xA;ByHNoJJPDDYPM/y48u3Ou6zrMtndNY3tnaiayljNYjNyLqkvKp4ssZBIPIdRmRKMJARl3E/Kv1t+&#xA;SZjuGXa15sOtfljBrpjePzJo1z+5mmFJYpo680kpuwZP3bfzA5h5ssZQ8DL6+I1ffHbf3/ppyNPp&#xA;vFMojaJiZV5j9v2X3sc1DzHqd5b6Zql3KpMlwZkhChVFvHE4JqN93kHUnNBh0kIGeOI5Rq/MkfoD&#xA;V2Ji8XUxvul936ynsN7p1/DxJRw3WJ6Vr8jmBLHPGXqcunlDmFObRtMaNhIJFj40YetKq8fkHAyU&#xA;dTO9ufuH6mmnnfmVdDs7WQwIFlDUhjVmYiprQ1J7eOb3SHLOW/Jtni4Y3SN/LYXcWqWmpcQGteV4&#xA;h/ZbnWCH7gJ1Od12BoY5DInkBXxP7Hy/247YlpuCMPqMh8o/tNPoXR/NOmaiqrzEFyesEhpv/kno&#xA;2Zmp0OTF5x73D7N7e0+qAAPDP+af0d/3+TBfzC1X6xeCBGqteR6/ZX4V+81OYbuWGTPDHG0stAka&#xA;lmY9AAKk4glSAzjyj5Dhi0S01Jbi80jzFdqbi4v7GZoJh6p5pDKvxRSLGpVOLqw2zS5ddMZCY/S5&#xA;sMA4RfNllp5x/MnQiF1G1g82aev2ri14WOogdSTCx+rTEDsrR18MycXaET9WzXLTkcmVeWvzO8n+&#xA;YLn6jbXZs9XH29Hv0a1vFPtFJTn84yw98zoyEhYaCCGVZJDsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVeLfmt5TW181x38EVbTzIpjlWlUGo28e1RSn+k2yEGveIeOa3tHFYExzDm6PLRMTyLF/IesC0d&#xA;/LkzlLuwHqWJYnk9sWPHcliWjNUNetK5ttPm8fEMnXlL3/tdZq8HhZCOnRFaj+ZOp6V5tvY4+Nxa&#xA;L6Pr2bbcWMKEsjDdSfuze6fQwzYQeUt9/i4UspjLyYtp3nXSX89+YI7hZF03WSRJGdpBG8EIkZaV&#xA;3V2PTt8s4D2j0ssOoEufCB+n9H2vc9ixGp0fAD+8jORj8Kv72VaFLLpnl2TRNS01/MWiBXRL/Tkj&#xA;uFniZiQk9pUSpIBSoVWXwOaaURLL4uGfAT/CTRHzsFwMuKeP0zjyat5La00+5tPK3l640xLoAT3t&#xA;8v1CFVG1ZHnJn48SaBY2+QykiZyXlyjbu3PmKjt792UATXDGz+Pj9jzn8w/M2maR5Zfy5pMpvJrm&#xA;d7jUr0KyiW4uW4syqS3CNQeKCvQDqRU7DTQObLGVcMIDb4d/madxDTS0uGU5/wB5MVXdxFCtqF/N&#xA;5V0aSaJkEds8MxdSKpIIzBIpNKgqtK/PMY4YRz5ADzlY+F8QdZ2DIwymfcKPx/sa8tzXdzYGOVGM&#xA;tt8LsASCp+yaj7shq4xjLyL22i1InGidwjr4Ti0cIjMxHFQAT1ynGRblTkAGJ38AYiKSgEbcmXru&#xA;ARQ0/HNph73TazUCfpjv9z1z8uPIt4fy8stTSrX188l16TUBNu7fugtKDdR6nuXOd52XqY4PTLYH&#xA;73xb2n7KnrP3mPecb27x+v71uoGW2jkV1KSj4ODAghj7Z0sZAixyfNxhkJ8MhRHMFjU2l3wX1mu5&#xA;IJ5SWWGgZEQbKCp/a8cxsukhkNyG70Wk7ZyYhwQ+iP39UJodlqOtebbPQJrj17V5Q97xVVBgiHqS&#xA;K1ADR6en82zR9rQx6fCTEeo7B6/sfU5dVMGR9PP8U95vdc0mzqLi5RXHVAeTf8CtTnC29kIEpNc+&#xA;fbBKi3t5JT4sQg/42P4YLbBgPVjuu60uvwfVLzTLa4irWNZIzK6nxRjup913yUMsomwaZHTxPNrR&#xA;vPPnPy7L+j9H1KTWLpF/ceWLkS6lMQFqFV4y11AD/PK5Rf5aZtdJqcszvGx38nA1OHHHkd+59H5s&#xA;3BdirsVdirsVdirsVdirsVdirsVdiq2WWOKN5ZXEcUYLO7EBVUCpJJ6AYq8Z87+dT51VNL0NBFoF&#xA;tcQ3Da86/vZ5beQSJ9RVhQJVaNM4IYEqqkEnNdrdZGIMRuS5en08pG+QeU+fLbU9OntdTFzL9ftG&#xA;aS31A8AJgTykVlRVVZQoDFeNHCnj1ZVPY2rjjy7j0S2kO7z9zPW4OOH9Icv1JDqtzrt/KfN/1cfV&#xA;rgpDdGOpRXijSMhh1UNxBHzpne6cxx/uwdw87IWxPzQs2oX6XOkymHUI0ieFg3BqsXSVa/6oUnOZ&#xA;9opRjmBkLhKO/wCh6PsLDkyYpDGaywkDHetjtL9DLbDzfrsdpGVPpOFpxkjjkkWn7IZg23y2zh5Y&#xA;wDWxD6LGAyRBlEg9R5/cfew/X/zO1Z9QSB0mLo5FzFLxjO42CBCVFa1zY4OyoyiZEjflTz+p7e8H&#xA;IIQgRR9QlQP6ffahq08yRvLcKqT/AAHgDyAc04rXatDhwRFgR5OTrsshAynQlttz36e9nN9qHoeX&#xA;tOB+OB9IsomHYMEZtvcHjmoji4s0+/xZn7R+11nYWEeDkl5j7L/WgfLF9Yrq8CzsGt5j6b/EVI5b&#xA;Bqggih/DLdbjn4ZrmN3YCNllfmGPQeaxtcM4UVdTcSSb9tizZqdHPLV1/sQP0OTHTE8wwK/4XWrL&#xA;p2n8o1mdI1dtyDJQD6KnOn7N08ss4RPORdX2zqBpMGTIf4Ik/Y+gtA/MfRLeSPSWX6taabbxWwRB&#xA;zPNFVa0G4RQKDOr1emOKZHTo+fdl64ajDGX8Vbjz/Uya4sNH8wvFcuEnsol5JMpoWdh/MKH4R498&#xA;rw6ieP6S26vs/DqBWSN/f82DavoGlq1xcrLKIYwSoJWtF6Dp3zOHa+TqA6b/AELacfTKQ+X6mG+X&#xA;rUW95fXsJdGk/wBHElaM4B5ynkD0Z6KR4pnM9ta2eWQiTy3+b2HY2gx4YExHl8mQWdlPdPxjHwj7&#xA;TnoM0ZLuiaRMa20uoHRtFsJtf11f7y1tyAkNQaNczEiKBdv2jy8AcysGjnk35R73EzaoQ97ONE/J&#xA;bUr0LN5s1Qwwnc6JozNbxUr9ma7+G4l22bh6Yzb4dDjh0s+brsmqnLrT0jy/5Y8veXbIWOh6dBp1&#xA;qKVjt0CciO7kfE592JOZjjpnirsVdirsVdirsVdirsVdirsVdiqndXVta20t1dSpBbQI0k00jBUR&#xA;FFWZmOwAHU4q8T81+ZLrzzOIxzt/JsZrDZsCj6iwNVmuAaEW+1UhP2/tPtRc1Ot19emHPvc7T6W/&#xA;VJu3t3ldYol36ADYAD+Gabm7AkAJrd+WtJvtLm03UIFuYLleMwbr4gqRupU7qRuDvl+MmBsc3Gme&#xA;Lmwjy75dHkySby7eyG40q/lLaVdyqOLlkCtbS/siTimwpRxUjeoHU6ftDx4i9pxH2dHS6nTGBsci&#xA;87/Nbyfb6NrWlXuix+mlwZnktyT6YKemhUGhoGWZiB7ZX2xn48Q4/df2j7naezgn4/o5jeu/ofsJ&#xA;SK5uoLaEzTt6cS7sxBNPnSucnCBkaHN9JzZo448UjUWO2XmHQby8NvHZcrq5lKliqEOB+2zNvTiO&#xA;lM2GTSZYRsy9IH4Dz+n7T0ubJwDHc5y7hv5kny6N61dwRylpxUvKEiFNuQ+z+rHTQJG3c29o54RP&#xA;q6yoe/oyG5jebQLAiWsc0EKqvUL6UEQP3tXMXiAzS25E/bKX6HWdkxlDBfSZ+7+xJDZXcbVC1I3D&#xA;KfDMvxIlz+IMhZzJ++kYKZKtuamvWlBXNaIEbB3B1mOru0Pp9vcPqXqWf+9cfKcHYkAAqKV7/Ftn&#xA;Q9hyEc4JNCI/Y8R7VxObSyjV8Z5fb+ikRpVpeXepRwQMyTM3xSb1UD7TH5Z3nAJ7HcPlOXUfl4mf&#xA;KvxT2SLzlfaVpUWmpHHJAF4KacHC9zVdqnvtvmLk7Jxy+kmLRovanU8piMx8j+Pgxbzf58EGlFRb&#xA;BWc13eoITfwHemYeXswY4mRlsPL9r0Gj7eOolwxx0ff+xR8p6t5cWAQajeKsVnC0t5c2oMsLOKvI&#xA;TIgKozmrHl3NBXOIz4pzmZV9R+L3ePLGEBEHk9M0DyP5i83hJp45fKvlQU9GOMenql4lOtSK20be&#xA;J/eH/Jrmdp+zxHee57un7XCy6onYPWfL3lrQvLmmR6XollFY2MXSKIUq3dnY1Z2PdmJJzZOImWKu&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KvFfO3mcedNRfTbVuflDT5eMxG6ajdRNuP8AKtoHHykcfyr8&#xA;Ws1+s4PRH6vuczS6fi9R5IfNE7RkOmWYt4AWH71929vAZdEU405WUbkmCG1LTbLUrKWyvYhNbTCk&#xA;kZqOhqCCN1ZTuCNwdxkoTMTY5oIBFF4p+a+n+YLBdLtL1Wu7CC6P1TWQByaN4mAhuR2l5KPiGzjf&#xA;Y7ZtM+rjm08gfrFf2tnY2HwtZEg+k2P2PNtV8w2GmXEcV2SBKpYFfiIp2Zeu/Y5qcGknlBMej2et&#xA;7UxaaYjPqOn6R9ynoun6DLbpeWlsjGRjKHkCtIrE1678aeAyWoy5QeGR5beTX2fpdLKAyY4jc3vR&#xA;IP6Env4rd9QgnnlJbkfShPQsdth9Nd8y8UiIEAfF12qxwOaM5nrtHz8k5W7NrpNjBFvGAxKmvWpJ&#xA;6+7ZRkhxZpEtmmEY6aER04vvbGpwBeUgMY/mNKffkRhkeW7GeSMfqIHvZHpdzeX2k/VdN0q5v7kq&#xA;wVoreSZByJ4kvGrr95zGloMnicRNR99Mf5QwCP1WfIE/byTTyn+XX5hwzS3LaKI3mUKst3cRwgCt&#xA;TVU9Z+w/Zzc4M+PEDZv3Og7QzHORwigL5s5078sfNALPcX2nWE0n95Pa28tzMR/JzleFKd6+lXMz&#xA;H2/PEKgNvN5/W+z+HVV4vTu2+aaxflNpUjK+qapqGoOPtL6q20Z9qWyQtT/ZZj5e3tVP+Kvc2af2&#xA;e0WL6cY+O/32iLjyD5T00wz2el26upp68q+tKD1B9WX1JPxzVZ9VlmblIn4u60+DHAVGIHwVLqxD&#xA;QNFcRCS2mUoysA0bowoVPUEEdsxgSDblbHZkn5N+Zp1+t+SdTmaW90dFm0meQ1efTHPGOpqSz27f&#xA;unJ7cT3zptLn8WAPXq6bNi4JU9OzIanYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWE/m3qOoW/km/wDq&#xA;ErRKCi6pNEGM0dgWAunh4/tLHWp6hakfEBkMnFwnh5so1Yvk8+tIrWG1hitFVLWNFWBY6cBGBRQt&#xA;NqU6ZykiSd+bvABWyaaZp8k0izOKQqa7/tU8MMYsZzrZP8tcd2KuxVDahp9lqNlNY30K3FpcKUmh&#xA;cVVlP+ex7YYyINhXz556/K670/U00eG2l1ez1H1X0wpR7gBKM6PUijR8h8fQj7sugDfHAiPf3O5x&#xA;dpYp4Ti1AMu48z+whV0X8mfOQiVLfS7XS0IAZrmZFc0FKsLdZ6n5nITiJG5zv3ftpsh2viwisOKv&#xA;fQPxq7TSy/5xn9W4jutX10mRD8MVrDQKO/F3b9aZkjVRiOGMXTZc2TJPjJ3HLyZjp35GeRbUILkX&#xA;mo+mAqfWbl1AA6DjB6I+/KTqD0AHw/W1gyquKXzZNpnkjyfplDYaLZwOOkohQyf8jGBf8chLNM8y&#xA;WIgB0TvKmTsVdirsVQ2pqGsZa9hUfQcEuTOHNI7W8ltyQPjjb7UbdDlQNN8o2g/Mso0tbLzro8ZN&#xA;75dl+s3VuvWWxccLyGnTeL4x7qM2OgyiM66ScLUwJG/R7fYX1pqFjbX9nIJrS7iSe3mXo8cih0Yf&#xA;NTXN865XxV2KuxV2KuxV2KuxV2KuxV2KuxV2KoDU7ZXUuVDKw4yKRUEHbcYq8XsNIi8uea28q3RP&#xA;6OmR7ry3IxJDwKayWhJ/atifhH+++Pgc02v0tHjHI83P0+c1wsyAAAAFAOgGYDa3irsVdiqT+ZfN&#xA;Gl+X7NJ7ws807GO0s4hymnkArxjX2G7MdlHU5OGMy9yCXlj6/qUXnDRPNGuSlSbv6m9tGx+r2lrd&#xA;xtGF3pypJwZ37n2AGZEJCQlCPKr8yQuTEYASPO3tWYaXYq7FXYq7FXYq7FXYqgdZmCWZT9qQgD5D&#xA;c5GZ2bMY3SDKnIXRyMhJFCCCrKRVWU9VYHqDhBpiRaefkhrZs9O1HyfdMSfL8/8AoDmpJ0+6rLb1&#xA;J3b025xf7HOo02bxICTpc2PgkQ9TVlYVU1B6EZe1t4q7FXYq7FXYq7FXYq7FXYq7FXYq4gEEEVB2&#xA;IxVg35jeTG17Rjb20n1bVbSRbzRb3/fV1FulafstUo4/lORlESFFINbsb8p+YRrukLcyRG1v4He2&#xA;1Oyb7VvdQnjLE3yO49iDnPZ8RxyouwhPiFpzlTN2KpB5u83Wnl60T4PrWp3VU0/T0NHlcdST+xGn&#xA;V3PT50GWY8fFudgOZQT0HN5usd5cXsmqapMLrVp1CSzAEJGgNRDAp+xGPvY7tvkcmW9htH8c3MxY&#xA;eHc/UhvMGmwajotzaz7RM0BdwKlUFxHzYbjcJXDppmMwR5/cx1MbhT1DyJrM+reV7Oe7P+5CANaa&#xA;iO4ubZjFLX/WZeXyOHNECW3LmHEgdt0/ypk7FXYq7FXYq7FXYqx7Vbn1rogH4I/hX+JyqR3cjHGg&#xA;g8i2OxVB6fdHR/zB0LVAQttqYk0W/NCT++/fWh8BSeMpX/Lzb9l5dzD4uv1sOUns0U8kRqhp4jtm&#xA;5dejob+N9n+BvwxVFYq7FXYq7FXYq7FXYq7FXYqtkljjFXYL88VQsmpINo1r7nYYqhJrmWXZzsNw&#xA;AMVeXee7I+U/MaedbYEaPqBjtPNMSjZP2Le+p/xWT6cn+SQe2YurweJHbmG3Dk4T5MjBDAMpqDuC&#xA;OhGaFz0q8zeY7Ly/pT39yDI5YRWtshHqTzP9iJK9z+AqegyeOHEaQTTy2MX1zez6rqsgn1W72kZa&#xA;+nDECSlvCD0jSvzY/EfYZcl7D6R+LLl4cXDufqKIylvauYml0fVwn2xYXBjPg4SqnanfJ4j64+8N&#xA;Wf6CyXyVdLaebdW00GlvqsEWr2i9B6gAguR89omPzy474wesdv0j9LhyFTPnuzvKVdirsVdirsVd&#xA;iqG1G5+r2rMDR2+FPmcEjQZwFljZIAJJoB1OUuQlf+JtFeb6va3Bv7kNxNvYJJeyhvBktllZf9lm&#xA;TDSZZcon7mqWogOZTK003zrqBH1PQGtYif7/AFSeO1WniI4vrU30Mi5mQ7LkfqIDjy1w6BN4Pyv1&#xA;C89A69rAaOGaK4Frp0PoD1IJFlj5TStPIeLoDVAlcz8GhhjNi7cXJqZTFHk9BzMcd2Kq0N1LFspq&#xA;v8p6Yqj4LyKXb7LeB/gcVV8VdirsVdirsVdiqDvbiaNgq/CpFQ3fFUASSak1J7nFWsVdiqjeWdre&#xA;2k1ndxLPa3MbRTwuKq6OOLKw8CDiry7Rbr/CN5d+U9bueNrp0LXeiajO1BNpi9UZjsZLX7Df5PFq&#xA;Zp9bpiJcUev3uZhybUejAtVv9c17zVY63fI1vpE1pPLoVjIKOkBkjjjupAejXI9SngoHjuNTiGLC&#xA;B/ETu3aWXHkvoAjM1js3YqmWk23r217GRUSRmKh6HmCMF0QWvILFIaG6Nmnk3zBTisLW9tdHsINQ&#xA;iWE1Pgspjb6My8f1Th339n4Lh5PpjL8bvVsoQ7FXYqtkkjjRpJGCIoqzsQAB7k4VY/efmD5Rtyyp&#xA;freyIeLR2KvdkN4MYA6p/siMs8GXXb37IBvluk13+ZN9ISum6OVANPWvpkj/ANkscH1gt8mZcFQH&#xA;M37v202DFM9KSW+17zRqBBudQSBVaqR2cCRingxnNyx+YI+jImcekfn+ym2OAjmWOeaLC2k8vam9&#xA;wHumS2nlja5d5yjiNiGj9Uvwp/k0y3Bll4kem45bIzYoiB9z6W0m0sbTTbaCxiWK1WNfSRFCClBv&#xA;xUAVOdE6RF4q7FXYq7FVRIJn+yhPv2+/FURHp0h+2wUeA3OKo2KP00C8i1O5xVfirsVdirsVdiqh&#xA;ew+pCafaXcfxxVKsVdirsVdiqV+YPK3l3zFbx2+t6dBqEULiSFZ0DFGBBqp6itN6dRsdsVeTfmBI&#xA;03n7USNorO1tLKNBsFKq9wafMXI+7NP2nLeIdp2fHYlJM1bsXYqyDQY+NmX/AJ3JHyG2QLXJLk0l&#xA;9Q/L+301Pgnk06FYD04TJEpjb/YyKDmR4nDmMv6TRwXjryZHpv5k+WptGs7yS5MlxNDG01tbpJcS&#xA;RyMoJjlESv6bA9edKZOWGQNFoEr5IO8/Mi9Ysum6ORQ0Et9MkQI/mVIBcE/JiuCoDmfl+2mwYpno&#xA;k135l833nISamtmhOy2ECRnj4M8/1lvpXjg8SI5R+f4DYNP3n5JTPptrdP6l9zv5Khg17JJdUI7q&#xA;JmcJ/saYDnn0Ne7b7mwYIDoigABQbAdBlTa7FXYqgdegefQ9Rgj/ALyW1mRPm0ZA6ZZhNTifMNeU&#xA;XAjyfQfli8F75b0m8HS5s7eYU/4siVvfxzqHn0yxVERWU0gDbBT0JP8ATFUSmmxj7bFvYbDFVdLe&#xA;FPsoK+PU/jiqpirsVdirsVdirsVdirsVdiqVXcPpTED7J3XFVDFXYq7FXYq8p/NzQTYX0PmeAf6H&#xA;cmO11cb0R/sW9yewB2if/YeBzA1+n448Q5hzNHn4JUeRYbmidy7FWWWUPo2kUfQqor8zufxyBaig&#xA;vLX/ABwbL/jGP1nLM31lrx/SG9btg9oJFFDCeg/lOxyALbFIMkzdirsVdirsVdirRAIodweoxV6v&#xA;+T929x+W+hpIwMtlC1hJ7NZSNbd/+MWdVGVgHveckKNMxySETaXRibi28Z6+3viqZggio3B6Yq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYqoXsPqQkj7Sbj+OKpVirsVdirsVQ+o6fZ6jYXFhexLPZ3cbQ3ELdGR&#xA;xxZT8wcVfPt1pt5oOs3fly/dpLiyo9pcP9q5snJEM3arCnCT/LB8Rmg12n4JWPpLudJn440eYRNj&#xA;B613FHSoLVb5Dc5glyyyvINaXeXEZNDsgwofSU/Qdx+ByzN9ZYY/pCPdFdGRhVWBBHscrZsTmiaK&#xA;V4m6oSD9GWNizFXYq7FXYq7FXYqz38kLnjp+vaZvS01IzxV/kvIY5j/yV9TOj0c+LEHR6qNZC9Kz&#xA;Jcd2Ko/T5yaxMem6/wBMVRuKuxV2KuxV2KuxV2KuxV2KuxV2KpVdw+lMQPsndcVUMVdirsVdirCv&#xA;zQ8lz6/pcV/paj9P6SWlshUKJ42H721dj+zKAOJ7OFOVZsQyRMS2YshhKw888pTw3sTXsQIQrx4u&#xA;OLK1SHRlP2WUrRh2OczlgYHhPN3gmJAEMiypUv8ALrM3l/TGY8mNpAWYdCTGu+WZvrPvLDH9I9yY&#xA;ZWzSLXrfhOsw6SCjfNf7MlFlEpXkmTsVdirsVWTTQwxtLM6xxIKvI5CqB4knbCASaCCQOazTZL3W&#xA;G4aDp91q/wAXH1raOluDSu9zKY4PueuZePQZJdK97jT1mOPm9Q/LHyh5i0S51O/1hbeA6jFbJHZw&#xA;SNMyG3aYlncpGvJhMBRajbrm402Dwo8N26vPm8SV1T0BIZZPsKT79syGlEx6dIftsFHgNziqKhs4&#xA;YiGAJYdGOKq2KuxV2KuxV2KuxV2KuxV2KuxV2KqF7D6kNR9pNx/HFUqxV2KuxVVjtZ36IaeJ2/Xi&#xA;qJj00/7sf6F/qcVePfmZ5abyfr7ebLFD/h7VZFTzBCo+G3uGosd6AOgc/DN9DbmuYOu0viRsfUHJ&#xA;02bgNHkULez+jYz3ANPTieQMN/sqTXOfiLIDtSaCjokXo6LYQ04+nbQpxPbjGBTDlNyJ80QHpCNy&#xA;DNB6rB61k4H2k+Nfo6/hhCQxrJs1C7vrKyj9W8uI7eMmgeV1QE+FWIyUYSlyFsZTEeZp2mNrOt0/&#xA;w9o17qiNXjdCP6va1H/Lxcekh/2HLM3H2fklz2cWeugOW7KtN/KLzrfkPq2qWujQGh+r2CG7uKd1&#xA;aaYJEv0Rtmbj7OgOe7iT10zy2ZpoX5J+S7GVLiawfV7xKlbzVnN0wrv8KPSFP9hGMzYY4xFAU4kp&#xA;mXM2z2LSwqgMwVQKBUGwAybFEx2lunRKnxO+Kq2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ko&#xA;CTT5DKeFAh3Fe2Kr001B9ti3sNsVRMcEMf2EAPj3+/FV+KuxVD6hp9nqNjPY3kSz2lzG0U8LgMrI&#xA;44spB6gg4q+dNc02+8oPq3lO95zWyWdxceXbtzUz2ioawMx6y29Qp8V4nNNrNLw5BMcid3YafNcT&#xA;E8wE/jRY41jX7KAKPkBTNSS56Var5u8taU/p32oRRz14i3U+pMT0oIo+T/hluPT5J/SGueWMeZW2&#xA;l1521sAaB5XufQbYX+rMLCGh6OI25TSL8kzPx9lyP1GnGnrR0CZ6Z+SWv3tG8w+YPQVtnsdFi9MU&#xA;/wCYmf1Jf+BVcz8egxx6X73HnrMkutM58u/k/wCS9GlW5tdIikvQQx1C9JurksP2vUmMjKf9WmZY&#xA;iAKDjEk82Zx6bGPtsW9hsMKETHBFH9hAPfviq/FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYqxb8xfI1t5v0FrMyC31CA+rp97x5mKXiVNVqOSOrFHWu6k/PIyiJCimM&#xA;iDYYNY/kit2Q3mXXNQ1o9JLWFv0fZsPBorchz9MuU49LjhyDZPPOXMs48u/l55a0BAuj6VaacaUa&#xA;SGJfVYf5cn22+lsyGpkMdhAv2quffp+GKohURBRVCj2FMVbxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV/9k="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpTPg:MaxPageSize
    stDim:w="2000.000000"
    stDim:h="2000.000000"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li
      xmpG:groupName="Default Swatch Group"
      xmpG:groupType="0"/>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
      
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
2000 2000 li
2000 0 li
cp
clp
2000 2000 mo
0 2000 li
0 0 li
2000 0 li
2000 2000 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
419.311 1448.62 mo
388.43 1457.84 355.934 1468.63 322.158 1481.31 cv
279.941 1497.16 241.082 1513.95 205.667 1530.81 cv
226.729 1577.17 244.788 1614.98 257.696 1641.55 cv
270.432 1667.76 282.916 1692.63 307.884 1742.38 cv
338.979 1804.34 356.602 1838.68 361.065 1847.36 cv
377.005 1878.39 390.146 1903.56 398.591 1919.65 cv
421.793 1913.83 449.814 1906.38 481.47 1897.09 cv
528.021 1883.43 528.515 1881.59 584.378 1865.09 cv
609.376 1857.71 630.651 1851.76 667.257 1840.23 cv
680.339 1836.11 691.058 1832.63 698.107 1830.33 cv
699.269 1833.46 701.151 1837.95 704.093 1842.99 cv
708.55 1850.63 713.121 1855.57 714.453 1857.03 cv
727.424 1871.33 756.24 1912.71 774.54 1938.99 cv
785.688 1955 793.555 1966.99 808.152 1984.58 cv
813.724 1991.29 818.455 1996.62 821.505 2000 cv
841.333 1994.14 879.241 1982.96 899.549 1976.98 cv
981.154 1952.93 1000.27 1947.39 1030.08 1938.53 cv
1084.4 1922.39 1104.38 1916 1176.73 1893.87 cv
1320.97 1849.75 1332.13 1847.45 1423.99 1819.05 cv
1468.64 1805.24 1532.89 1785.1 1610.93 1759.65 cv
1606.73 1748.3 1600.21 1732.96 1590.21 1715.91 cv
1578.58 1696.08 1567.45 1682.79 1557.29 1670.79 cv
1545.1 1656.38 1527.69 1637.66 1504.34 1617.83 cv
1504.13 1616.43 1503.93 1615.02 1503.72 1613.61 cv
1561.74 1596.21 1608.77 1583.21 1641.01 1574.55 cv
1682.84 1563.32 1719.02 1554.24 1774.38 1537.72 cv
1800.22 1530.01 1821.25 1523.36 1834.86 1518.99 cv
1836.24 1518.28 1837.62 1517.56 1839 1516.84 cv
1778.16 1483.01 1728.78 1456.15 1695.65 1438.26 cv
1632.18 1403.99 1602.94 1388.89 1560.59 1363.06 cv
1513.12 1334.1 1476.27 1308.18 1453.46 1291.54 cv
1086.1 1292.35 718.735 1293.17 351.374 1293.98 cv
341.711 1296.11 332.05 1298.24 322.388 1300.36 cv
324.322 1304.02 327.214 1309.52 330.676 1316.25 cv
335.867 1326.33 339.545 1333.75 340.115 1334.89 cv
348.918 1352.54 366.496 1376.74 375.108 1388.54 cv
393.854 1414.22 408.707 1434.33 419.311 1448.62 cv
cp
.921569 .921569 .921569 rgb
f
507.897 914.299 mo
498.179 895.827 488.356 877.409 478.429 859.046 cv
470.916 845.148 463.344 831.284 455.714 817.453 cv
453.008 818.524 449.119 819.792 444.318 820.446 cv
437.007 821.443 428.872 822.553 421.526 817.568 cv
412.287 811.299 411.045 799.966 410.936 798.806 cv
410.725 796.561 410.896 794.847 410.936 794.431 cv
411.688 786.574 411.425 751.334 410.898 680.856 cv
410.573 637.448 411.504 594.039 411.348 550.63 cv
411.347 550.216 411.341 548.935 411.512 547.252 cv
411.59 546.48 412.568 537.685 417.498 531.137 cv
425.587 520.39 439.461 520.379 441.057 520.393 cv
443.054 520.41 448.034 520.505 453.258 523.232 cv
455.388 524.344 456.81 525.502 457.326 525.918 cv
465.351 532.395 474.325 537.608 482.573 543.799 cv
496.177 554.009 532.128 579.615 586.786 618.543 cv
586.786 618.543 629.949 649.286 650.94 664.894 cv
654.196 667.315 658.457 670.711 662.221 673.259 cv
662.499 673.447 663.159 673.891 663.986 674.563 cv
664.151 674.697 666.832 676.904 668.821 679.858 cv
673.124 686.25 672.888 693.441 672.888 693.441 cv
672.686 699.609 669.911 703.918 668.514 706.027 cv
666.615 708.893 664.637 710.654 661.646 713.317 cv
658.295 716.3 655.226 718.434 653.013 719.84 cv
668.438 750.557 683.915 781.253 699.44 811.928 cv
712.021 836.785 724.632 861.623 737.273 886.442 cv
742.798 885.809 748.323 885.169 753.849 884.524 cv
759.069 883.915 764.287 883.301 769.504 882.682 cv
762.225 849.229 756.093 822.127 751.93 803.947 cv
744.178 770.091 734.468 728.796 724.764 684.54 cv
723.054 676.74 719.658 661.161 715.632 640.645 cv
712.706 625.73 710.457 613.361 708.956 604.884 cv
703.583 605.438 699.096 605.294 695.833 605.018 cv
692.458 604.732 689.623 604.475 685.991 603.291 cv
683.477 602.472 680.156 601.354 676.725 598.514 cv
673.341 595.712 671.606 592.687 671.027 591.607 cv
669.096 588.005 668.654 584.84 668.552 584.01 cv
668.218 581.292 668.516 579.194 668.897 576.643 cv
669.428 573.093 670.264 570.498 670.452 569.909 cv
673.071 561.694 674.615 553.171 676.956 544.873 cv
682.352 525.74 685.423 511.752 701.704 452.094 cv
711.504 416.185 709.898 423.056 712.064 414.492 cv
718.97 387.174 727.727 360.343 734.51 332.994 cv
734.668 332.357 735.104 330.577 736.199 328.466 cv
738.373 324.272 741.533 321.886 743.949 320.102 cv
746.817 317.983 750.211 315.477 755.46 314.423 cv
760.935 313.323 765.324 314.426 767.355 314.96 cv
769.24 315.456 772.767 316.594 776.333 319.104 cv
778.429 320.579 780.162 322.261 781.015 323.094 cv
782.552 324.598 783.608 325.843 784.008 326.317 cv
799.455 344.643 803.192 349.723 803.192 349.723 cv
819.677 372.13 838.212 392.953 855.721 414.568 cv
869.069 431.047 883.525 448.838 900.269 469.591 cv
900.269 469.591 908.542 479.847 927.78 504.239 cv
934.05 512.189 931.486 509.1 934.629 513.045 cv
937.661 516.852 938.604 517.916 940.039 520.182 cv
941.976 523.24 943.552 525.729 944.356 529.161 cv
945.729 535.02 943.993 539.986 943.492 541.362 cv
940.78 548.815 934.716 552.739 931.751 554.657 cv
929.818 555.908 927.585 557.006 923.118 559.204 cv
920.066 560.706 917.493 561.868 915.693 562.657 cv
915.693 562.657 927.204 606.342 938.946 666.659 cv
950.687 726.977 960.356 772.33 960.356 772.33 cv
962.428 768.762 li
962.428 768.762 965.651 716.617 969.795 661.594 cv
973.939 606.572 980.155 524.844 981.767 510.34 cv
983.378 495.836 984.184 484.325 985.795 475.231 cv
979.004 473.159 964.96 466.713 958.284 458.886 cv
951.607 451.058 949.42 438.051 954.255 429.303 cv
959.09 420.554 979.694 387.288 995.119 362.769 cv
1010.54 338.25 1055.32 267.343 1067.64 247.774 cv
1079.96 228.206 1087.44 215.198 1095.19 205.989 cv
1103.53 196.081 1118.13 195.706 1125.96 199.313 cv
1133.79 202.919 1138.32 207.524 1141.92 215.428 cv
1145.53 223.333 1176.99 293.703 1186.78 316.034 cv
1196.56 338.366 1225.34 403.748 1233.28 421.936 cv
1241.22 440.123 1244.6 446.416 1245.83 454.934 cv
1247.06 463.452 1242.22 473.965 1235.78 478.953 cv
1229.33 483.941 1218.82 488.853 1207.38 490.694 cv
1207.23 501.054 1206.69 525.841 1204.54 556.998 cv
1202.39 588.154 1199.63 614.246 1198.86 629.287 cv
1208.84 651.849 1221.73 681.01 1236.93 714.161 cv
1252.12 747.313 1266.24 779.083 1273.3 795.199 cv
1284.51 761.126 1294.33 731.198 1301.54 709.557 cv
1308.76 687.916 1314.28 674.103 1316.89 667.657 cv
1309.06 661.978 1301.62 653.383 1298.09 647.244 cv
1294.56 641.105 1289.49 630.054 1294.17 619.234 cv
1298.86 608.414 1304.3 604.423 1310.14 598.744 cv
1315.97 593.065 1378.59 532.134 1401.61 510.187 cv
1424.63 488.239 1473.98 441.504 1490.02 426.08 cv
1498.2 418.208 1507.21 411.652 1521.64 414.164 cv
1531.79 415.929 1541.37 422.776 1544.81 436.669 cv
1552.63 468.287 1561.46 542.34 1567.91 582.168 cv
1574.35 621.997 1582.26 676.252 1584.25 690.833 cv
1586.25 705.413 1584.83 712.127 1580.68 718.458 cv
1576.54 724.79 1569.29 732.732 1553.98 735.956 cv
1538.67 739.179 1534.52 737.797 1534.52 737.797 cv
1523.76 771.164 1514.24 798.224 1507.36 817.223 cv
1498.98 840.358 1492.87 856.053 1475.59 903.095 cv
1470.15 917.908 1465.69 930.135 1462.7 938.357 cv
1474.61 943.186 1493.82 950.95 1517.64 960.497 cv
1563.5 978.874 1565.95 979.6 1585.33 987.663 cv
1607.86 997.039 1612.81 999.496 1651.02 1015.6 cv
1665.66 1021.77 1677.74 1026.8 1685.86 1030.18 cv
1686.21 1036.42 1686.57 1042.66 1686.93 1048.9 cv
1677.32 1053.05 1663.02 1059.23 1645.64 1066.71 cv
1591.83 1089.85 1588.33 1091.11 1576.73 1096.79 cv
1546.09 1111.77 1522.81 1126.26 1512.27 1132.85 cv
1500.35 1140.32 1488 1148.57 1463.31 1165.08 cv
1451.58 1172.93 1441.85 1179.51 1435.07 1184.12 cv
1438.93 1188.92 1444.43 1196.04 1450.57 1204.99 cv
1457.61 1215.25 1464.16 1226 1478.04 1252.57 cv
1490.06 1275.57 1497.14 1289.11 1506.28 1309.36 cv
1517.04 1333.17 1524.02 1351.56 1529 1364.76 cv
1541.39 1397.61 1548.92 1422.48 1551.25 1430.3 cv
1554.23 1440.28 1556.55 1448.68 1558.16 1454.7 cv
1555.3 1456.02 1551.04 1457.88 1545.73 1459.77 cv
1536.42 1463.07 1529.24 1464.54 1525.78 1465.29 cv
1515.2 1467.58 1514.29 1468.51 1491.86 1474.81 cv
1464.48 1482.5 1455.74 1483.95 1414.81 1494.61 cv
1405.9 1496.93 1392.35 1500.49 1375.67 1505.04 cv
1375.27 1512.83 1374.9 1523.27 1374.91 1535.59 cv
1374.91 1541.02 1375 1561.62 1377.51 1590.69 cv
1380.01 1619.49 1383.55 1641.31 1386.11 1656.83 cv
1390.75 1685.02 1395.78 1709.33 1395.78 1709.33 cv
1396.77 1714.13 1398.11 1720.42 1399.62 1729.43 cv
1400.8 1736.55 1401.44 1741.39 1403.76 1759.21 cv
1404.78 1767 1405.79 1774.8 1406.81 1782.59 cv
1389.81 1788.35 1363.32 1797.31 1330.7 1808.32 cv
1273.53 1827.61 1258.02 1832.77 1240.61 1838.4 cv
1219.58 1845.21 1217.56 1845.67 1154.35 1865.26 cv
1121.02 1875.59 1115.69 1877.33 1030.04 1903.94 cv
956.333 1926.83 949.714 1928.82 939.79 1931.72 cv
913.044 1939.53 895.218 1944.36 858.906 1955.2 cv
837.629 1961.55 820.187 1966.93 808.564 1970.55 cv
796.155 1952.82 786.094 1938.48 779.403 1928.96 cv
756.276 1896.03 749.081 1885.92 745.177 1880.46 cv
741.042 1874.66 733.519 1864.21 718.472 1843.31 cv
709.215 1830.46 698.752 1815.93 693.608 1808.78 cv
681.144 1791.45 674.88 1782.74 673.349 1780.54 cv
668.362 1773.36 663.233 1765.7 643.267 1733.58 cv
629.757 1711.84 621.201 1698.07 609.041 1677.86 cv
600.396 1663.5 590.694 1647.15 580.186 1629.05 cv
581.859 1607 584.409 1590.1 586.479 1578.56 cv
587.649 1572.04 589.59 1562.07 592.158 1546.33 cv
593.671 1537.05 594.806 1529.42 595.534 1524.38 cv
589.613 1531.83 583.627 1539.3 577.577 1546.79 cv
569.633 1556.63 561.702 1566.35 553.788 1575.95 cv
550.306 1574.01 546.828 1572.07 543.351 1570.12 cv
540.434 1568.48 537.518 1566.85 534.603 1565.21 cv
528.924 1556.76 520.186 1543.74 509.585 1527.76 cv
482.937 1487.59 462.416 1455.77 452.951 1441.04 cv
435.057 1413.19 440.08 1420.55 409.363 1372.44 cv
398.882 1356.02 391.985 1345.27 382.504 1329.77 cv
370.26 1309.75 360.655 1293.15 354.417 1282.19 cv
359.894 1273.74 367.23 1262.88 376.365 1250.57 cv
380.333 1245.23 388.508 1234.4 402.303 1218.04 cv
416.004 1201.78 433.325 1181.23 458.937 1156.49 cv
478.904 1137.2 495.3 1123.68 505.441 1115.36 cv
522.584 1101.29 538.045 1089.72 550.718 1080.67 cv
546.618 1071.03 540.575 1057.08 532.915 1040.31 cv
525.314 1023.66 521.414 1015.15 516.492 1005.93 cv
509.995 993.753 503.733 983.883 491.475 964.641 cv
483.527 952.164 476.837 942.006 472.29 935.172 cv
472.264 929.801 472.239 924.429 472.213 919.057 cv
479.087 918.209 486.02 917.314 493.01 916.371 cv
498.007 915.696 502.97 915.005 507.897 914.299 cv
cp
.0666667 .0666667 .0666667 rgb
f
479.542 931.681 mo
479.567 929.801 479.593 927.92 479.619 926.041 cv
485.725 925.24 491.902 924.472 498.151 923.738 cv
502.738 923.2 507.291 922.688 511.811 922.203 cv
518.05 933.96 527.345 951.445 538.747 972.775 cv
547.021 988.255 551.81 997.16 564.071 1020.05 cv
571.888 1034.64 581.47 1052.54 592.158 1072.54 cv
581.158 1074.4 570.159 1076.27 559.16 1078.14 cv
555.801 1069.3 551.092 1057.37 545.04 1043.41 cv
538.827 1029.09 532.863 1015.42 523.514 998.061 cv
513.924 980.252 505.654 967.62 503.485 964.333 cv
494.843 951.241 486.561 940.323 479.542 931.681 cv
cp
.898039 .8 .552941 rgb
f
gsave
479.542 931.681 mo
479.567 929.801 479.593 927.92 479.619 926.041 cv
485.725 925.24 491.902 924.472 498.151 923.738 cv
502.738 923.2 507.291 922.688 511.811 922.203 cv
518.05 933.96 527.345 951.445 538.747 972.775 cv
547.021 988.255 551.81 997.16 564.071 1020.05 cv
571.888 1034.64 581.47 1052.54 592.158 1072.54 cv
581.158 1074.4 570.159 1076.27 559.16 1078.14 cv
555.801 1069.3 551.092 1057.37 545.04 1043.41 cv
538.827 1029.09 532.863 1015.42 523.514 998.061 cv
513.924 980.252 505.654 967.62 503.485 964.333 cv
494.843 951.241 486.561 940.323 479.542 931.681 cv
cp
clp
580.493 1070.81 mo
573.932 1071.81 567.371 1072.81 560.81 1073.8 cv
557.552 1066.28 554.315 1058.67 551.102 1050.97 cv
549.731 1047.69 548.376 1044.42 547.035 1041.15 cv
551.229 1041.41 555.425 1041.66 559.62 1041.92 cv
550.821 1026.39 544.354 1014.46 540.205 1006.69 cv
533.74 994.596 528.986 985.282 518.679 975.959 cv
515.115 972.735 511.874 970.403 509.624 968.899 cv
507.129 965.108 504.288 960.852 501.125 956.218 cv
499.195 953.391 495.983 948.72 491.916 942.98 cv
488.502 938.164 484.38 932.447 479.619 926.041 cv
478.231 926.661 476.843 927.281 475.456 927.901 cv
476.675 930.318 478.562 933.942 481.038 938.242 cv
489.689 953.264 497.026 961.759 502.525 969.245 cv
508.498 977.375 513.158 986.841 522.478 1005.77 cv
528.548 1018.1 530.439 1023.15 543.965 1053.97 cv
549.239 1065.98 553.553 1075.7 556.243 1081.75 cv
565.35 1080.31 574.457 1078.88 583.563 1077.45 cv
582.54 1075.24 581.517 1073.02 580.493 1070.81 cv
cp
.819608 .654902 .376471 rgb
f
514.996 922.894 mo
514.551 929.06 514.473 936.284 515.226 944.304 cv
516.263 955.346 518.581 964.755 520.981 972.161 cv
519.268 971.541 517.522 970.926 515.744 970.319 cv
513.741 969.635 511.764 968.983 509.816 968.362 cv
506.46 963.327 503.613 959.099 501.47 955.931 cv
496.083 947.964 494.112 945.165 492.146 942.463 cv
488.791 937.85 485.068 932.997 484.952 933.081 cv
484.846 933.158 487.781 937.303 492.952 944.822 cv
496.371 949.794 495.866 949.115 504.06 961.168 cv
518.738 982.759 517.94 981.385 520.406 985.226 cv
525.87 993.739 525.565 993.913 532.838 1005.43 cv
537.919 1013.47 538.065 1013.38 544.924 1024.02 cv
558.481 1045.04 555.695 1041.95 562.824 1052.51 cv
565.526 1056.51 569.488 1062.23 573.817 1070.77 cv
575.178 1073.46 576.215 1075.71 576.886 1077.22 cv
583.205 1076.37 589.523 1075.53 595.841 1074.69 cv
592.251 1067.67 586.851 1057.17 580.186 1044.45 cv
570.296 1025.58 568.558 1022.68 556.167 999.327 cv
541.313 971.335 538.707 965.882 528.463 947.144 cv
522.867 936.906 518.168 928.517 514.996 922.894 cv
cp
.694118 .482353 .239216 rgb
f
grestore
571.428 1083.18 mo
579.938 1090.53 587.228 1096.99 593.079 1102.24 cv
597.937 1106.59 603.878 1111.92 611.649 1119.19 cv
615.875 1123.15 619.433 1126.54 622.105 1129.11 cv
620.993 1126.86 619.063 1122.98 616.58 1118.18 cv
611.852 1109.04 609.116 1104.3 602.767 1092.48 cv
601.249 1089.65 598.869 1085.2 595.947 1079.64 cv
592.241 1080.14 588.509 1080.66 584.752 1081.2 cv
580.268 1081.84 575.826 1082.5 571.428 1083.18 cv
cp
.698039 .482353 .239216 rgb
f
gsave
571.428 1083.18 mo
579.938 1090.53 587.228 1096.99 593.079 1102.24 cv
597.937 1106.59 603.878 1111.92 611.649 1119.19 cv
615.875 1123.15 619.433 1126.54 622.105 1129.11 cv
620.993 1126.86 619.063 1122.98 616.58 1118.18 cv
611.852 1109.04 609.116 1104.3 602.767 1092.48 cv
601.249 1089.65 598.869 1085.2 595.947 1079.64 cv
592.241 1080.14 588.509 1080.66 584.752 1081.2 cv
580.268 1081.84 575.826 1082.5 571.428 1083.18 cv
cp
clp
579.054 1080.25 mo
580.479 1082.96 581.899 1085.72 583.313 1088.54 cv
585.414 1092.72 587.407 1096.85 589.299 1100.91 cv
581.683 1094.66 574.066 1088.4 566.45 1082.15 cv
570.651 1081.52 574.853 1080.88 579.054 1080.25 cv
cp
.898039 .796078 .552941 rgb
f
grestore
561.27 1084.85 mo
569.033 1092.3 581.13 1103.93 595.918 1118.27 cv
613.376 1135.21 619.422 1141.21 652.398 1173.45 cv
680.794 1201.21 692.901 1213 701.666 1221.57 cv
723.579 1242.99 730.393 1249.7 746.559 1265.46 cv
762.395 1280.9 775.28 1293.41 783.49 1301.38 cv
782.435 1305.9 781.379 1310.43 780.324 1314.96 cv
776.407 1319.11 770.762 1324.99 763.748 1331.94 cv
762.799 1332.88 759.498 1336.15 756.611 1338.9 cv
746.333 1348.71 737.814 1355.33 732.611 1359.51 cv
724.839 1365.75 717.779 1372.16 703.661 1385 cv
696.229 1391.76 683.951 1402.96 668.552 1418.5 cv
655.488 1431.69 645.296 1442.83 638.854 1450.04 cv
627.167 1463.11 618.852 1473.24 611.4 1482.33 cv
602.295 1493.44 595.335 1502.4 581.414 1520.31 cv
572.612 1531.64 567.013 1539.01 561.673 1546.16 cv
556.837 1552.63 552.828 1558.11 549.932 1562.1 cv
547.936 1561.04 545.941 1559.99 543.946 1558.93 cv
540.694 1553.99 535.792 1546.53 529.845 1537.41 cv
525.58 1530.87 519.417 1521.39 510.046 1506.85 cv
498.977 1489.67 497.266 1486.88 488.29 1472.95 cv
474.34 1451.29 473.734 1450.73 456.75 1424.54 cv
444.074 1405 445.532 1407.04 428.26 1380.34 cv
408.934 1350.46 410.94 1353.83 399.886 1336.6 cv
392.393 1324.92 386.223 1315.19 376.23 1299.99 cv
371.475 1292.76 367.525 1286.84 364.892 1282.9 cv
371.654 1273.87 381.345 1261.11 393.324 1246.01 cv
406.755 1229.07 415.289 1218.31 427.857 1204.17 cv
442.902 1187.24 455.81 1174.37 463.484 1166.93 cv
481.944 1149.03 497.068 1136.38 506.478 1128.54 cv
517.542 1119.32 528.953 1110.31 544.924 1097.69 cv
551.725 1092.32 557.381 1087.89 561.27 1084.85 cv
cp
.898039 .8 .556863 rgb
f
gsave
561.27 1084.85 mo
569.033 1092.3 581.13 1103.93 595.918 1118.27 cv
613.376 1135.21 619.422 1141.21 652.398 1173.45 cv
680.794 1201.21 692.901 1213 701.666 1221.57 cv
723.579 1242.99 730.393 1249.7 746.559 1265.46 cv
762.395 1280.9 775.28 1293.41 783.49 1301.38 cv
782.435 1305.9 781.379 1310.43 780.324 1314.96 cv
776.407 1319.11 770.762 1324.99 763.748 1331.94 cv
762.799 1332.88 759.498 1336.15 756.611 1338.9 cv
746.333 1348.71 737.814 1355.33 732.611 1359.51 cv
724.839 1365.75 717.779 1372.16 703.661 1385 cv
696.229 1391.76 683.951 1402.96 668.552 1418.5 cv
655.488 1431.69 645.296 1442.83 638.854 1450.04 cv
627.167 1463.11 618.852 1473.24 611.4 1482.33 cv
602.295 1493.44 595.335 1502.4 581.414 1520.31 cv
572.612 1531.64 567.013 1539.01 561.673 1546.16 cv
556.837 1552.63 552.828 1558.11 549.932 1562.1 cv
547.936 1561.04 545.941 1559.99 543.946 1558.93 cv
540.694 1553.99 535.792 1546.53 529.845 1537.41 cv
525.58 1530.87 519.417 1521.39 510.046 1506.85 cv
498.977 1489.67 497.266 1486.88 488.29 1472.95 cv
474.34 1451.29 473.734 1450.73 456.75 1424.54 cv
444.074 1405 445.532 1407.04 428.26 1380.34 cv
408.934 1350.46 410.94 1353.83 399.886 1336.6 cv
392.393 1324.92 386.223 1315.19 376.23 1299.99 cv
371.475 1292.76 367.525 1286.84 364.892 1282.9 cv
371.654 1273.87 381.345 1261.11 393.324 1246.01 cv
406.755 1229.07 415.289 1218.31 427.857 1204.17 cv
442.902 1187.24 455.81 1174.37 463.484 1166.93 cv
481.944 1149.03 497.068 1136.38 506.478 1128.54 cv
517.542 1119.32 528.953 1110.31 544.924 1097.69 cv
551.725 1092.32 557.381 1087.89 561.27 1084.85 cv
cp
clp
605.184 1123.24 mo
600.495 1126.85 594.521 1131.6 587.745 1137.34 cv
572.428 1150.34 561.625 1161.17 558.219 1164.63 cv
549.07 1173.9 539.007 1184.1 527.542 1199.39 cv
524.111 1203.96 515.002 1216.39 505.326 1233.92 cv
498.662 1245.99 490.938 1261.92 484.146 1281.4 cv
476.333 1287.14 467.679 1293.83 458.477 1301.55 cv
454.394 1304.97 455.717 1303.97 441.038 1316.69 cv
427.347 1328.54 423.444 1331.79 416.404 1338.21 cv
410.521 1343.57 405.853 1348.04 402.936 1350.87 cv
388.452 1327.47 373.967 1304.06 359.482 1280.66 cv
386.725 1244.2 413.967 1207.75 441.21 1171.3 cv
481.269 1140.99 521.327 1110.68 561.385 1080.36 cv
575.985 1094.66 590.584 1108.95 605.184 1123.24 cv
cp
.819608 .65098 .372549 rgb
f
grestore
793.907 1303.91 mo
814.266 1299.83 845.84 1293.56 884.729 1286.07 cv
924.866 1278.33 934.993 1276.58 994.543 1265.23 cv
1031.56 1258.18 1032.16 1257.97 1093.54 1246.24 cv
1156.43 1234.21 1158.62 1233.9 1200.48 1225.86 cv
1217.99 1222.5 1253.99 1215.58 1297.17 1207.22 cv
1325.76 1201.68 1347.7 1197.41 1379.13 1191.56 cv
1397.76 1188.09 1413.05 1185.32 1423.1 1183.5 cv
1433.64 1199.97 1444.83 1218.41 1456.25 1238.76 cv
1462.21 1249.38 1471.52 1266.03 1482.61 1288.71 cv
1494.61 1313.26 1503.38 1334 1508.97 1347.88 cv
1515.9 1365.06 1521.45 1380.82 1532.57 1412.34 cv
1538.23 1428.39 1542.8 1441.7 1545.92 1450.85 cv
1544.56 1451.44 1543.2 1452.04 1541.83 1452.63 cv
1537.59 1453.57 1531.07 1455.04 1523.13 1456.95 cv
1503.58 1461.64 1489.23 1465.66 1484.34 1467.02 cv
1472.76 1470.23 1471.15 1470.46 1413.31 1484.86 cv
1385.87 1491.69 1358.45 1498.6 1331.01 1505.47 cv
1281.16 1517.94 1256.24 1524.18 1250.55 1525.61 cv
1209.42 1535.96 1204.68 1537.3 1150.98 1550.82 cv
1117.11 1559.35 1114.46 1559.91 1056.7 1574.42 cv
1036.78 1579.42 1009.02 1586.39 975.896 1594.79 cv
938.001 1604.4 907.163 1612.3 886.858 1617.53 cv
886.081 1614.56 883.275 1603.85 882.484 1600.83 cv
878.018 1583.8 873.889 1568.1 872.988 1564.69 cv
861.272 1520.3 848.776 1480.18 848.776 1480.18 cv
839.89 1451.65 832.55 1430.57 830.358 1424.31 cv
822.016 1400.49 814.839 1381.83 810.867 1371.67 cv
806.597 1360.75 802.806 1351.43 799.816 1344.2 cv
798.707 1337.79 797.459 1331.24 796.056 1324.55 cv
795.287 1320.89 794.493 1317.28 793.677 1313.73 cv
793.753 1310.46 793.83 1307.18 793.907 1303.91 cv
cp
.898039 .8 .552941 rgb
f
gsave
793.907 1303.91 mo
814.266 1299.83 845.84 1293.56 884.729 1286.07 cv
924.866 1278.33 934.993 1276.58 994.543 1265.23 cv
1031.56 1258.18 1032.16 1257.97 1093.54 1246.24 cv
1156.43 1234.21 1158.62 1233.9 1200.48 1225.86 cv
1217.99 1222.5 1253.99 1215.58 1297.17 1207.22 cv
1325.76 1201.68 1347.7 1197.41 1379.13 1191.56 cv
1397.76 1188.09 1413.05 1185.32 1423.1 1183.5 cv
1433.64 1199.97 1444.83 1218.41 1456.25 1238.76 cv
1462.21 1249.38 1471.52 1266.03 1482.61 1288.71 cv
1494.61 1313.26 1503.38 1334 1508.97 1347.88 cv
1515.9 1365.06 1521.45 1380.82 1532.57 1412.34 cv
1538.23 1428.39 1542.8 1441.7 1545.92 1450.85 cv
1544.56 1451.44 1543.2 1452.04 1541.83 1452.63 cv
1537.59 1453.57 1531.07 1455.04 1523.13 1456.95 cv
1503.58 1461.64 1489.23 1465.66 1484.34 1467.02 cv
1472.76 1470.23 1471.15 1470.46 1413.31 1484.86 cv
1385.87 1491.69 1358.45 1498.6 1331.01 1505.47 cv
1281.16 1517.94 1256.24 1524.18 1250.55 1525.61 cv
1209.42 1535.96 1204.68 1537.3 1150.98 1550.82 cv
1117.11 1559.35 1114.46 1559.91 1056.7 1574.42 cv
1036.78 1579.42 1009.02 1586.39 975.896 1594.79 cv
938.001 1604.4 907.163 1612.3 886.858 1617.53 cv
886.081 1614.56 883.275 1603.85 882.484 1600.83 cv
878.018 1583.8 873.889 1568.1 872.988 1564.69 cv
861.272 1520.3 848.776 1480.18 848.776 1480.18 cv
839.89 1451.65 832.55 1430.57 830.358 1424.31 cv
822.016 1400.49 814.839 1381.83 810.867 1371.67 cv
806.597 1360.75 802.806 1351.43 799.816 1344.2 cv
798.707 1337.79 797.459 1331.24 796.056 1324.55 cv
795.287 1320.89 794.493 1317.28 793.677 1313.73 cv
793.753 1310.46 793.83 1307.18 793.907 1303.91 cv
cp
clp
889.851 1617.99 mo
888.228 1611.59 886.597 1605.21 884.959 1598.82 cv
883.108 1591.6 881.247 1584.39 879.376 1577.18 cv
876.345 1571.96 873.313 1566.74 870.283 1561.52 cv
874.574 1581.63 878.865 1601.74 883.156 1621.84 cv
885.388 1620.56 887.619 1619.27 889.851 1617.99 cv
cp
.819608 .65098 .372549 rgb
f
1331.47 1195.93 mo
1336.71 1204.57 1343.38 1216.72 1349.54 1231.96 cv
1356.18 1248.38 1363.19 1265.73 1364.62 1288.94 cv
1366.24 1315.13 1359.94 1335.35 1355.53 1349.49 cv
1352.19 1360.19 1346.63 1372.28 1335.5 1396.46 cv
1330.89 1406.47 1325.79 1416.95 1315.58 1437.9 cv
1301.88 1466.03 1300.63 1468.1 1296.94 1476.57 cv
1291.96 1487.99 1286.2 1502.67 1280.82 1520.31 cv
1330.98 1509.91 1382.85 1498.01 1436.22 1484.4 cv
1476.78 1474.06 1516.08 1463.27 1554.09 1452.17 cv
1546.84 1427.58 1537.85 1401.74 1526.7 1375.05 cv
1523.58 1367.6 1520.41 1360.33 1517.18 1353.25 cv
1490.93 1329.19 1461.86 1304.31 1429.85 1279.27 cv
1400.98 1256.69 1372.83 1236.43 1345.86 1218.27 cv
1369.1 1227.14 1393.04 1236.81 1417.57 1247.35 cv
1441.94 1257.82 1465.27 1268.45 1487.56 1279.12 cv
1466.46 1245.48 1445.35 1211.85 1424.25 1178.21 cv
1393.32 1184.12 1362.4 1190.03 1331.47 1195.93 cv
cp
f
grestore
1220.39 926.29 mo
1224.42 924.525 1228.45 922.76 1232.48 920.995 cv
1228.61 932.651 1224.77 944.315 1220.96 955.988 cv
1214.41 976.085 1207.95 996.21 1201.57 1016.36 cv
1205.62 995.298 1209.97 973.96 1214.63 952.362 cv
1216.52 943.61 1218.44 934.919 1220.39 926.29 cv
cp
.698039 .482353 .239216 rgb
f
gsave
1220.39 926.29 mo
1224.42 924.525 1228.45 922.76 1232.48 920.995 cv
1228.61 932.651 1224.77 944.315 1220.96 955.988 cv
1214.41 976.085 1207.95 996.21 1201.57 1016.36 cv
1205.62 995.298 1209.97 973.96 1214.63 952.362 cv
1216.52 943.61 1218.44 934.919 1220.39 926.29 cv
cp
clp
1202.83 995.298 mo
1206.63 991.519 1210.43 987.739 1214.23 983.96 cv
1210.38 996.123 1206.52 1008.29 1202.66 1020.45 cv
1201.38 1020.12 1200.09 1019.8 1198.81 1019.47 cv
1200.15 1011.41 1201.49 1003.36 1202.83 995.298 cv
cp
.898039 .8 .556863 rgb
f
grestore
741.561 895.239 mo
751.546 894.04 761.532 892.841 771.518 891.642 cv
772.746 896.822 773.974 902.001 775.202 907.182 cv
771.995 908.065 768.419 909.252 764.611 910.865 cv
759.993 912.821 756.038 914.977 752.755 917.023 cv
750.822 913.156 748.846 909.261 746.827 905.34 cv
745.074 901.935 743.318 898.568 741.561 895.239 cv
cp
f
1373.26 1180.45 mo
1375.75 1173.6 1378.24 1166.75 1380.74 1159.91 cv
1389.58 1164.72 1398.43 1169.54 1407.27 1174.35 cv
1395.93 1176.39 1384.59 1178.42 1373.26 1180.45 cv
cp
.694118 .478431 .231373 rgb
f
1458.78 947.911 mo
1493.32 961.947 1527.86 976.016 1562.38 990.118 cv
1600.4 1005.65 1638.4 1021.21 1676.38 1036.81 cv
1676.49 1038.85 1676.61 1040.88 1676.72 1042.92 cv
1648.54 1052.43 1624.7 1062.04 1605.89 1070.23 cv
1586.05 1078.88 1557.36 1091.48 1522.32 1112.13 cv
1502.87 1123.6 1487.5 1133.99 1472.48 1144.14 cv
1453.77 1156.78 1438.26 1167.97 1426.78 1176.48 cv
1412.43 1168.38 1398.08 1160.29 1383.73 1152.19 cv
1394.87 1121.43 1406.08 1090.7 1417.34 1059.99 cv
1431.06 1022.59 1444.88 985.235 1458.78 947.911 cv
cp
.898039 .8 .552941 rgb
f
gsave
1458.78 947.911 mo
1493.32 961.947 1527.86 976.016 1562.38 990.118 cv
1600.4 1005.65 1638.4 1021.21 1676.38 1036.81 cv
1676.49 1038.85 1676.61 1040.88 1676.72 1042.92 cv
1648.54 1052.43 1624.7 1062.04 1605.89 1070.23 cv
1586.05 1078.88 1557.36 1091.48 1522.32 1112.13 cv
1502.87 1123.6 1487.5 1133.99 1472.48 1144.14 cv
1453.77 1156.78 1438.26 1167.97 1426.78 1176.48 cv
1412.43 1168.38 1398.08 1160.29 1383.73 1152.19 cv
1394.87 1121.43 1406.08 1090.7 1417.34 1059.99 cv
1431.06 1022.59 1444.88 985.235 1458.78 947.911 cv
cp
clp
1657.77 1021.58 mo
1636.88 1021.81 1609.06 1024 1577.35 1032.02 cv
1553.53 1038.04 1519.8 1046.88 1483.72 1071.92 cv
1468.09 1082.77 1445.73 1101.02 1424.79 1129.79 cv
1435.41 1130.5 1446.4 1131.48 1457.71 1132.78 cv
1463.65 1133.46 1469.49 1134.2 1475.2 1135 cv
1465.86 1141.61 1456.5 1148.18 1447.12 1154.73 cv
1439.28 1160.19 1431.43 1165.64 1423.56 1171.07 cv
1409.03 1163.24 1394.5 1155.42 1379.97 1147.59 cv
1378.84 1150.25 1377.72 1152.91 1376.59 1155.57 cv
1393.94 1164.63 1411.28 1173.68 1428.62 1182.74 cv
1464.34 1154.72 1496.43 1134.39 1520.86 1120.27 cv
1558.79 1098.35 1590.67 1084.21 1619.4 1071.46 cv
1645.62 1059.83 1667.93 1050.92 1684.01 1044.76 cv
1683.61 1042.16 1682.27 1035.91 1677.11 1030.33 cv
1669.66 1022.28 1659.84 1021.67 1657.77 1021.58 cv
cp
.819608 .65098 .372549 rgb
f
1668.67 1031.86 mo
1664.67 1034.11 1659.18 1037.09 1652.55 1040.38 cv
1648.3 1042.5 1632.03 1050.48 1608.12 1058.95 cv
1598.75 1062.28 1587.13 1066.4 1571.28 1070.31 cv
1557.83 1073.64 1541.83 1076.69 1523.63 1078.45 cv
1508.57 1087.66 1496.72 1095.86 1488.63 1101.7 cv
1481.46 1106.88 1469.37 1116.2 1445.2 1134.85 cv
1441.25 1137.9 1435.41 1142.41 1427.32 1148.43 cv
1419.18 1154.49 1412.41 1159.37 1407.85 1162.61 cv
1409.02 1165.12 1410.19 1167.64 1411.36 1170.15 cv
1401 1164.28 1390.64 1158.41 1380.28 1152.54 cv
1382.91 1134.88 1388.27 1113.65 1399.16 1091.42 cv
1401.94 1085.74 1404.85 1080.44 1407.83 1075.53 cv
1415.32 1072.62 1425.03 1068.96 1436.45 1064.94 cv
1459.67 1056.77 1477.27 1051.6 1480.73 1050.59 cv
1498.5 1045.4 1513.56 1041.74 1532.61 1037.47 cv
1556.34 1032.14 1591.61 1024.67 1637.32 1016.48 cv
1647.77 1021.61 1658.22 1026.74 1668.67 1031.86 cv
cp
.698039 .482353 .239216 rgb
f
grestore
607.889 1508.57 mo
614.768 1499.66 623.439 1488.81 633.789 1476.69 cv
636.151 1473.92 645.647 1462.84 658.883 1448.6 cv
664.612 1442.44 675.998 1430.36 691.114 1415.56 cv
703.463 1403.48 712.482 1394.66 725.532 1383.45 cv
746.581 1365.37 753.388 1359.74 753.388 1359.74 cv
757.533 1356.3 761.28 1353.25 766.166 1348.57 cv
773.569 1341.48 779.045 1335.02 782.626 1330.5 cv
785.702 1344.68 789.701 1364.3 793.677 1387.78 cv
803.337 1444.85 806.601 1487.76 809.946 1533.28 cv
815.511 1609.04 815.756 1666.1 815.778 1680.32 cv
815.826 1711.87 815.881 1748.43 812.708 1796.96 cv
810.509 1830.6 807.581 1857.42 806.723 1902.86 cv
806.308 1924.83 806.532 1942.93 806.799 1955.08 cv
804.274 1950.13 800.479 1942.95 795.519 1934.48 cv
785.099 1916.7 776.206 1904.67 769.504 1895.46 cv
749.387 1867.8 755.667 1874.68 729.561 1838.36 cv
701.244 1798.98 701.943 1802.14 685.819 1778.74 cv
682.225 1773.52 670.415 1755.11 646.796 1718.3 cv
627.028 1687.49 617.426 1672.39 612.378 1664.43 cv
602.014 1648.1 593.575 1634.69 588.033 1625.87 cv
591.43 1606.78 594.749 1587.67 597.99 1568.55 cv
601.375 1548.57 604.675 1528.58 607.889 1508.57 cv
cp
.819608 .65098 .372549 rgb
f
gsave
607.889 1508.57 mo
614.768 1499.66 623.439 1488.81 633.789 1476.69 cv
636.151 1473.92 645.647 1462.84 658.883 1448.6 cv
664.612 1442.44 675.998 1430.36 691.114 1415.56 cv
703.463 1403.48 712.482 1394.66 725.532 1383.45 cv
746.581 1365.37 753.388 1359.74 753.388 1359.74 cv
757.533 1356.3 761.28 1353.25 766.166 1348.57 cv
773.569 1341.48 779.045 1335.02 782.626 1330.5 cv
785.702 1344.68 789.701 1364.3 793.677 1387.78 cv
803.337 1444.85 806.601 1487.76 809.946 1533.28 cv
815.511 1609.04 815.756 1666.1 815.778 1680.32 cv
815.826 1711.87 815.881 1748.43 812.708 1796.96 cv
810.509 1830.6 807.581 1857.42 806.723 1902.86 cv
806.308 1924.83 806.532 1942.93 806.799 1955.08 cv
804.274 1950.13 800.479 1942.95 795.519 1934.48 cv
785.099 1916.7 776.206 1904.67 769.504 1895.46 cv
749.387 1867.8 755.667 1874.68 729.561 1838.36 cv
701.244 1798.98 701.943 1802.14 685.819 1778.74 cv
682.225 1773.52 670.415 1755.11 646.796 1718.3 cv
627.028 1687.49 617.426 1672.39 612.378 1664.43 cv
602.014 1648.1 593.575 1634.69 588.033 1625.87 cv
591.43 1606.78 594.749 1587.67 597.99 1568.55 cv
601.375 1548.57 604.675 1528.58 607.889 1508.57 cv
cp
clp
795.211 1375.66 mo
791.835 1378.01 788.458 1380.37 785.082 1382.72 cv
786.975 1390.85 788.868 1398.99 790.761 1407.12 cv
790.605 1424.58 789.941 1446.79 787.998 1472.51 cv
786.887 1487.2 783.842 1523.11 775.873 1569.2 cv
768.059 1614.39 759.184 1648.13 754.386 1666.2 cv
743.385 1707.62 737.885 1728.33 730.903 1745.24 cv
728.87 1750.16 724.889 1759.2 722.001 1772.25 cv
719.914 1781.7 719.98 1786.09 717.858 1795.27 cv
715.258 1806.52 711.612 1815.29 708.956 1820.91 cv
679.015 1783.2 648.063 1739.12 618.709 1688.3 cv
605.729 1665.82 594.117 1643.86 583.716 1622.61 cv
587.665 1593.87 592.338 1564.38 597.836 1534.2 cv
599.913 1522.81 602.063 1511.55 604.283 1500.44 cv
627.918 1471.03 648.929 1448.97 663.526 1434.44 cv
688.303 1409.78 702.902 1398.57 738.424 1364.76 cv
759.638 1344.57 776.388 1327.68 786.924 1316.88 cv
789.687 1336.47 792.449 1356.07 795.211 1375.66 cv
cp
.698039 .482353 .239216 rgb
f
grestore
803.5 1389.55 mo
807.982 1401.04 813.493 1415.66 819.461 1432.75 cv
825.935 1451.3 830.368 1465.37 833.812 1476.34 cv
841.513 1500.87 846.827 1519.64 851.999 1537.96 cv
859.987 1566.26 861.538 1573.34 868.268 1595.71 cv
872.469 1609.68 876.133 1621.11 878.628 1628.75 cv
887.728 1626.66 901.305 1623.52 917.765 1619.65 cv
947.889 1612.58 975.064 1606.03 1005.48 1598.59 cv
1031.83 1592.14 1063.17 1584.4 1106.55 1573.5 cv
1149.91 1562.6 1174.6 1556.27 1214.98 1545.98 cv
1249.78 1537.12 1300.58 1524.22 1363.63 1508.34 cv
1363.5 1516.42 1363.45 1527.01 1363.7 1539.42 cv
1364.31 1569.55 1366.36 1593.04 1367.38 1603.65 cv
1371.13 1642.43 1377.03 1672.58 1383.27 1704.49 cv
1384.36 1710.05 1387.48 1725.77 1392.25 1750.42 cv
1394.33 1761.19 1396.02 1769.97 1397.08 1775.51 cv
1378.47 1781.43 1354.16 1789.18 1334.58 1795.43 cv
1273 1815.08 1254.95 1820.91 1238.46 1826.16 cv
1197.88 1839.08 1193.52 1840.13 1069.25 1878.31 cv
985.3 1904.1 983.33 1904.84 945.622 1916.29 cv
887.724 1933.88 840.628 1947.86 810.252 1956.81 cv
810.96 1946.98 812.023 1931.96 813.246 1913.65 cv
814.96 1887.95 817.442 1850.78 819.231 1814.88 cv
820.671 1785.99 822.577 1746.85 822.915 1695.51 cv
823.044 1675.86 823.083 1633.19 820.843 1578.56 cv
819.778 1552.6 818.677 1525.76 815.548 1489.93 cv
811.975 1449.01 807.361 1414.74 803.5 1389.55 cv
cp
f
gsave
803.5 1389.55 mo
807.982 1401.04 813.493 1415.66 819.461 1432.75 cv
825.935 1451.3 830.368 1465.37 833.812 1476.34 cv
841.513 1500.87 846.827 1519.64 851.999 1537.96 cv
859.987 1566.26 861.538 1573.34 868.268 1595.71 cv
872.469 1609.68 876.133 1621.11 878.628 1628.75 cv
887.728 1626.66 901.305 1623.52 917.765 1619.65 cv
947.889 1612.58 975.064 1606.03 1005.48 1598.59 cv
1031.83 1592.14 1063.17 1584.4 1106.55 1573.5 cv
1149.91 1562.6 1174.6 1556.27 1214.98 1545.98 cv
1249.78 1537.12 1300.58 1524.22 1363.63 1508.34 cv
1363.5 1516.42 1363.45 1527.01 1363.7 1539.42 cv
1364.31 1569.55 1366.36 1593.04 1367.38 1603.65 cv
1371.13 1642.43 1377.03 1672.58 1383.27 1704.49 cv
1384.36 1710.05 1387.48 1725.77 1392.25 1750.42 cv
1394.33 1761.19 1396.02 1769.97 1397.08 1775.51 cv
1378.47 1781.43 1354.16 1789.18 1334.58 1795.43 cv
1273 1815.08 1254.95 1820.91 1238.46 1826.16 cv
1197.88 1839.08 1193.52 1840.13 1069.25 1878.31 cv
985.3 1904.1 983.33 1904.84 945.622 1916.29 cv
887.724 1933.88 840.628 1947.86 810.252 1956.81 cv
810.96 1946.98 812.023 1931.96 813.246 1913.65 cv
814.96 1887.95 817.442 1850.78 819.231 1814.88 cv
820.671 1785.99 822.577 1746.85 822.915 1695.51 cv
823.044 1675.86 823.083 1633.19 820.843 1578.56 cv
819.778 1552.6 818.677 1525.76 815.548 1489.93 cv
811.975 1449.01 807.361 1414.74 803.5 1389.55 cv
cp
clp
901.65 1618.96 mo
906.397 1630.67 913.864 1649.23 922.83 1672.14 cv
932.314 1696.38 946.247 1732.57 962.313 1776.55 cv
971.881 1802.74 979.789 1825.07 989.019 1851.14 cv
996.933 1873.5 1003.38 1891.9 1007.67 1904.21 cv
1085.28 1880.6 1162.67 1856.31 1239.84 1831.34 cv
1294.29 1813.72 1348.62 1795.77 1402.84 1777.47 cv
1400.41 1764.48 1396.72 1744.62 1392.25 1720.38 cv
1376.43 1634.56 1374.41 1621.26 1372.91 1608.95 cv
1369.83 1583.56 1367.07 1546.68 1369.8 1500.65 cv
1314.38 1514.58 1258.41 1528.67 1203.01 1542.65 cv
1102.52 1568 1002.07 1593.44 901.65 1618.96 cv
cp
.698039 .486275 .243137 rgb
f
grestore
464.079 814.768 mo
465.445 814.328 467.504 813.65 469.988 812.772 cv
478.325 809.824 484.35 807.121 487.254 805.827 cv
503.473 798.6 504.578 798.668 520.866 791.208 cv
531.857 786.175 540.549 781.867 557.932 773.251 cv
571.918 766.319 581.209 761.705 593.923 754.987 cv
593.923 754.987 605.608 748.812 620.705 740.253 cv
624.985 737.826 629.622 735.159 635.439 731.504 cv
639.847 728.735 643.492 726.305 646.135 724.502 cv
648.943 730.254 653.266 739.192 658.423 750.229 cv
668.505 771.808 669.907 776.005 677.301 791.093 cv
682.388 801.474 681.912 799.871 692.956 821.597 cv
700.154 835.758 700.092 835.92 708.726 853.022 cv
714.158 863.783 719.021 873.273 728.524 891.814 cv
735.076 904.596 740.421 914.996 743.892 921.743 cv
741.569 923.19 738.54 925.196 735.144 927.786 cv
731.939 930.23 726.443 934.466 720.467 941.196 cv
717.94 944.042 713.55 949.337 709.244 956.794 cv
706.481 961.577 702.741 968.163 700.38 977.514 cv
698.644 984.392 698.391 989.849 698.136 995.355 cv
697.853 1001.46 698.124 1006.01 698.539 1012.97 cv
698.678 1015.31 698.95 1019.41 700.035 1030 cv
700.834 1037.81 701.621 1044.71 702.797 1054.52 cv
703.954 1064.16 704.354 1067.16 705.618 1077.43 cv
707.502 1092.74 707.783 1095.6 709.186 1107.07 cv
710.436 1117.29 711.571 1125.96 713.791 1142.87 cv
716.565 1164.01 717.642 1171.58 720.812 1195.7 cv
722.632 1209.55 724.071 1220.74 724.956 1227.67 cv
720.968 1223.94 715.168 1218.51 708.188 1211.9 cv
701.471 1205.53 695.996 1200.28 685.32 1190.03 cv
674.409 1179.55 668.81 1174.17 661.761 1167.31 cv
655.408 1161.13 650.189 1156 646.643 1152.5 cv
635.92 1132.15 627.069 1115.59 621.012 1104.31 cv
602.475 1069.78 598.769 1063.57 585.481 1038.23 cv
576.257 1020.65 575.084 1018 564.762 998.483 cv
556.18 982.263 554.154 978.733 543.581 958.885 cv
529.486 932.425 530.559 933.951 520.406 914.99 cv
514.852 904.617 503.968 884.317 491.321 861.962 cv
481.581 844.746 477.231 837.687 473.441 830.652 cv
472.771 829.409 470.174 824.556 466.304 818.297 cv
465.373 816.792 464.592 815.566 464.079 814.768 cv
cp
.266667 .407843 .776471 rgb
f
597.368 974.743 mo
595.991 973.803 594.499 972.759 592.695 971.47 cv
589.997 969.543 580.659 962.82 568.982 953.168 cv
566.837 951.395 564.543 949.498 562.101 947.429 cv
562.371 953.533 562.862 961.003 563.975 969.974 cv
564.933 977.696 565.813 984.591 568.119 993.571 cv
569.441 998.723 570.683 1002.41 574.968 1014.23 cv
576.031 1017.17 577.22 1020.43 578.527 1023.99 cv
583.342 1031.47 587.906 1038.04 592.004 1043.68 cv
599.208 1053.6 608.057 1065.68 621.626 1079.9 cv
628.946 1087.58 635.582 1093.72 642.273 1099.48 cv
641.697 1088.53 641.882 1078.44 642.077 1068.05 cv
642.092 1067.24 642.507 1058.18 643.332 1040.39 cv
639.459 1035.28 635.912 1030.48 632.676 1026.03 cv
617.603 1005.33 606.56 988.732 597.368 974.743 cv
cp
.635294 .741176 .752941 rgb
f
564.32 876.908 mo
565.109 866.406 565.619 859.623 565.951 855.59 cv
548.323 845.32 544.751 843.269 537.384 838.806 cv
524.97 831.285 527.632 832.58 515.456 825.223 cv
508.906 821.266 504.441 818.657 499.466 815.281 cv
501.602 818.921 503.966 822.907 506.535 827.18 cv
515.975 842.878 521.799 851.811 528.291 862.173 cv
542.509 884.87 543.061 887.495 559.006 913.992 cv
559.624 915.019 560.566 916.582 561.792 918.602 cv
561.923 913.435 562.13 909.021 562.306 905.397 cv
562.535 900.659 563.13 892.742 564.32 876.908 cv
cp
.819608 .886275 .890196 rgb
f
592.695 971.47 mo
594.499 972.759 595.991 973.803 597.368 974.743 cv
596.485 973.399 595.618 972.077 594.767 970.78 cv
579.416 947.374 567.484 927.974 561.792 918.602 cv
561.637 924.775 561.591 932.026 561.845 940.333 cv
561.91 942.452 561.986 944.818 562.101 947.429 cv
564.543 949.498 566.837 951.395 568.982 953.168 cv
580.659 962.82 589.997 969.543 592.695 971.47 cv
cp
.121569 .207843 .568627 rgb
f
626.422 934.06 mo
621.714 927.466 622.662 929.085 619.285 924.275 cv
612.73 914.938 608.326 907.645 604.551 901.369 cv
593.378 882.789 587.169 872.246 587.169 872.246 cv
585.826 869.964 584.563 867.822 583.326 865.726 cv
579.64 863.571 574.386 860.504 566.68 856.015 cv
566.431 855.87 566.194 855.732 565.951 855.59 cv
565.619 859.623 565.109 866.406 564.32 876.908 cv
563.13 892.742 562.535 900.659 562.306 905.397 cv
562.13 909.021 561.923 913.435 561.792 918.602 cv
567.484 927.974 579.416 947.374 594.767 970.78 cv
595.618 972.077 596.485 973.399 597.368 974.743 cv
603.02 978.604 606.701 980.709 621.703 990.694 cv
636.322 1000.42 635.627 1000.29 644.977 1006.41 cv
645.074 1004.79 645.179 1003.16 645.3 1001.4 cv
646.176 988.63 647.212 978.383 648.178 969.514 cv
648.504 966.518 648.809 963.8 649.097 961.305 cv
639.677 952.625 626.422 934.06 626.422 934.06 cv
cp
.266667 .407843 .776471 rgb
f
650.907 749.321 mo
650.515 749.434 650.117 749.556 649.712 749.692 cv
645.016 751.267 641.859 753.66 637.05 757.366 cv
634.978 758.964 632.153 761.281 628.993 764.349 cv
625.897 757.212 622.803 750.076 619.708 742.939 cv
617.241 744.277 613.819 746.126 609.731 748.311 cv
608.255 749.099 596.613 755.315 586.325 760.589 cv
586.054 760.728 585.795 760.86 585.535 760.994 cv
589.227 762.886 593.532 765.14 598.297 767.726 cv
604.053 770.85 612.958 775.699 623.544 782.229 cv
632.658 787.852 642.691 794.041 654.854 803.563 cv
655.547 804.106 656.71 805.022 658.249 806.274 cv
657.433 791.538 656.158 775.381 652.207 755.524 cv
651.783 753.394 651.348 751.33 650.907 749.321 cv
cp
f
644.207 909.369 mo
642.605 905.037 641.042 900.982 639.398 896.88 cv
637.19 895.7 634.534 894.275 631.257 892.505 cv
618.886 885.825 608.396 880.153 595.112 872.591 cv
591.956 870.794 592.426 871.044 583.326 865.726 cv
584.563 867.822 585.826 869.964 587.169 872.246 cv
587.169 872.246 593.378 882.789 604.551 901.369 cv
608.326 907.645 612.73 914.938 619.285 924.275 cv
622.662 929.085 621.714 927.466 626.422 934.06 cv
626.422 934.06 639.677 952.625 649.097 961.305 cv
650.566 948.587 651.585 941.727 652.621 934.157 cv
652.12 932.626 651.63 931.198 651.171 929.858 cv
644.323 909.896 645.977 914.157 644.207 909.369 cv
cp
.807843 .823529 .890196 rgb
f
623.544 782.229 mo
612.958 775.699 604.053 770.85 598.297 767.726 cv
593.532 765.14 589.227 762.886 585.535 760.994 cv
583.208 762.184 581.302 763.144 579.595 763.992 cv
579.501 764.623 579.404 765.277 579.304 765.95 cv
581.193 769.859 583.418 774.458 585.903 779.582 cv
602.537 813.884 603.924 816.327 609.501 828.273 cv
614.617 839.233 619.242 849.854 628.494 871.095 cv
632.939 881.301 636.312 889.176 639.398 896.88 cv
648.535 901.759 649.999 902.413 655.939 905.637 cv
658.353 880.733 658.882 862.911 658.998 858.778 cv
659.668 835.018 658.827 817.43 658.614 813.232 cv
658.499 810.944 658.379 808.626 658.249 806.274 cv
656.71 805.022 655.547 804.106 654.854 803.563 cv
642.691 794.041 632.658 787.852 623.544 782.229 cv
cp
.823529 .886275 .894118 rgb
f
644.207 909.369 mo
645.977 914.157 644.323 909.896 651.171 929.858 cv
651.63 931.198 652.12 932.626 652.621 934.157 cv
653.28 929.338 653.946 924.231 654.739 917.139 cv
655.184 913.164 655.582 909.323 655.939 905.637 cv
649.999 902.413 648.535 901.759 639.398 896.88 cv
641.042 900.982 642.605 905.037 644.207 909.369 cv
cp
.262745 .403922 .776471 rgb
f
566.795 837.828 mo
567.172 838.463 567.54 839.082 567.902 839.693 cv
568.713 834.525 569.972 826.891 572.263 812.216 cv
574.114 800.355 575.552 790.864 576.694 783.323 cv
577.707 776.644 578.587 770.762 579.304 765.95 cv
579.062 765.45 578.827 764.963 578.597 764.486 cv
572.745 767.375 568.8 769.159 556.32 775.323 cv
544.629 781.097 539.926 783.564 536.426 785.385 cv
538.473 789.122 540.989 793.67 543.888 798.806 cv
550.532 810.574 554.241 816.674 566.795 837.828 cv
cp
.803922 .819608 .890196 rgb
f
537.384 838.806 mo
544.751 843.269 548.323 845.32 565.951 855.59 cv
566.087 853.922 566.194 852.722 566.277 851.929 cv
566.751 847.394 567.116 844.704 567.902 839.693 cv
567.54 839.082 567.172 838.463 566.795 837.828 cv
554.241 816.674 550.532 810.574 543.888 798.806 cv
540.989 793.67 538.473 789.122 536.426 785.385 cv
533.339 786.991 531.189 788.093 526.008 790.518 cv
509.163 798.399 500.436 802.482 493.48 804.977 cv
495.196 807.962 497.202 811.424 499.466 815.281 cv
504.441 818.657 508.906 821.266 515.456 825.223 cv
527.632 832.58 524.97 831.285 537.384 838.806 cv
cp
.262745 .403922 .772549 rgb
f
649.387 961.571 mo
649.706 961.861 650.453 962.511 651.574 963.067 cv
651.805 963.182 654.754 964.618 656.178 963.988 cv
659.025 962.728 657.155 952.594 656.408 948.679 cv
655.295 942.845 653.922 938.141 652.621 934.157 cv
651.585 941.727 650.566 948.587 649.097 961.305 cv
649.194 961.395 649.291 961.484 649.387 961.571 cv
cp
.905882 .929412 .933333 rgb
f
492.703 805.251 mo
492.691 805.256 491.262 805.878 488.417 807.118 cv
490.315 808.635 492.528 810.342 495.024 812.158 cv
496.587 813.296 498.046 814.318 499.466 815.281 cv
497.202 811.424 495.196 807.962 493.48 804.977 cv
493.219 805.07 492.959 805.162 492.703 805.251 cv
cp
.121569 .207843 .568627 rgb
f
724.956 1227.67 mo
724.355 1222.96 723.499 1216.29 722.442 1208.17 cv
722.332 1213.78 722.222 1219.39 722.112 1225.01 cv
723.139 1225.97 724.092 1226.86 724.956 1227.67 cv
cp
.121569 .207843 .564706 rgb
f
721.209 877.537 mo
716.111 867.581 712.559 860.616 708.726 853.022 cv
707.628 850.848 706.672 848.95 705.823 847.26 cv
708.387 853.224 710.623 858.845 712.58 864.08 cv
715.325 868.065 718.238 872.552 721.209 877.537 cv
cp
.227451 .352941 .72549 rgb
f
652.207 755.524 mo
656.158 775.381 657.433 791.538 658.249 806.274 cv
662.619 809.83 670.048 816.119 678.567 824.437 cv
685.784 831.483 696.766 842.3 708.572 858.433 cv
709.855 860.185 711.197 862.072 712.58 864.08 cv
710.623 858.845 708.387 853.224 705.823 847.26 cv
699.991 835.655 699.239 833.958 692.956 821.597 cv
681.912 799.871 682.388 801.474 677.301 791.093 cv
669.907 776.005 668.505 771.808 658.423 750.229 cv
658.104 749.545 657.787 748.871 657.475 748.204 cv
655.714 748.305 653.444 748.589 650.907 749.321 cv
651.348 751.33 651.783 753.394 652.207 755.524 cv
cp
.819608 .886275 .890196 rgb
f
572.263 812.216 mo
569.972 826.891 568.713 834.525 567.902 839.693 cv
574.5 850.812 578.731 857.943 583.326 865.726 cv
592.426 871.044 591.956 870.794 595.112 872.591 cv
608.396 880.153 618.886 885.825 631.257 892.505 cv
634.534 894.275 637.19 895.7 639.398 896.88 cv
636.312 889.176 632.939 881.301 628.494 871.095 cv
619.242 849.854 614.617 839.233 609.501 828.273 cv
603.924 816.327 602.537 813.884 585.903 779.582 cv
583.418 774.458 581.193 769.859 579.304 765.95 cv
578.587 770.762 577.707 776.644 576.694 783.323 cv
575.552 790.864 574.114 800.355 572.263 812.216 cv
cp
.905882 .929412 .933333 rgb
f
579.595 763.992 mo
579.255 764.161 578.922 764.326 578.597 764.486 cv
578.827 764.963 579.062 765.45 579.304 765.95 cv
579.404 765.277 579.501 764.623 579.595 763.992 cv
cp
.384314 .529412 .792157 rgb
f
566.277 851.929 mo
566.194 852.722 566.087 853.922 565.951 855.59 cv
566.194 855.732 566.431 855.87 566.68 856.015 cv
574.386 860.504 579.64 863.571 583.326 865.726 cv
578.731 857.943 574.5 850.812 567.902 839.693 cv
567.116 844.704 566.751 847.394 566.277 851.929 cv
cp
.823529 .886275 .894118 rgb
f
597.368 974.743 mo
606.56 988.732 617.603 1005.33 632.676 1026.03 cv
635.912 1030.48 639.459 1035.28 643.332 1040.39 cv
643.54 1035.89 643.773 1030.85 644.034 1025.23 cv
644.449 1016.28 644.68 1011.33 644.977 1006.41 cv
635.627 1000.29 636.322 1000.42 621.703 990.694 cv
606.701 980.709 603.02 978.604 597.368 974.743 cv
cp
.819608 .882353 .890196 rgb
f
657.475 748.204 mo
652.736 738.098 648.77 729.898 646.135 724.502 cv
645.692 724.804 645.212 725.129 644.715 725.464 cv
646.627 731.819 648.836 739.885 650.907 749.321 cv
653.444 748.589 655.714 748.305 657.475 748.204 cv
cp
.635294 .741176 .756863 rgb
f
684.859 1089.73 mo
676.364 1080.91 669.662 1073.16 664.14 1066.55 cv
656.337 1057.22 649.43 1048.43 643.332 1040.39 cv
642.507 1058.18 642.092 1067.24 642.077 1068.05 cv
641.882 1078.44 641.697 1088.53 642.273 1099.48 cv
647.28 1103.8 652.316 1107.91 657.693 1112.29 cv
672.298 1124.19 684.624 1132.92 693.455 1139.15 cv
701.927 1145.12 709.363 1150.11 715.255 1153.97 cv
714.813 1150.64 714.335 1147.02 713.791 1142.87 cv
712.029 1129.45 710.951 1121.22 709.956 1113.28 cv
707.002 1110.8 703.603 1107.85 699.9 1104.46 cv
697.657 1102.41 692.229 1097.37 684.859 1089.73 cv
cp
.121569 .207843 .568627 rgb
f
561.845 940.333 mo
561.591 932.026 561.637 924.775 561.792 918.602 cv
560.566 916.582 559.624 915.019 559.006 913.992 cv
543.061 887.495 542.509 884.87 528.291 862.173 cv
521.799 851.811 515.975 842.878 506.535 827.18 cv
503.966 822.907 501.602 818.921 499.466 815.281 cv
498.046 814.318 496.587 813.296 495.024 812.158 cv
492.528 810.342 490.315 808.635 488.417 807.118 cv
487.178 807.658 485.669 808.315 483.892 809.09 cv
484.141 814.244 484.676 820.576 485.796 827.736 cv
487.741 840.164 490.554 849.376 493.547 859.046 cv
495.075 863.983 497.068 869.986 499.629 876.793 cv
499.632 876.803 499.636 876.812 499.639 876.82 cv
499.648 876.833 499.656 876.845 499.665 876.858 cv
506.064 886.273 512.127 894.32 517.413 900.946 cv
522.981 907.927 531.047 917.976 543.044 929.954 cv
550.212 937.111 556.545 942.722 562.101 947.429 cv
561.986 944.818 561.91 942.452 561.845 940.333 cv
cp
.639216 .745098 .756863 rgb
f
576.095 1020.17 mo
577.229 1022.37 578.367 1024.57 579.66 1027.07 cv
579.273 1026.02 578.896 1024.99 578.527 1023.99 cv
577.723 1022.74 576.912 1021.47 576.095 1020.17 cv
cp
.121569 .207843 .568627 rgb
f
574.968 1014.23 mo
570.683 1002.41 569.441 998.723 568.119 993.571 cv
565.813 984.591 564.933 977.696 563.975 969.974 cv
562.862 961.003 562.371 953.533 562.101 947.429 cv
556.545 942.722 550.212 937.111 543.044 929.954 cv
531.047 917.976 522.981 907.927 517.413 900.946 cv
512.127 894.32 506.064 886.273 499.665 876.858 cv
508.659 893.067 516.12 906.985 520.406 914.99 cv
530.559 933.951 529.486 932.425 543.581 958.885 cv
554.154 978.733 556.18 982.263 564.762 998.483 cv
570.277 1008.91 573.18 1014.52 576.095 1020.17 cv
576.912 1021.47 577.723 1022.74 578.527 1023.99 cv
577.22 1020.43 576.031 1017.17 574.968 1014.23 cv
cp
.12549 .211765 .572549 rgb
f
657.693 1112.29 mo
652.316 1107.91 647.28 1103.8 642.273 1099.48 cv
642.59 1105.49 643.131 1111.75 644.034 1118.47 cv
645.419 1128.78 647.98 1142.66 653.1 1158.85 cv
655.654 1161.35 658.563 1164.2 661.761 1167.31 cv
668.81 1174.17 674.409 1179.55 685.32 1190.03 cv
695.996 1200.28 701.471 1205.53 708.188 1211.9 cv
713.657 1217.08 718.396 1221.53 722.112 1225.01 cv
722.222 1219.39 722.332 1213.78 722.442 1208.17 cv
721.941 1204.32 721.397 1200.15 720.812 1195.7 cv
718.264 1176.31 717.067 1167.62 715.255 1153.97 cv
709.363 1150.11 701.927 1145.12 693.455 1139.15 cv
684.624 1132.92 672.298 1124.19 657.693 1112.29 cv
cp
.635294 .741176 .756863 rgb
f
645.761 1006.92 mo
645.49 1006.75 645.231 1006.58 644.977 1006.41 cv
644.68 1011.33 644.449 1016.28 644.034 1025.23 cv
643.773 1030.85 643.54 1035.89 643.332 1040.39 cv
649.43 1048.43 656.337 1057.22 664.14 1066.55 cv
669.662 1073.16 676.364 1080.91 684.859 1089.73 cv
692.229 1097.37 697.657 1102.41 699.9 1104.46 cv
703.603 1107.85 707.002 1110.8 709.956 1113.28 cv
709.697 1111.22 709.444 1109.18 709.186 1107.07 cv
707.783 1095.6 707.502 1092.74 705.618 1077.43 cv
704.354 1067.16 703.954 1064.16 702.797 1054.52 cv
702.158 1049.19 701.635 1044.73 701.161 1040.5 cv
691.804 1035.17 683.797 1030.44 677.416 1026.61 cv
668.452 1021.23 658.448 1015.21 645.761 1006.92 cv
cp
.262745 .403922 .776471 rgb
f
743.892 921.743 mo
740.421 914.996 735.076 904.596 728.524 891.814 cv
725.728 886.357 723.335 881.689 721.209 877.537 cv
718.238 872.552 715.325 868.065 712.58 864.08 cv
714.304 868.69 715.815 873.005 717.129 876.965 cv
719.25 883.359 722.868 894.864 726.337 909.541 cv
728.27 917.714 729.719 925.027 730.814 931.207 cv
732.502 929.808 733.976 928.676 735.144 927.786 cv
738.54 925.196 741.569 923.19 743.892 921.743 cv
cp
.823529 .886275 .894118 rgb
f
717.129 876.965 mo
715.815 873.005 714.304 868.69 712.58 864.08 cv
711.197 862.072 709.855 860.185 708.572 858.433 cv
696.766 842.3 685.784 831.483 678.567 824.437 cv
670.048 816.119 662.619 809.83 658.249 806.274 cv
658.379 808.626 658.499 810.944 658.614 813.232 cv
658.827 817.43 659.668 835.018 658.998 858.778 cv
658.882 862.911 658.353 880.733 655.939 905.637 cv
657.075 906.254 658.372 906.963 659.919 907.814 cv
684.57 921.382 697.065 929.449 700.438 931.642 cv
707.823 936.445 713.894 940.682 718.244 943.797 cv
719.082 942.779 719.833 941.911 720.467 941.196 cv
724.266 936.917 727.869 933.65 730.814 931.207 cv
729.719 925.027 728.27 917.714 726.337 909.541 cv
722.868 894.864 719.25 883.359 717.129 876.965 cv
cp
.262745 .403922 .776471 rgb
f
659.919 907.814 mo
658.372 906.963 657.075 906.254 655.939 905.637 cv
655.582 909.323 655.184 913.164 654.739 917.139 cv
653.946 924.231 653.28 929.338 652.621 934.157 cv
653.922 938.141 655.295 942.845 656.408 948.679 cv
657.155 952.594 659.025 962.728 656.178 963.988 cv
654.754 964.618 651.805 963.182 651.574 963.067 cv
650.453 962.511 649.706 961.861 649.387 961.571 cv
649.291 961.484 649.194 961.395 649.097 961.305 cv
648.809 963.8 648.504 966.518 648.178 969.514 cv
647.212 978.383 646.176 988.63 645.3 1001.4 cv
645.179 1003.16 645.074 1004.79 644.977 1006.41 cv
645.231 1006.58 645.49 1006.75 645.761 1006.92 cv
658.448 1015.21 668.452 1021.23 677.416 1026.61 cv
683.797 1030.44 691.804 1035.17 701.161 1040.5 cv
700.763 1036.95 700.4 1033.57 700.035 1030 cv
698.95 1019.41 698.678 1015.31 698.539 1012.97 cv
698.124 1006.01 697.853 1001.46 698.136 995.355 cv
698.391 989.849 698.644 984.392 700.38 977.514 cv
702.741 968.163 706.482 961.577 709.244 956.794 cv
712.469 951.208 715.742 946.836 718.244 943.797 cv
713.894 940.682 707.823 936.445 700.438 931.642 cv
697.065 929.449 684.57 921.382 659.919 907.814 cv
cp
.823529 .886275 .894118 rgb
f
642.273 1099.48 mo
635.582 1093.72 628.946 1087.58 621.626 1079.9 cv
608.057 1065.68 599.208 1053.6 592.004 1043.68 cv
587.906 1038.04 583.342 1031.47 578.527 1023.99 cv
578.896 1024.99 579.273 1026.02 579.66 1027.07 cv
581.262 1030.16 583.104 1033.7 585.481 1038.23 cv
598.769 1063.57 602.475 1069.78 621.012 1104.31 cv
627.069 1115.59 635.92 1132.15 646.643 1152.5 cv
648.404 1154.24 650.579 1156.38 653.1 1158.85 cv
647.98 1142.66 645.419 1128.78 644.034 1118.47 cv
643.131 1111.75 642.59 1105.49 642.273 1099.48 cv
cp
.121569 .207843 .568627 rgb
f
556.32 775.323 mo
568.8 769.159 572.745 767.375 578.597 764.486 cv
578.39 764.06 578.189 763.643 577.992 763.235 cv
571.824 766.363 565.58 769.46 557.932 773.251 cv
548.606 777.873 541.784 781.254 535.764 784.174 cv
535.979 784.567 536.2 784.971 536.426 785.385 cv
539.926 783.564 544.629 781.097 556.32 775.323 cv
cp
.647059 .670588 .74902 rgb
f
485.796 827.736 mo
484.676 820.576 484.141 814.244 483.892 809.09 cv
481.672 810.058 479.034 811.208 475.973 812.542 cv
475.029 812.954 473.029 813.84 470.755 815.535 cv
469.087 816.778 467.801 818.063 466.837 819.166 cv
470.41 825 472.802 829.467 473.441 830.652 cv
477.231 837.687 481.581 844.746 491.321 861.962 cv
494.196 867.044 496.979 872.017 499.629 876.793 cv
497.068 869.986 495.075 863.983 493.547 859.046 cv
490.554 849.376 487.741 840.164 485.796 827.736 cv
cp
.12549 .211765 .572549 rgb
f
579.595 763.992 mo
579.682 763.407 579.766 762.84 579.847 762.292 cv
579.229 762.607 578.61 762.921 577.992 763.235 cv
578.189 763.643 578.39 764.06 578.597 764.486 cv
578.922 764.326 579.255 764.161 579.595 763.992 cv
cp
.0666667 .121569 .411765 rgb
f
586.325 760.589 mo
596.613 755.315 608.255 749.099 609.731 748.311 cv
613.819 746.126 617.241 744.277 619.708 742.939 cv
622.803 750.076 625.897 757.212 628.993 764.349 cv
632.153 761.281 634.978 758.964 637.05 757.366 cv
641.859 753.66 645.016 751.267 649.712 749.692 cv
650.117 749.556 650.515 749.434 650.907 749.321 cv
648.836 739.885 646.627 731.819 644.715 725.464 cv
642.241 727.134 639.109 729.199 635.439 731.504 cv
629.622 735.159 624.985 737.826 620.705 740.253 cv
605.608 748.812 593.923 754.987 593.923 754.987 cv
590.395 756.851 587.131 758.553 583.957 760.188 cv
584.47 760.449 584.995 760.717 585.535 760.994 cv
585.795 760.86 586.054 760.728 586.325 760.589 cv
cp
.121569 .207843 .568627 rgb
f
585.535 760.994 mo
584.995 760.717 584.47 760.449 583.957 760.188 cv
582.574 760.899 581.209 761.599 579.847 762.292 cv
579.766 762.84 579.682 763.407 579.595 763.992 cv
581.302 763.144 583.208 762.184 585.535 760.994 cv
cp
.760784 .839216 .85098 rgb
f
488.417 807.118 mo
487.913 806.716 487.43 806.326 486.972 805.953 cv
486.139 806.324 485.084 806.793 483.817 807.342 cv
483.838 807.909 483.863 808.49 483.892 809.09 cv
485.669 808.315 487.178 807.658 488.417 807.118 cv
cp
.435294 .560784 .576471 rgb
f
526.008 790.518 mo
531.189 788.093 533.339 786.991 536.426 785.385 cv
536.2 784.971 535.979 784.567 535.764 784.174 cv
530.563 786.697 525.961 788.875 520.866 791.208 cv
506.583 797.75 503.973 798.504 492.612 803.463 cv
492.892 803.952 493.183 804.458 493.48 804.977 cv
500.436 802.482 509.163 798.399 526.008 790.518 cv
cp
.0666667 .121569 .411765 rgb
f
470.755 815.535 mo
473.029 813.84 475.029 812.954 475.973 812.542 cv
479.034 811.208 481.672 810.058 483.892 809.09 cv
483.863 808.49 483.838 807.909 483.817 807.342 cv
480.524 808.766 475.825 810.708 469.988 812.772 cv
467.504 813.65 465.445 814.328 464.079 814.768 cv
464.592 815.566 465.373 816.792 466.304 818.297 cv
466.486 818.591 466.662 818.878 466.837 819.166 cv
467.801 818.063 469.087 816.778 470.755 815.535 cv
cp
.054902 .0980392 .352941 rgb
f
492.703 805.251 mo
492.959 805.162 493.219 805.07 493.48 804.977 cv
493.183 804.458 492.892 803.952 492.612 803.463 cv
491.017 804.159 489.251 804.938 487.254 805.827 cv
487.166 805.866 487.066 805.911 486.972 805.953 cv
487.43 806.326 487.913 806.716 488.417 807.118 cv
491.262 805.878 492.691 805.256 492.703 805.251 cv
cp
.0588235 .105882 .372549 rgb
f
472.52 798.575 mo
466.868 802.573 459.785 807.634 460.664 809.511 cv
461.606 811.523 471.459 809.353 476.664 807.784 cv
478.561 807.212 479.928 806.694 480.088 806.633 cv
506.11 796.71 523.629 788.445 523.629 788.445 cv
553.564 774.323 568.893 767.068 586.594 757.596 cv
595.954 752.587 602.625 748.768 606.163 746.718 cv
613.899 742.235 613.945 741.986 627.4 733.826 cv
627.4 733.826 629.451 732.582 634.595 729.164 cv
637.382 727.312 638.173 726.731 639.084 725.883 cv
640.989 724.112 644.484 720.186 643.573 718.574 cv
642.708 717.041 638.101 718.036 633.962 719.149 cv
616.761 723.778 608.235 729.222 608.235 729.222 cv
595.049 737.64 580.502 743.709 566.68 751.035 cv
559.292 754.95 537.659 765.041 494.391 785.223 cv
494.391 785.223 485.603 789.322 472.52 798.575 cv
cp
.121569 .207843 .568627 rgb
f
gsave
472.52 798.575 mo
466.868 802.573 459.785 807.634 460.664 809.511 cv
461.606 811.523 471.459 809.353 476.664 807.784 cv
478.561 807.212 479.928 806.694 480.088 806.633 cv
506.11 796.71 523.629 788.445 523.629 788.445 cv
553.564 774.323 568.893 767.068 586.594 757.596 cv
595.954 752.587 602.625 748.768 606.163 746.718 cv
613.899 742.235 613.945 741.986 627.4 733.826 cv
627.4 733.826 629.451 732.582 634.595 729.164 cv
637.382 727.312 638.173 726.731 639.084 725.883 cv
640.989 724.112 644.484 720.186 643.573 718.574 cv
642.708 717.041 638.101 718.036 633.962 719.149 cv
616.761 723.778 608.235 729.222 608.235 729.222 cv
595.049 737.64 580.502 743.709 566.68 751.035 cv
559.292 754.95 537.659 765.041 494.391 785.223 cv
494.391 785.223 485.603 789.322 472.52 798.575 cv
cp
clp
455.599 809.856 mo
463.589 807.054 475.084 802.865 488.75 797.309 cv
509.209 788.991 523.835 781.959 544.579 771.985 cv
563.301 762.983 578.584 755.207 591.544 748.387 cv
609.597 738.888 619.792 733.01 629.645 726.862 cv
636.849 722.367 642.75 718.426 646.912 715.581 cv
645.186 715.216 642.502 714.705 639.199 714.315 cv
606.367 710.441 589.197 727.714 542.737 750.689 cv
500.095 771.777 478.292 775.16 460.318 802.028 cv
458.189 805.211 456.619 807.969 455.599 809.856 cv
cp
.0509804 .0941176 .333333 rgb
f
483.302 806.211 mo
483.366 805.124 483.43 804.037 483.494 802.949 cv
484.389 803.691 485.285 804.433 486.18 805.175 cv
485.221 805.52 484.261 805.866 483.302 806.211 cv
cp
.639216 .745098 .756863 rgb
f
521.557 787.486 mo
515.836 790.071 511.319 792.111 505.173 794.7 cv
499.232 797.202 494.227 799.182 490.631 800.57 cv
491.165 801.613 491.699 802.655 492.232 803.698 cv
496.925 801.994 503.445 799.544 511.14 796.388 cv
515.154 794.742 522.303 791.746 536.058 785.242 cv
534.151 781.699 li
531.037 783.155 526.677 785.173 521.557 787.486 cv
cp
.262745 .4 .772549 rgb
f
619.458 740.617 mo
618.844 739.716 618.23 738.814 617.616 737.912 cv
613.163 740.596 606.594 744.484 598.527 749.001 cv
590.617 753.431 583.609 757.152 576.759 760.678 cv
578.774 764.22 li
582.846 762.089 586.886 759.902 591.313 757.423 cv
603.221 750.756 612.849 744.821 619.458 740.617 cv
cp
.262745 .403922 .776471 rgb
f
gsave
619.458 740.617 mo
618.844 739.716 618.23 738.814 617.616 737.912 cv
613.163 740.596 606.594 744.484 598.527 749.001 cv
590.617 753.431 583.609 757.152 576.759 760.678 cv
578.774 764.22 li
582.846 762.089 586.886 759.902 591.313 757.423 cv
603.221 750.756 612.849 744.821 619.458 740.617 cv
cp
clp
579.745 764.589 mo
579.927 762.181 580.109 759.773 580.292 757.366 cv
582.325 758.881 584.359 760.397 586.393 761.913 cv
584.177 762.805 581.961 763.697 579.745 764.589 cv
cp
.823529 .886275 .894118 rgb
f
grestore
559.313 769.491 mo
548.561 774.871 541.229 778.36 538.325 779.735 cv
537.46 780.145 536.033 780.819 534.151 781.699 cv
536.058 785.242 li
539.61 783.563 543.595 781.653 548.09 779.467 cv
561.202 773.09 570.061 768.782 578.774 764.22 cv
576.759 760.678 li
570.979 763.653 565.311 766.49 559.313 769.491 cv
cp
.784314 .8 .87451 rgb
f
grestore
423.138 781.309 mo
423.326 774.548 423.26 756.388 423.253 724.905 cv
423.247 697.526 423.242 672.423 423.368 641.68 cv
423.525 603.611 423.703 600.907 423.829 578.14 cv
423.875 569.8 424.301 561.46 424.136 553.123 cv
424.125 552.594 424.073 550.437 424.25 547.521 cv
424.322 546.352 424.38 545.399 424.481 544.719 cv
425.158 540.158 429.396 536.945 430.428 536.163 cv
431.535 535.324 435.057 532.729 440.059 532.633 cv
444.229 532.553 447.486 534.246 449.92 535.511 cv
451.344 536.25 452.356 536.937 452.683 537.161 cv
474.373 551.976 480.079 556.576 480.079 556.576 cv
480.095 556.588 490.718 564.22 511.964 579.483 cv
532.943 594.553 533.557 594.773 554.785 609.948 cv
585.442 631.864 582.317 630.086 607.813 648.242 cv
621.201 657.775 634.181 667.887 647.794 677.096 cv
649.833 678.475 651.722 680.064 653.742 681.47 cv
656.087 683.102 657.556 684.017 658.969 685.969 cv
659.552 686.773 660.399 687.943 660.84 689.681 cv
661.83 693.582 659.915 696.949 659.286 698.056 cv
658.521 699.399 657.623 700.312 655.861 702.084 cv
653.183 704.781 650.832 706.565 649.818 707.322 cv
645.888 710.258 642.75 712.198 640.005 713.912 cv
632.333 718.701 632.009 719.054 628.206 721.394 cv
620.609 726.07 605.649 734.668 585.788 745.106 cv
576.22 750.138 562.178 757.506 542.91 766.862 cv
524.474 775.815 511.608 781.56 495.542 788.733 cv
495.542 788.733 480.592 795.409 454.908 805.021 cv
454.688 805.104 451.382 806.334 446.851 807.669 cv
443.105 808.772 441.186 809.329 438.908 809.568 cv
435.124 809.965 432.141 810.278 429.066 808.532 cv
425.478 806.495 423.689 802.745 423.368 800.82 cv
423.338 800.638 423.221 799.876 423.138 798.882 cv
422.993 797.143 423.047 795.845 423.061 795.448 cv
423.233 790.738 423.007 786.02 423.138 781.309 cv
cp
.0745098 .32549 .74902 rgb
f
gsave
423.138 781.309 mo
423.326 774.548 423.26 756.388 423.253 724.905 cv
423.247 697.526 423.242 672.423 423.368 641.68 cv
423.525 603.611 423.703 600.907 423.829 578.14 cv
423.875 569.8 424.301 561.46 424.136 553.123 cv
424.125 552.594 424.073 550.437 424.25 547.521 cv
424.322 546.352 424.38 545.399 424.481 544.719 cv
425.158 540.158 429.396 536.945 430.428 536.163 cv
431.535 535.324 435.057 532.729 440.059 532.633 cv
444.229 532.553 447.486 534.246 449.92 535.511 cv
451.344 536.25 452.356 536.937 452.683 537.161 cv
474.373 551.976 480.079 556.576 480.079 556.576 cv
480.095 556.588 490.718 564.22 511.964 579.483 cv
532.943 594.553 533.557 594.773 554.785 609.948 cv
585.442 631.864 582.317 630.086 607.813 648.242 cv
621.201 657.775 634.181 667.887 647.794 677.096 cv
649.833 678.475 651.722 680.064 653.742 681.47 cv
656.087 683.102 657.556 684.017 658.969 685.969 cv
659.552 686.773 660.399 687.943 660.84 689.681 cv
661.83 693.582 659.915 696.949 659.286 698.056 cv
658.521 699.399 657.623 700.312 655.861 702.084 cv
653.183 704.781 650.832 706.565 649.818 707.322 cv
645.888 710.258 642.75 712.198 640.005 713.912 cv
632.333 718.701 632.009 719.054 628.206 721.394 cv
620.609 726.07 605.649 734.668 585.788 745.106 cv
576.22 750.138 562.178 757.506 542.91 766.862 cv
524.474 775.815 511.608 781.56 495.542 788.733 cv
495.542 788.733 480.592 795.409 454.908 805.021 cv
454.688 805.104 451.382 806.334 446.851 807.669 cv
443.105 808.772 441.186 809.329 438.908 809.568 cv
435.124 809.965 432.141 810.278 429.066 808.532 cv
425.478 806.495 423.689 802.745 423.368 800.82 cv
423.338 800.638 423.221 799.876 423.138 798.882 cv
422.993 797.143 423.047 795.845 423.061 795.448 cv
423.233 790.738 423.007 786.02 423.138 781.309 cv
cp
clp
660.62 695.077 mo
659.918 696.105 658.891 697.494 657.502 699.005 cv
657.197 699.337 655.53 701.137 653.204 702.957 cv
641.019 712.498 623.045 722.526 623.045 722.526 cv
609.961 729.827 613.963 727.988 600.695 735.38 cv
584.219 744.559 570.018 751.802 570.018 751.802 cv
559.424 757.254 544.807 764.585 526.679 773.136 cv
499.047 785.187 478.826 793.895 475.456 795.237 cv
473.144 796.158 470.947 796.916 470.947 796.916 cv
469.441 797.436 468.223 797.815 466.145 798.447 cv
462.766 799.474 461.08 799.996 459.167 800.532 cv
450.034 803.093 446.961 803.339 444.606 803.352 cv
440.625 803.374 438.902 802.728 437.757 801.568 cv
436.083 799.872 435.611 797.042 435.455 796.101 cv
435.21 794.634 435.264 793.507 435.282 793.107 cv
435.465 788.985 434.931 784.86 434.879 780.733 cv
434.78 772.759 433.739 754.196 433.306 745.625 cv
432.591 731.478 432.93 731.813 431.848 698.046 cv
431.024 672.342 430.255 651.992 430.006 645.479 cv
429.297 626.909 428.758 612.796 428.087 596.903 cv
427.888 592.164 427.273 577.711 427.013 568.278 cv
426.886 563.653 426.862 560.87 426.649 556.269 cv
426.604 555.297 426.49 552.929 426.418 549.708 cv
426.389 548.384 426.335 545.921 426.361 545.045 cv
426.427 542.821 427.369 538.82 433.21 533.304 cv
430.82 533.04 427.484 533.091 424.75 535.031 cv
419.674 538.631 419.95 546.406 419.627 556.959 cv
419.349 566.053 417.567 575.085 417.67 584.183 cv
417.977 611.301 418.483 656.069 417.344 684.54 cv
415.926 719.969 418.816 755.571 415.809 790.901 cv
415.563 793.792 414.743 802.544 420.106 808.091 cv
423.94 812.055 429.378 812.774 432.999 813.002 cv
457.47 814.546 478.429 802.719 478.429 802.719 cv
514.625 782.295 553.958 767.988 591.237 749.615 cv
615.751 737.534 635.904 718.063 659.075 703.571 cv
660.501 702.679 665.312 699.715 664.754 697.432 cv
664.424 696.083 662.333 695.421 660.62 695.077 cv
cp
.0392157 .203922 .603922 rgb
f
556.205 752.186 mo
559.255 750.546 565.983 746.887 574.507 741.826 cv
580.502 738.268 580.54 738.079 585.443 735.149 cv
592.979 730.646 596.265 729.074 615.026 718.689 cv
615.215 718.584 620.063 715.319 629.76 708.79 cv
629.76 708.79 638.077 703.188 637.357 699.926 cv
637.326 699.783 637.139 699.02 636.725 698.084 cv
636.725 698.084 636.046 696.553 634.902 695.207 cv
628.822 688.054 607.256 669.767 607.256 669.767 cv
603.805 666.84 605.181 667.849 599.525 662.938 cv
588.476 653.343 579.861 646.573 576.272 643.752 cv
524.335 602.931 559.932 630.644 524.319 602.888 cv
490.866 576.815 491.07 577 490.132 576.183 cv
479.965 567.318 468.795 559.662 458.477 550.974 cv
455.403 548.385 449.656 543.5 448.462 544.527 cv
447.513 545.345 449.873 549.527 451.839 552.969 cv
461.875 570.541 466.893 579.327 467.148 579.713 cv
470.573 584.891 476.364 595.827 487.945 617.699 cv
493.491 628.173 497.454 635.954 501.758 644.405 cv
507.061 654.816 512.433 665.377 519.255 679.475 cv
534.853 711.708 531.543 707.69 536.138 715.926 cv
536.138 715.926 540.674 724.059 543.121 732.732 cv
544.198 736.551 544.751 740.387 544.751 740.387 cv
545.001 742.115 545.135 743.592 545.212 744.704 cv
540.616 747.881 537.115 750.693 534.794 752.646 cv
530.161 756.547 529.683 757.492 526.392 759.61 cv
523.145 761.7 521.5 762.141 517.988 764.733 cv
516.155 766.087 512.189 769.015 512.636 769.913 cv
513.431 771.51 527.783 765.837 529.557 765.136 cv
539.031 761.391 545.87 757.742 556.205 752.186 cv
cp
.784314 .811765 .882353 rgb
f
grestore
717.244 604.577 mo
744.103 601.661 769.427 598.744 808.871 590.457 cv
848.315 582.168 870.724 577.104 907.712 565.593 cv
913.238 590.763 922.907 639.109 933.344 689.451 cv
943.78 739.792 957.287 805.789 967.723 858.279 cv
978.16 910.769 981.229 925.963 981.229 925.963 cv
981.229 925.963 974.783 974.924 968.337 1029.26 cv
961.891 1083.59 949.152 1183.66 949.152 1183.66 cv
949.152 1183.66 947.157 1116.43 946.543 1084.51 cv
945.929 1052.58 945.162 1022.12 944.01 1006.92 cv
942.859 991.729 946.313 962.492 914.772 931.642 cv
883.232 900.793 831.318 894.289 785.043 904.419 cv
778.482 874.855 765.236 817.876 754.693 770.488 cv
744.064 722.718 726.913 647.321 717.244 604.577 cv
cp
.203922 .25098 .00392157 rgb
f
961.863 850.74 mo
960.208 849.363 958.612 848.325 957.248 847.555 cv
955.517 852.351 953.305 857.573 950.457 863.037 cv
950.288 863.36 950.117 863.674 949.947 863.993 cv
952.306 881.735 954.382 897.366 955.751 907.699 cv
957.608 921.71 959.991 938.443 962.458 955.086 cv
964.037 954.574 965.565 954.048 967.032 953.513 cv
965.994 956.703 964.871 959.959 963.677 963.262 cv
964.855 971.114 966.036 978.84 967.172 986.142 cv
969.425 986.749 971.506 987.4 973.337 988.041 cv
976.025 966.323 978.369 948.013 979.79 937.026 cv
976.283 923.005 972.828 905.98 965.574 869.33 cv
964.422 863.51 963.177 857.277 961.863 850.74 cv
cp
.619608 .698039 .00392157 rgb
f
961.863 850.74 mo
963.177 857.277 964.422 863.51 965.574 869.33 cv
972.828 905.98 976.283 923.005 979.79 937.026 cv
980.698 929.998 981.229 925.963 981.229 925.963 cv
981.229 925.963 978.16 910.769 967.723 858.279 cv
967.625 857.788 967.526 857.288 967.428 856.795 cv
966.426 855.362 965.2 853.86 963.694 852.389 cv
963.081 851.79 962.468 851.244 961.863 850.74 cv
cp
.376471 .462745 .00392157 rgb
f
957.248 847.555 mo
958.612 848.325 960.208 849.363 961.863 850.74 cv
955.136 817.282 946.596 775.768 939.433 739.852 cv
939.245 739.32 939.061 738.792 938.869 738.258 cv
936.35 731.261 933.714 724.684 931.042 718.536 cv
931.051 720.054 931.051 721.592 931.052 723.126 cv
931.776 727.219 932.37 731.668 933.037 736.723 cv
935.164 752.848 943.583 816.115 949.947 863.993 cv
950.117 863.674 950.288 863.36 950.457 863.037 cv
953.305 857.573 955.517 852.351 957.248 847.555 cv
cp
.203922 .25098 .00392157 rgb
f
962.458 955.086 mo
962.863 957.818 963.27 960.548 963.677 963.262 cv
964.871 959.959 965.994 956.703 967.032 953.513 cv
965.565 954.048 964.037 954.574 962.458 955.086 cv
cp
.203922 .254902 .00392157 rgb
f
917.162 610.654 mo
916.585 607.848 916.021 605.105 915.47 602.432 cv
915.007 603.045 914.544 603.657 914.082 604.27 cv
915.108 606.397 916.135 608.525 917.162 610.654 cv
cp
.0901961 .113725 .00392157 rgb
f
939.433 739.852 mo
946.596 775.768 955.136 817.282 961.863 850.74 cv
962.468 851.244 963.081 851.79 963.694 852.389 cv
965.2 853.86 966.426 855.362 967.428 856.795 cv
961.768 828.349 955.234 796.062 948.785 764.492 cv
948.229 764.521 947.674 764.55 947.118 764.58 cv
945.028 756.78 942.496 748.499 939.433 739.852 cv
cp
.0627451 .0627451 .0627451 rgb
f
931.052 723.126 mo
931.056 730.521 930.96 738.093 930.734 745.855 cv
930.423 756.573 929.896 766.94 929.2 776.935 cv
923.125 781.12 916.17 785.463 908.326 789.673 cv
899.753 794.275 891.62 797.913 884.23 800.801 cv
891.011 804.908 897.897 809.202 904.873 813.693 cv
913.073 818.971 920.976 824.25 928.585 829.501 cv
928.978 835.655 929.801 848.519 930.197 854.672 cv
930.857 864.926 931.755 878.798 932.423 889.052 cv
938.031 882.792 944.355 874.495 949.947 863.993 cv
943.583 816.115 935.164 752.848 933.037 736.723 cv
932.37 731.668 931.776 727.219 931.052 723.126 cv
cp
.396078 .462745 .00392157 rgb
f
939.433 739.852 mo
942.496 748.499 945.028 756.78 947.118 764.58 cv
947.674 764.55 948.229 764.521 948.785 764.492 cv
943.389 738.077 938.053 712.169 933.344 689.451 cv
927.514 661.332 921.924 633.837 917.162 610.654 cv
916.135 608.525 915.108 606.397 914.082 604.27 cv
914.544 603.657 915.007 603.045 915.47 602.432 cv
912.423 587.651 909.778 575.002 907.712 565.593 cv
906.565 565.95 905.432 566.3 904.312 566.646 cv
910.767 598.102 924.818 664.818 933.65 710.478 cv
935.412 719.583 937.365 729.485 939.433 739.852 cv
cp
.372549 .458824 0 rgb
f
818.771 836.907 mo
824.578 828.171 830.384 819.436 836.191 810.7 cv
828.756 810.816 821.024 810.777 813.015 810.547 cv
806.734 810.366 800.631 810.074 794.708 809.695 cv
802.588 837.225 810.679 865.212 817.387 888.009 cv
817.849 870.975 818.31 853.941 818.771 836.907 cv
cp
.4 .466667 .00784314 rgb
f
747.748 644.328 mo
748.507 644.894 749.271 645.473 750.032 646.043 cv
749.851 645.322 749.67 644.604 749.491 643.889 cv
748.911 644.034 748.328 644.183 747.748 644.328 cv
cp
.329412 .388235 .00392157 rgb
f
960.816 970.895 mo
959.077 975.352 957.281 979.654 955.448 983.811 cv
959.579 984.325 963.591 985.177 967.172 986.142 cv
966.036 978.84 964.855 971.114 963.677 963.262 cv
962.768 965.778 961.821 968.319 960.816 970.895 cv
cp
.807843 .858824 .00392157 rgb
f
787.542 633.915 mo
783.66 634.975 779.762 636.03 775.835 637.076 cv
766.972 639.436 758.191 641.703 749.491 643.889 cv
749.67 644.604 749.851 645.322 750.032 646.043 cv
756.581 650.957 763.201 656.03 769.887 661.288 cv
776.786 666.711 783.487 672.113 789.993 677.479 cv
790.391 684.116 790.774 690.754 791.145 697.394 cv
791.891 710.783 792.582 724.174 793.216 737.567 cv
798.933 732.92 804.697 728.266 810.489 723.608 cv
807.433 712.904 804.621 702.618 802.118 692.981 cv
796.884 672.83 791.998 652.532 787.542 633.915 cv
cp
.396078 .462745 .00392157 rgb
f
885.228 635.426 mo
889.184 627.877 893.152 620.485 897.122 613.248 cv
888.759 614.787 880.11 616.229 871.184 617.546 cv
868.067 618.005 864.987 618.434 861.927 618.846 cv
862.21 620.505 862.483 622.137 862.743 623.723 cv
865.851 642.716 868.383 657.911 869.995 667.235 cv
871.645 667.229 873.389 667.309 875.198 667.477 cv
874.295 665.107 873.396 662.735 872.489 660.367 cv
876.573 652.158 880.817 643.841 885.228 635.426 cv
cp
.203922 .25098 .00392157 rgb
f
862.743 623.723 mo
862.483 622.137 862.21 620.505 861.927 618.846 cv
857.379 619.458 852.887 620.026 848.469 620.539 cv
842.969 615.205 837.443 609.782 831.893 604.27 cv
831.399 603.778 830.909 603.289 830.416 602.798 cv
832.418 613.33 835.525 629.389 840.181 652.846 cv
843.518 669.654 846.37 687.016 848.874 704.472 cv
854.035 705.858 859.197 707.24 864.354 708.636 cv
874.119 711.279 883.878 713.94 893.63 716.617 cv
890.345 707.707 887.032 698.805 883.693 689.912 cv
880.882 682.425 878.046 674.948 875.198 667.477 cv
873.389 667.309 871.645 667.229 869.995 667.235 cv
868.383 657.911 865.851 642.716 862.743 623.723 cv
cp
.4 .466667 .00784314 rgb
f
814.742 720.186 mo
813.318 721.327 811.908 722.467 810.489 723.608 cv
818.678 752.286 828.643 783.984 839.26 814.384 cv
854.614 858.343 865.813 856.591 860.901 808.245 cv
857.609 775.838 853.965 739.96 848.874 704.472 cv
845.286 703.507 841.7 702.536 838.109 701.576 cv
830.345 707.715 822.556 713.918 814.742 720.186 cv
cp
.898039 .917647 .776471 rgb
f
954.37 1030.64 mo
951.21 1022.3 948.026 1013.98 944.816 1005.66 cv
948.42 998.91 952.001 991.625 955.448 983.811 cv
953.454 983.563 951.434 983.393 949.42 983.327 cv
947.733 992.557 946.527 999.022 943.965 1006.29 cv
943.98 1006.5 943.995 1006.71 944.01 1006.92 cv
944.772 1016.98 945.365 1033.72 945.858 1053.14 cv
951.944 1054.28 958.03 1055.43 964.116 1056.58 cv
960.893 1047.92 957.645 1039.27 954.37 1030.64 cv
cp
.203922 .254902 .00392157 rgb
f
955.751 907.699 mo
954.382 897.366 952.306 881.735 949.947 863.993 cv
944.355 874.495 938.031 882.792 932.423 889.052 cv
931.755 878.798 930.857 864.926 930.197 854.672 cv
929.801 848.519 928.978 835.655 928.585 829.501 cv
920.976 824.25 913.073 818.971 904.873 813.693 cv
897.897 809.202 891.011 804.908 884.23 800.801 cv
891.62 797.913 899.753 794.275 908.326 789.673 cv
916.17 785.463 923.125 781.12 929.2 776.935 cv
929.896 766.94 930.423 756.573 930.734 745.855 cv
930.96 738.093 931.056 730.521 931.052 723.126 cv
928.608 709.322 924.659 699.621 911.242 684.847 cv
900.772 673.316 886.643 668.542 875.198 667.477 cv
878.046 674.948 880.882 682.425 883.693 689.912 cv
887.032 698.805 890.345 707.707 893.63 716.617 cv
883.878 713.94 874.119 711.279 864.354 708.636 cv
859.197 707.24 854.035 705.858 848.874 704.472 cv
853.965 739.96 857.609 775.838 860.901 808.245 cv
865.813 856.591 854.614 858.343 839.26 814.384 cv
828.643 783.984 818.678 752.286 810.489 723.608 cv
804.697 728.266 798.933 732.92 793.216 737.567 cv
792.582 724.174 791.891 710.783 791.145 697.394 cv
790.774 690.754 790.391 684.116 789.993 677.479 cv
783.487 672.113 776.786 666.711 769.887 661.288 cv
763.201 656.03 756.581 650.957 750.032 646.043 cv
754.804 665.023 760.133 685.823 764.669 702.804 cv
769.393 720.488 781.765 764.472 794.708 809.695 cv
800.631 810.074 806.734 810.366 813.015 810.547 cv
821.024 810.777 828.756 810.816 836.191 810.7 cv
830.384 819.436 824.578 828.171 818.771 836.907 cv
818.31 853.941 817.849 870.975 817.387 888.009 cv
817.277 892.069 817.167 896.129 817.058 900.188 cv
818.354 900.128 819.65 900.081 820.945 900.049 cv
856.359 899.162 891.238 908.623 914.772 931.642 cv
925.018 941.663 931.568 951.513 935.786 960.768 cv
938.038 960.528 940.354 960.229 942.744 959.844 cv
950.031 958.671 956.621 956.979 962.458 955.086 cv
959.991 938.443 957.608 921.71 955.751 907.699 cv
cp
.807843 .858824 .00392157 rgb
f
794.708 809.695 mo
792.184 809.534 789.688 809.358 787.23 809.166 cv
781.297 798.963 775.353 787.913 769.581 776.014 cv
765.976 768.584 762.68 761.32 759.662 754.258 cv
759.445 762.398 759.633 771.475 760.525 781.309 cv
761.254 789.341 762.352 796.771 763.633 803.525 cv
763.122 803.5 762.611 803.475 762.1 803.45 cv
769.75 837.236 777.674 871.607 782.945 895.035 cv
783.308 893.506 783.814 891.861 784.525 890.145 cv
785.743 887.21 787.217 884.891 788.497 883.181 cv
791.68 886.5 795.459 890.052 799.893 893.599 cv
803.268 896.298 806.579 898.64 809.74 900.67 cv
812.178 900.461 814.618 900.301 817.058 900.188 cv
817.167 896.129 817.277 892.069 817.387 888.009 cv
810.679 865.212 802.588 837.225 794.708 809.695 cv
cp
.203922 .25098 .00392157 rgb
f
955.448 983.811 mo
957.281 979.654 959.077 975.352 960.816 970.895 cv
961.821 968.319 962.768 965.778 963.677 963.262 cv
963.27 960.548 962.863 957.818 962.458 955.086 cv
956.621 956.979 950.031 958.671 942.744 959.844 cv
940.354 960.229 938.038 960.528 935.786 960.768 cv
944.373 979.61 943.283 995.981 943.965 1006.29 cv
946.527 999.022 947.733 992.557 949.42 983.327 cv
951.434 983.393 953.454 983.563 955.448 983.811 cv
cp
.396078 .462745 .00392157 rgb
f
967.172 986.142 mo
968.457 994.4 969.685 1002.12 970.786 1008.85 cv
971.658 1001.67 972.514 994.695 973.337 988.041 cv
971.506 987.4 969.425 986.749 967.172 986.142 cv
cp
.372549 .458824 0 rgb
f
871.184 617.546 mo
880.11 616.229 888.759 614.787 897.122 613.248 cv
893.152 620.485 889.184 627.877 885.228 635.426 cv
880.817 643.841 876.573 652.158 872.489 660.367 cv
873.396 662.735 874.295 665.107 875.198 667.477 cv
886.643 668.542 900.772 673.316 911.242 684.847 cv
924.659 699.621 928.608 709.322 931.052 723.126 cv
931.051 721.592 931.051 720.054 931.042 718.536 cv
933.714 724.684 936.35 731.261 938.869 738.258 cv
939.061 738.792 939.245 739.32 939.433 739.852 cv
937.365 729.485 935.412 719.583 933.65 710.478 cv
924.818 664.818 910.767 598.102 904.312 566.646 cv
885.625 572.399 870.578 576.507 854.793 580.31 cv
855.708 584.967 859.247 603.122 861.927 618.846 cv
864.987 618.434 868.067 618.005 871.184 617.546 cv
cp
.615686 .698039 0 rgb
f
955.448 983.811 mo
952.001 991.625 948.42 998.91 944.816 1005.66 cv
948.026 1013.98 951.21 1022.3 954.37 1030.64 cv
957.645 1039.27 960.893 1047.92 964.116 1056.58 cv
958.03 1055.43 951.944 1054.28 945.858 1053.14 cv
946.109 1063.07 946.335 1073.71 946.543 1084.51 cv
947.157 1116.43 949.152 1183.66 949.152 1183.66 cv
949.152 1183.66 961.891 1083.59 968.337 1029.26 cv
969.158 1022.34 969.979 1015.51 970.786 1008.85 cv
969.685 1002.12 968.457 994.4 967.172 986.142 cv
963.591 985.177 959.579 984.325 955.448 983.811 cv
cp
.619608 .698039 .00392157 rgb
f
788.497 883.181 mo
787.217 884.891 785.743 887.21 784.525 890.145 cv
783.814 891.861 783.308 893.506 782.945 895.035 cv
783.702 898.399 784.405 901.541 785.043 904.419 cv
793.149 902.645 801.428 901.383 809.74 900.67 cv
806.579 898.64 803.268 896.298 799.893 893.599 cv
795.459 890.052 791.68 886.5 788.497 883.181 cv
cp
f
830.416 602.798 mo
828.64 593.457 827.733 588.464 827.385 586.521 cv
823.898 587.275 820.294 588.044 816.536 588.84 cv
821.098 593.475 825.725 598.128 830.416 602.798 cv
cp
.901961 .917647 .776471 rgb
f
795.519 631.723 mo
792.873 632.458 790.209 633.187 787.542 633.915 cv
791.998 652.532 796.884 672.83 802.118 692.981 cv
804.621 702.618 807.433 712.904 810.489 723.608 cv
811.908 722.467 813.318 721.327 814.742 720.186 cv
822.556 713.918 830.345 707.715 838.109 701.576 cv
841.7 702.536 845.286 703.507 848.874 704.472 cv
846.37 687.016 843.518 669.654 840.181 652.846 cv
835.525 629.389 832.418 613.33 830.416 602.798 cv
825.725 598.128 821.098 593.475 816.536 588.84 cv
815.122 589.14 813.688 589.442 812.229 589.75 cv
809.896 595.896 807.493 602.098 805.015 608.356 cv
801.874 616.289 798.706 624.078 795.519 631.723 cv
cp
.823529 .831373 .776471 rgb
f
831.893 604.27 mo
837.443 609.782 842.969 615.205 848.469 620.539 cv
852.887 620.026 857.379 619.458 861.927 618.846 cv
859.247 603.122 855.708 584.967 854.793 580.31 cv
846.124 582.398 837.226 584.396 827.385 586.521 cv
827.733 588.464 828.64 593.457 830.416 602.798 cv
830.909 603.289 831.399 603.778 831.893 604.27 cv
cp
.807843 .858824 .00392157 rgb
f
775.835 637.076 mo
779.762 636.03 783.66 634.975 787.542 633.915 cv
784.267 620.229 781.226 607.458 778.45 596.318 cv
763.904 598.844 751.275 600.608 739.187 602.082 cv
741.47 611.622 745.233 626.928 749.491 643.889 cv
758.191 641.703 766.972 639.436 775.835 637.076 cv
cp
f
725.551 641.249 mo
726.271 644.421 727.003 647.654 727.746 650.933 cv
727.911 643.33 li
725.551 641.249 li
cp
.207843 .254902 .00392157 rgb
f
760.525 781.309 mo
759.633 771.475 759.445 762.398 759.662 754.258 cv
762.68 761.32 765.976 768.584 769.581 776.014 cv
775.353 787.913 781.297 798.963 787.23 809.166 cv
789.688 809.358 792.184 809.534 794.708 809.695 cv
781.765 764.472 769.393 720.488 764.669 702.804 cv
760.133 685.823 754.804 665.023 750.032 646.043 cv
749.271 645.473 748.507 644.894 747.748 644.328 cv
748.328 644.183 748.911 644.034 749.491 643.889 cv
745.233 626.928 741.47 611.622 739.187 602.082 cv
731.776 602.986 724.566 603.782 717.244 604.577 cv
719.628 615.116 722.467 627.643 725.551 641.249 cv
727.911 643.33 li
727.746 650.933 li
736.741 690.621 747.296 737.243 754.693 770.488 cv
757.061 781.131 759.565 792.258 762.1 803.45 cv
762.611 803.475 763.122 803.5 763.633 803.525 cv
762.352 796.771 761.254 789.341 760.525 781.309 cv
cp
.615686 .694118 0 rgb
f
795.519 631.723 mo
798.706 624.078 801.874 616.289 805.015 608.356 cv
807.493 602.098 809.896 595.896 812.229 589.75 cv
811.123 589.983 810.006 590.218 808.871 590.457 cv
797.72 592.8 787.698 594.713 778.45 596.318 cv
781.226 607.458 784.267 620.229 787.542 633.915 cv
790.209 633.187 792.873 632.458 795.519 631.723 cv
cp
.901961 .917647 .776471 rgb
f
723.46 600.241 mo
735.776 600.701 771.691 596.557 804.728 589.766 cv
837.764 582.974 878.628 572.5 892.096 567.319 cv
905.563 562.14 914.657 556.154 898.945 555.405 cv
883.232 554.657 824.066 571.463 824.066 571.463 cv
824.066 571.463 752.353 584.394 732.668 588.538 cv
712.985 592.682 711.143 599.78 723.46 600.241 cv
cp
.560784 .643137 .00392157 rgb
f
gsave
723.46 600.241 mo
735.776 600.701 771.691 596.557 804.728 589.766 cv
837.764 582.974 878.628 572.5 892.096 567.319 cv
905.563 562.14 914.657 556.154 898.945 555.405 cv
883.232 554.657 824.066 571.463 824.066 571.463 cv
824.066 571.463 752.353 584.394 732.668 588.538 cv
712.985 592.682 711.143 599.78 723.46 600.241 cv
cp
clp
716.477 592.605 mo
731.21 591.838 769.427 587.08 791.682 583.243 cv
813.936 579.406 850.388 572.5 866.733 568.893 cv
883.079 565.286 903.415 559.76 908.863 558.456 cv
914.312 557.151 895.357 552.086 895.357 552.086 cv
855.606 560.298 li
771.576 577.449 li
714.711 587.924 li
716.477 592.605 li
cp
.321569 .4 .00392157 rgb
f
730.29 598.438 mo
714.021 599.665 716.553 597.209 714.635 595.214 cv
711.373 598.514 li
718.625 607.263 li
739.779 604.716 li
738.191 597.772 li
735.346 598.034 732.701 598.255 730.29 598.438 cv
cp
.615686 .694118 0 rgb
f
738.191 597.772 mo
739.779 604.716 li
765.475 601.622 li
779.221 598.582 li
777.865 592.756 li
762.504 595.194 748.893 596.784 738.191 597.772 cv
cp
.8 .85098 .00784314 rgb
f
911.549 556.499 mo
909.708 557.593 902.801 562.254 886.11 567.665 cv
878.59 570.102 867.214 573.264 854.216 576.561 cv
855.059 581.507 li
913.161 562.14 li
913.161 562.14 913.391 555.405 911.549 556.499 cv
cp
.607843 .690196 .00784314 rgb
f
803.461 588.154 mo
794.555 589.949 785.969 591.47 777.865 592.756 cv
779.221 598.582 li
827.577 587.886 li
826.689 583.165 li
818.862 584.94 810.994 586.636 803.461 588.154 cv
cp
.898039 .917647 .776471 rgb
f
826.689 583.165 mo
827.577 587.886 li
852.383 582.399 li
855.059 581.507 li
854.216 576.561 li
845.542 578.76 836.146 581.02 826.689 583.165 cv
cp
.807843 .858824 .00392157 rgb
f
grestore
688.85 546.254 mo
697.598 512.949 715.556 446.646 724.764 412.88 cv
733.973 379.115 742.252 348.735 745.676 338.25 cv
749.359 326.97 763.058 320.409 774.108 333.071 cv
785.159 345.733 814.243 382.338 832.354 404.439 cv
850.464 426.54 882.542 466.138 898.043 485.476 cv
913.544 504.814 923.598 517.17 929.583 525.228 cv
935.569 533.285 933.305 538.962 927.588 543.338 cv
921.372 548.096 901.189 555.386 880.163 560.988 cv
859.136 566.59 831.586 573.42 806.876 578.332 cv
782.166 583.243 764.784 586.313 742.338 589.42 cv
719.891 592.528 700.131 594.447 689.387 591.915 cv
683.527 590.533 679.52 586.642 680.716 578.945 cv
681.943 571.041 684.874 561.393 688.85 546.254 cv
cp
.396078 .74902 .0745098 rgb
f
gsave
688.85 546.254 mo
697.598 512.949 715.556 446.646 724.764 412.88 cv
733.973 379.115 742.252 348.735 745.676 338.25 cv
749.359 326.97 763.058 320.409 774.108 333.071 cv
785.159 345.733 814.243 382.338 832.354 404.439 cv
850.464 426.54 882.542 466.138 898.043 485.476 cv
913.544 504.814 923.598 517.17 929.583 525.228 cv
935.569 533.285 933.305 538.962 927.588 543.338 cv
921.372 548.096 901.189 555.386 880.163 560.988 cv
859.136 566.59 831.586 573.42 806.876 578.332 cv
782.166 583.243 764.784 586.313 742.338 589.42 cv
719.891 592.528 700.131 594.447 689.387 591.915 cv
683.527 590.533 679.52 586.642 680.716 578.945 cv
681.943 571.041 684.874 561.393 688.85 546.254 cv
cp
clp
714.328 448.027 mo
709.263 471.663 698.212 518.628 694.222 539.041 cv
690.231 559.454 688.351 571.924 687.085 579.061 cv
685.819 586.197 683.977 588.27 696.984 591.032 cv
709.992 593.794 772.497 584.125 800.353 578.485 cv
828.21 572.845 862.743 564.327 882.657 557.65 cv
902.571 550.974 931.809 541.189 932.615 527.031 cv
933.42 512.873 938.485 538.427 938.485 538.427 cv
938.485 538.427 935.032 550.628 904.413 559.607 cv
873.793 568.585 810.022 584.01 775.259 589.996 cv
740.496 595.982 714.251 599.665 696.984 597.133 cv
679.718 594.601 672.581 590.917 675.804 578.024 cv
679.027 565.132 704.582 464.526 704.582 464.526 cv
714.328 448.027 li
cp
.34902 .639216 .105882 rgb
f
752.237 403.288 mo
753.345 373.372 754.346 346.137 754.424 340.668 cv
754.486 336.316 755.304 333.442 759.604 332.553 cv
762.942 331.862 764.863 332.065 767.086 335.718 cv
771.921 343.661 787.691 370.136 797.13 386.712 cv
806.569 403.288 816.814 422.166 827.404 443 cv
837.994 463.835 853.649 497.678 860.671 515.06 cv
867.692 532.441 870.263 541.036 871.107 543.798 cv
871.952 546.561 872.335 550.015 865.505 552.777 cv
858.676 555.54 844.939 559.837 837.956 562.216 cv
830.973 564.595 823.529 568.777 797.284 573.612 cv
771.039 578.447 762.901 579.067 758.798 577.794 cv
757.129 577.276 759.604 575.205 759.604 575.205 cv
759.604 575.205 757.417 573.996 755.806 567.953 cv
754.194 561.909 752.985 537.736 752.525 527.146 cv
752.064 516.556 750.027 480.065 750.625 454.167 cv
751.086 434.252 751.546 421.936 752.237 403.288 cv
cp
.819608 .882353 .784314 rgb
f
grestore
974.63 750.997 mo
976.165 728.281 978.773 694.209 981.843 648.779 cv
984.913 603.349 987.062 574.801 989.978 532.748 cv
992.894 490.694 994.209 474.725 994.889 466.483 cv
995.503 459.039 998.471 458.825 1006.48 456.852 cv
1011.77 455.547 1024.59 452.708 1039.25 452.248 cv
1053.9 451.787 1071.32 451.404 1097.45 453.13 cv
1123.58 454.857 1156.04 459.231 1173.85 464.296 cv
1191.65 469.361 1194.14 472.181 1196.62 473.908 cv
1199.09 475.634 1199.5 478.224 1199.21 482.426 cv
1198.92 486.627 1196.71 514.331 1194.87 539.961 cv
1193.03 565.593 1190.19 597.056 1189.19 608.721 cv
1184.67 599.665 1183.82 597.133 1180.91 591.454 cv
1177.99 585.775 1169.82 577.104 1159.23 575.876 cv
1148.64 574.648 1142.54 576.183 1137.55 579.482 cv
1132.56 582.782 1125.42 590.457 1114.22 602.198 cv
1103.02 613.939 1082.14 636.616 1065.34 654.458 cv
1048.53 672.3 1025.74 696.357 1012.5 710.286 cv
999.263 724.214 985.604 739.332 974.63 750.997 cv
cp
.411765 .109804 .631373 rgb
f
979.311 866.644 mo
981.945 869.355 984.58 872.066 987.215 874.778 cv
986.499 881.352 985.783 887.926 985.066 894.5 cv
983.148 885.215 981.229 875.929 979.311 866.644 cv
cp
.392157 .2 .537255 rgb
f
1109.54 470.742 mo
1112.65 465.747 1113.6 461.866 1113.91 460.382 cv
1114.38 458.198 1114.53 456.221 1114.55 454.551 cv
1112.78 454.375 1111.01 454.209 1109.25 454.053 cv
1108.96 460.421 1108.66 466.578 1108.36 472.512 cv
1108.93 471.702 1109.32 471.091 1109.54 470.742 cv
cp
.819608 .631373 .890196 rgb
f
1117.37 483.98 mo
1114.06 487.759 1110.63 490.616 1107.28 492.905 cv
1106.95 498.805 1106.63 504.419 1106.32 509.726 cv
1105.98 515.435 1105.64 520.918 1105.32 526.158 cv
1109.61 524.275 1117.07 521.35 1127.04 520.815 cv
1136.25 520.321 1143.09 522.114 1144.65 522.542 cv
1148.53 523.603 1157.07 526.05 1165.02 533.477 cv
1168.18 536.432 1170.45 539.429 1172.16 542.146 cv
1172.57 536.813 1172.97 531.481 1173.39 526.148 cv
1173.82 520.497 1174.27 514.845 1174.71 509.194 cv
1171.14 504.411 1167.43 498.865 1164.1 491.462 cv
1161.4 485.446 1158.39 478.591 1158 469.13 cv
1157.89 466.503 1158 464.162 1158.2 462.198 cv
1157 461.845 1155.8 461.495 1154.58 461.149 cv
1150.54 460.005 1146.6 458.978 1142.76 458.048 cv
1138.29 457.373 1133.67 456.74 1129.01 456.162 cv
1128.95 458.756 1128.63 461.934 1127.73 465.447 cv
1125.32 474.768 1120.23 480.711 1117.37 483.98 cv
cp
.894118 .894118 .894118 rgb
f
1109.54 470.742 mo
1109.32 471.091 1108.93 471.702 1108.36 472.512 cv
1107.99 479.638 1107.63 486.446 1107.28 492.905 cv
1110.63 490.616 1114.06 487.759 1117.37 483.98 cv
1120.23 480.711 1125.32 474.768 1127.73 465.447 cv
1128.63 461.934 1128.95 458.756 1129.01 456.162 cv
1124.2 455.565 1119.35 455.025 1114.55 454.551 cv
1114.53 456.221 1114.38 458.198 1113.91 460.382 cv
1113.6 461.866 1112.65 465.747 1109.54 470.742 cv
cp
.411765 .105882 .631373 rgb
f
1072.59 495.146 mo
1077.71 493.788 1085.5 491.654 1094.11 485.937 cv
1101.84 480.804 1106.3 475.396 1108.36 472.512 cv
1108.66 466.578 1108.96 460.421 1109.25 454.053 cv
1105.23 453.693 1101.27 453.383 1097.45 453.13 cv
1075.75 451.696 1060.06 451.718 1046.96 452.031 cv
1045.56 466.976 1044.24 482.122 1043.03 497.465 cv
1056.52 499.29 1067.13 496.593 1072.59 495.146 cv
cp
.905882 .858824 .933333 rgb
f
1018.01 680.801 mo
1021.43 679.516 1024.41 678.855 1026.54 678.4 cv
1031.75 677.29 1036.42 677.063 1040.25 677.189 cv
1034.53 670.15 1029.39 664.173 1025.13 659.369 cv
1020.38 654.024 1017.61 651.121 1015.48 648.978 cv
1015.96 656.573 1016.54 664.311 1017.22 672.185 cv
1017.47 675.078 1017.74 677.949 1018.01 680.801 cv
cp
.752941 .752941 .752941 rgb
f
993.68 535.779 mo
995.686 535.328 997.644 536.142 999.954 537.793 cv
1006 542.113 1009.23 548.429 1011.41 553.391 cv
1013.96 559.211 1016.61 565.253 1018.03 574.168 cv
1019.98 586.459 1018.31 596.106 1017.28 601.737 cv
1016.07 608.343 1014.36 613.602 1013.08 617.047 cv
1009.88 625.646 1006.03 631.977 1003.19 636.195 cv
1004.14 637.116 1004.4 637.421 1004.4 637.421 cv
1007.22 640.624 1009.09 642.617 1010.67 644.219 cv
1017.25 634.421 1020.95 625.951 1022.52 622.112 cv
1025.21 615.514 1028.33 607.886 1029.65 597.133 cv
1030.99 586.227 1029.8 577.725 1029.08 572.845 cv
1027.63 563.038 1025.04 555.678 1023.67 552.125 cv
1021.79 547.25 1018.7 540.443 1013.54 533.247 cv
1010.66 529.233 1007.32 525.362 1002.14 522.772 cv
997.209 520.306 994.809 521.103 994.083 521.391 cv
992.393 522.063 991.271 523.362 990.548 524.557 cv
990.365 527.172 990.175 529.898 989.978 532.748 cv
989.829 534.897 989.682 537.002 989.537 539.084 cv
990.352 537.766 991.689 536.228 993.68 535.779 cv
cp
.411765 .109804 .631373 rgb
f
1003.06 466.253 mo
1003.27 473.439 1003.53 482.609 1008.36 490.771 cv
1013.76 499.911 1022.41 503.75 1025.85 505.275 cv
1031.77 507.899 1036.71 508.412 1041.97 508.958 cv
1042.02 508.964 1042.08 508.97 1042.13 508.976 cv
1042.43 505.127 1042.72 501.289 1043.03 497.465 cv
1042.98 497.459 1042.94 497.454 1042.89 497.448 cv
1035.62 496.45 1028.32 495.352 1021.48 489.735 cv
1020.22 488.698 1015.95 485.026 1012.85 478.8 cv
1009.73 472.543 1009.33 466.804 1009.05 462.799 cv
1008.87 460.3 1008.9 458.09 1009 456.254 cv
1008.03 456.475 1007.19 456.677 1006.48 456.852 cv
1005.32 457.138 1004.27 457.386 1003.31 457.625 cv
1003.11 459.981 1002.97 462.907 1003.06 466.253 cv
cp
.411765 .105882 .631373 rgb
f
1009.05 462.799 mo
1009.33 466.804 1009.73 472.543 1012.85 478.8 cv
1015.95 485.026 1020.22 488.698 1021.48 489.735 cv
1028.32 495.352 1035.62 496.45 1042.89 497.448 cv
1042.94 497.454 1042.98 497.459 1043.03 497.465 cv
1044.24 482.122 1045.56 466.976 1046.96 452.031 cv
1044.29 452.094 1041.73 452.17 1039.25 452.248 cv
1026.55 452.646 1015.24 454.829 1009 456.254 cv
1008.9 458.09 1008.87 460.3 1009.05 462.799 cv
cp
.819608 .631373 .890196 rgb
f
1165.02 533.477 mo
1157.07 526.05 1148.53 523.603 1144.65 522.542 cv
1143.09 522.114 1136.25 520.321 1127.04 520.815 cv
1117.07 521.35 1109.61 524.275 1105.32 526.158 cv
1104.92 532.473 1104.54 538.427 1104.17 543.956 cv
1105.26 543.304 1106.41 542.66 1107.62 542.034 cv
1110.26 540.668 1114.45 538.534 1120.44 537.122 cv
1123.12 536.489 1127.99 535.38 1134.4 535.817 cv
1138.4 536.091 1145.04 537.105 1152.13 540.959 cv
1158.34 544.336 1162.07 548.35 1162.95 549.324 cv
1166.93 553.722 1168.88 557.934 1170.66 561.979 cv
1171.16 555.368 1171.66 548.757 1172.16 542.146 cv
1170.45 539.429 1168.18 536.432 1165.02 533.477 cv
cp
.411765 .109804 .631373 rgb
f
1158.2 462.198 mo
1158.25 461.673 1158.31 461.184 1158.37 460.715 cv
1153.5 459.771 1148.24 458.877 1142.76 458.048 cv
1146.6 458.978 1150.54 460.005 1154.58 461.149 cv
1155.8 461.495 1157 461.845 1158.2 462.198 cv
cp
.701961 .701961 .701961 rgb
f
989.21 623.531 mo
997.63 630.934 1001.5 634.55 1003.19 636.195 cv
1006.03 631.977 1009.88 625.646 1013.08 617.047 cv
1014.36 613.602 1016.07 608.343 1017.28 601.737 cv
1018.31 596.106 1019.98 586.459 1018.03 574.168 cv
1016.61 565.253 1013.96 559.211 1011.41 553.391 cv
1009.23 548.429 1006 542.113 999.954 537.793 cv
997.644 536.142 995.686 535.328 993.68 535.779 cv
991.689 536.228 990.352 537.766 989.537 539.084 cv
987.469 568.735 985.761 592.068 983.764 620.768 cv
984.517 620.93 985.38 621.188 986.294 621.613 cv
987.822 622.323 988.818 623.187 989.21 623.531 cv
cp
.819608 .631373 .890196 rgb
f
1172.62 486.474 mo
1170 478.903 1169.57 472.815 1169.47 471.126 cv
1169.36 469.167 1169.36 467.363 1169.43 465.753 cv
1165.82 464.535 1162.07 463.346 1158.2 462.198 cv
1158 464.162 1157.89 466.503 1158 469.13 cv
1158.39 478.591 1161.4 485.446 1164.1 491.462 cv
1167.43 498.865 1171.14 504.411 1174.71 509.194 cv
1175.1 504.176 1175.49 499.158 1175.89 494.14 cv
1174.81 492.015 1173.69 489.564 1172.62 486.474 cv
cp
.411765 .105882 .631373 rgb
f
1094.11 485.937 mo
1085.5 491.654 1077.71 493.788 1072.59 495.146 cv
1067.13 496.593 1056.52 499.29 1043.03 497.465 cv
1042.72 501.289 1042.43 505.127 1042.13 508.976 cv
1044.34 509.199 1052.6 509.902 1065.45 507.923 cv
1073.81 506.634 1084.05 505.032 1096.07 499.174 cv
1099.48 497.512 1103.32 495.604 1107.28 492.905 cv
1107.63 486.446 1107.99 479.638 1108.36 472.512 cv
1106.3 475.396 1101.84 480.804 1094.11 485.937 cv
cp
.819608 .788235 .854902 rgb
f
1169.47 471.126 mo
1169.57 472.815 1170 478.903 1172.62 486.474 cv
1173.69 489.564 1174.81 492.015 1175.89 494.14 cv
1176.56 485.675 1177.23 477.21 1177.91 468.747 cv
1175.18 467.736 1172.35 466.736 1169.43 465.753 cv
1169.36 467.363 1169.36 469.167 1169.47 471.126 cv
cp
.819608 .631373 .894118 rgb
f
1169.43 465.753 mo
1169.47 464.823 1169.53 463.966 1169.61 463.173 cv
1166.21 462.326 1162.43 461.503 1158.37 460.715 cv
1158.31 461.184 1158.25 461.673 1158.2 462.198 cv
1162.07 463.346 1165.82 464.535 1169.43 465.753 cv
cp
.211765 .0470588 .4 rgb
f
1177.91 468.747 mo
1177.23 477.21 1176.56 485.675 1175.89 494.14 cv
1176.37 495.094 1176.85 495.982 1177.3 496.833 cv
1179.92 501.756 1182.3 505.117 1184.67 508.421 cv
1186.97 511.639 1188.77 513.849 1190.15 515.392 cv
1191.29 500.876 1192.48 486.365 1193.71 471.858 cv
1190.94 470.129 1185.91 467.728 1173.85 464.296 cv
1172.52 463.917 1171.09 463.543 1169.61 463.173 cv
1169.53 463.966 1169.47 464.823 1169.43 465.753 cv
1172.35 466.736 1175.18 467.736 1177.91 468.747 cv
cp
.631373 .396078 .756863 rgb
f
1177.3 496.833 mo
1176.85 495.982 1176.37 495.094 1175.89 494.14 cv
1175.49 499.158 1175.1 504.176 1174.71 509.194 cv
1175.88 510.757 1177.03 512.24 1178.14 513.678 cv
1182.75 519.612 1186.95 523.976 1189.19 526.225 cv
1189.23 526.258 1189.26 526.288 1189.29 526.32 cv
1189.57 522.677 1189.86 519.034 1190.15 515.392 cv
1188.77 513.849 1186.97 511.639 1184.67 508.421 cv
1182.3 505.117 1179.92 501.756 1177.3 496.833 cv
cp
.215686 .0470588 .4 rgb
f
1061.42 617.968 mo
1057.31 601.478 1059.67 587.356 1060.39 583.55 cv
1063.61 566.346 1071.58 554.811 1074.31 551.089 cv
1085.93 535.293 1100.19 528.456 1104.13 526.686 cv
1104.49 526.523 1104.89 526.344 1105.32 526.158 cv
1105.64 520.918 1105.98 515.435 1106.32 509.726 cv
1106.63 504.419 1106.95 498.805 1107.28 492.905 cv
1103.32 495.604 1099.48 497.512 1096.07 499.174 cv
1084.05 505.032 1073.81 506.634 1065.45 507.923 cv
1052.6 509.902 1044.34 509.199 1042.13 508.976 cv
1041.09 522.784 1040.12 536.74 1039.25 550.858 cv
1036.71 591.7 1035.04 631.367 1034.12 669.777 cv
1035.04 631.367 1036.71 591.7 1039.25 550.858 cv
1040.12 536.74 1041.09 522.784 1042.13 508.976 cv
1042.08 508.97 1042.02 508.964 1041.97 508.958 cv
1036.71 508.412 1031.77 507.899 1025.85 505.275 cv
1022.41 503.75 1013.76 499.911 1008.36 490.771 cv
1003.53 482.609 1003.27 473.439 1003.06 466.253 cv
1002.97 462.907 1003.11 459.981 1003.31 457.625 cv
997.664 459.038 995.414 460.117 994.889 466.483 cv
994.255 474.167 993.069 488.57 990.548 524.557 cv
991.271 523.362 992.393 522.063 994.083 521.391 cv
994.809 521.103 997.209 520.306 1002.14 522.772 cv
1007.32 525.362 1010.66 529.233 1013.54 533.247 cv
1018.7 540.443 1021.79 547.25 1023.67 552.125 cv
1025.04 555.678 1027.63 563.038 1029.08 572.845 cv
1029.8 577.725 1030.99 586.227 1029.65 597.133 cv
1028.33 607.886 1025.21 615.514 1022.52 622.112 cv
1020.95 625.951 1017.25 634.421 1010.67 644.219 cv
1012.34 645.923 1013.69 647.187 1015.48 648.978 cv
1017.61 651.121 1020.38 654.024 1025.13 659.369 cv
1029.39 664.173 1034.53 670.15 1040.25 677.189 cv
1041.48 677.23 1042.63 677.306 1043.67 677.404 cv
1051.19 669.457 1058.73 661.476 1065.34 654.458 cv
1068.48 651.124 1071.76 647.62 1075.09 644.051 cv
1073.59 642.477 1071.77 640.39 1069.94 637.767 cv
1068.83 636.181 1064.29 629.484 1061.42 617.968 cv
cp
.929412 .929412 .929412 rgb
f
1104.17 543.956 mo
1096.57 548.504 1091.94 553.392 1090.74 554.696 cv
1085.65 560.208 1082.93 565.307 1081.38 568.278 cv
1079.58 571.714 1076.17 578.351 1074.72 587.751 cv
1073.8 593.694 1074.04 598.28 1074.2 600.932 cv
1074.47 605.613 1075.13 615.134 1080.53 625.507 cv
1082.18 628.676 1083.9 631.21 1085.32 633.089 cv
1089.87 628.197 1094.35 623.378 1098.54 618.888 cv
1099.42 608.353 1100.46 595.534 1101.56 580.94 cv
1102.12 573.483 1103.06 560.635 1104.17 543.956 cv
cp
.905882 .858824 .933333 rgb
f
1181.6 569.622 mo
1179.45 556.358 1176.31 549.844 1175.38 547.981 cv
1174.55 546.331 1173.54 544.329 1172.16 542.146 cv
1171.66 548.757 1171.16 555.368 1170.66 561.979 cv
1170.75 562.187 1170.84 562.394 1170.93 562.6 cv
1171.62 564.168 1173.61 568.888 1175 575.416 cv
1175.77 579.073 1176.16 582.371 1176.34 585.169 cv
1178.38 587.339 1179.94 589.563 1180.91 591.454 cv
1181.81 593.218 1182.52 594.678 1183.2 596.125 cv
1183.6 585.238 1182.66 576.217 1181.6 569.622 cv
cp
.215686 .0470588 .4 rgb
f
1189.29 526.32 mo
1189.26 526.288 1189.23 526.258 1189.19 526.225 cv
1186.95 523.976 1182.75 519.612 1178.14 513.678 cv
1177.03 512.24 1175.88 510.757 1174.71 509.194 cv
1174.27 514.845 1173.82 520.497 1173.39 526.148 cv
1172.97 531.481 1172.57 536.813 1172.16 542.146 cv
1173.54 544.329 1174.55 546.331 1175.38 547.981 cv
1176.31 549.844 1179.45 556.358 1181.6 569.622 cv
1182.66 576.217 1183.6 585.238 1183.2 596.125 cv
1183.48 596.726 1183.76 597.325 1184.04 597.941 cv
1185.45 577.447 1186.94 556.956 1188.5 536.47 cv
1188.76 533.086 1189.03 529.704 1189.29 526.32 cv
cp
.756863 .756863 .756863 rgb
f
1162.95 549.324 mo
1162.07 548.35 1158.34 544.336 1152.13 540.959 cv
1145.04 537.105 1138.4 536.091 1134.4 535.817 cv
1127.99 535.38 1123.12 536.489 1120.44 537.122 cv
1114.45 538.534 1110.26 540.668 1107.62 542.034 cv
1106.41 542.66 1105.26 543.304 1104.17 543.956 cv
1103.06 560.635 1102.12 573.483 1101.56 580.94 cv
1100.46 595.534 1099.42 608.353 1098.54 618.888 cv
1104.62 612.363 1110.08 606.534 1114.22 602.198 cv
1125.42 590.457 1132.56 582.782 1137.55 579.483 cv
1142.54 576.183 1148.64 574.648 1159.23 575.876 cv
1162.94 576.306 1166.35 577.653 1169.35 579.463 cv
1169.78 573.635 1170.22 567.807 1170.66 561.979 cv
1168.88 557.934 1166.93 553.722 1162.95 549.324 cv
cp
.819608 .635294 .894118 rgb
f
1170.93 562.6 mo
1170.84 562.394 1170.75 562.187 1170.66 561.979 cv
1170.22 567.807 1169.78 573.635 1169.35 579.463 cv
1172.05 581.097 1174.41 583.108 1176.34 585.169 cv
1176.16 582.371 1175.77 579.073 1175 575.416 cv
1173.61 568.888 1171.62 564.168 1170.93 562.6 cv
cp
.631373 .396078 .752941 rgb
f
1196.62 473.908 mo
1195.82 473.351 1195.02 472.68 1193.71 471.858 cv
1192.48 486.365 1191.29 500.876 1190.15 515.392 cv
1191.67 517.096 1192.68 517.984 1193.26 518.475 cv
1194.38 519.424 1195.42 520.192 1196.28 520.791 cv
1197.7 501.972 1198.99 485.579 1199.21 482.426 cv
1199.5 478.224 1199.09 475.634 1196.62 473.908 cv
cp
.388235 .196078 .533333 rgb
f
1190.15 515.392 mo
1189.86 519.034 1189.57 522.677 1189.29 526.32 cv
1191.58 528.614 1193.68 530.545 1195.44 532.097 cv
1195.72 528.289 1196.01 524.493 1196.28 520.791 cv
1195.42 520.192 1194.38 519.424 1193.26 518.475 cv
1192.68 517.984 1191.67 517.096 1190.15 515.392 cv
cp
.0941176 .0196078 .2 rgb
f
1188.5 536.47 mo
1186.94 556.956 1185.45 577.447 1184.04 597.941 cv
1185.28 600.621 1186.66 603.646 1189.19 608.721 cv
1190.19 597.056 1193.03 565.593 1194.87 539.961 cv
1195.06 537.353 1195.25 534.722 1195.44 532.097 cv
1193.68 530.545 1191.58 528.614 1189.29 526.32 cv
1189.03 529.704 1188.76 533.086 1188.5 536.47 cv
cp
.533333 .533333 .533333 rgb
f
1026.54 678.4 mo
1024.41 678.855 1021.43 679.516 1018.01 680.801 cv
1018.48 685.741 1018.99 690.621 1019.52 695.437 cv
1023.04 694.012 1026.31 693.276 1029 692.903 cv
1033.14 688.526 1037.51 683.911 1041.92 679.258 cv
1041.35 678.559 1040.8 677.869 1040.25 677.189 cv
1036.42 677.063 1031.75 677.29 1026.54 678.4 cv
cp
.211765 .0470588 .396078 rgb
f
1004.9 705.682 mo
1010.69 699.513 1016.65 696.706 1017.91 696.127 cv
1018.45 695.878 1018.99 695.652 1019.52 695.437 cv
1018.99 690.621 1018.48 685.741 1018.01 680.801 cv
1015.17 681.867 1012.03 683.361 1008.82 685.537 cv
1001.07 690.78 997.094 697.118 994.313 701.653 cv
988.301 711.459 986.494 720.491 984.99 728.013 cv
983.91 733.41 983.401 738.137 983.155 741.846 cv
985.85 738.935 988.642 735.906 991.493 732.816 cv
992.192 729.879 993.223 726.397 994.774 722.603 cv
996.825 717.584 999.323 711.629 1004.9 705.682 cv
cp
.0941176 .0196078 .2 rgb
f
1017.91 696.127 mo
1016.65 696.706 1010.69 699.513 1004.9 705.682 cv
999.323 711.629 996.825 717.584 994.774 722.603 cv
993.223 726.397 992.192 729.879 991.493 732.816 cv
998.304 725.434 1005.46 717.694 1012.5 710.286 cv
1014.83 707.838 1017.45 705.072 1020.29 702.086 cv
1020.03 699.882 1019.77 697.667 1019.52 695.437 cv
1018.99 695.652 1018.45 695.878 1017.91 696.127 cv
cp
.388235 .196078 .533333 rgb
f
994.313 701.653 mo
997.094 697.118 1001.07 690.78 1008.82 685.537 cv
1012.03 683.361 1015.17 681.867 1018.01 680.801 cv
1017.74 677.949 1017.47 675.078 1017.22 672.185 cv
1016.54 664.311 1015.96 656.573 1015.48 648.978 cv
1013.69 647.187 1012.34 645.923 1010.67 644.219 cv
1010.44 644.561 1010.21 644.904 1009.97 645.249 cv
1007.84 648.347 1003.22 654.777 996.04 661.709 cv
991.511 666.083 984.054 673.17 980.28 671.547 cv
977.895 705.762 975.896 732.251 974.63 750.997 cv
977.324 748.132 980.182 745.058 983.155 741.846 cv
983.401 738.137 983.91 733.41 984.99 728.013 cv
986.494 720.491 988.301 711.459 994.313 701.653 cv
cp
.533333 .533333 .533333 rgb
f
996.04 661.709 mo
1003.22 654.777 1007.84 648.347 1009.97 645.249 cv
1010.21 644.904 1010.44 644.561 1010.67 644.219 cv
1009.09 642.617 1007.22 640.624 1004.4 637.421 cv
1004.4 637.421 1004.14 637.116 1003.19 636.195 cv
1002.5 637.21 1001.88 638.107 1001.33 638.879 cv
998.271 643.239 996.26 645.389 992.587 649.316 cv
985.969 656.391 983.727 657.126 982.304 656.606 cv
981.936 656.472 981.626 656.246 981.354 655.974 cv
980.989 661.332 980.63 666.522 980.28 671.547 cv
984.054 673.17 991.511 666.083 996.04 661.709 cv
cp
.0901961 .0156863 .196078 rgb
f
1020.29 702.086 mo
1023.02 699.206 1025.95 696.121 1029 692.903 cv
1026.31 693.276 1023.04 694.012 1019.52 695.437 cv
1019.77 697.667 1020.03 699.882 1020.29 702.086 cv
cp
.631373 .4 .756863 rgb
f
1074.2 600.932 mo
1074.04 598.28 1073.8 593.694 1074.72 587.751 cv
1076.17 578.351 1079.58 571.714 1081.38 568.278 cv
1082.93 565.307 1085.65 560.208 1090.74 554.696 cv
1091.94 553.392 1096.57 548.504 1104.17 543.956 cv
1104.54 538.427 1104.92 532.473 1105.32 526.158 cv
1104.89 526.344 1104.49 526.523 1104.13 526.686 cv
1100.19 528.456 1085.93 535.293 1074.31 551.089 cv
1071.58 554.811 1063.61 566.346 1060.39 583.55 cv
1059.67 587.356 1057.31 601.478 1061.42 617.968 cv
1064.29 629.484 1068.83 636.181 1069.94 637.767 cv
1071.77 640.39 1073.59 642.477 1075.09 644.051 cv
1078.48 640.429 1081.92 636.74 1085.32 633.089 cv
1083.9 631.21 1082.18 628.676 1080.53 625.507 cv
1075.13 615.134 1074.47 605.613 1074.2 600.932 cv
cp
.823529 .788235 .854902 rgb
f
1041.92 679.258 mo
1042.5 678.64 1043.08 678.022 1043.67 677.404 cv
1042.63 677.306 1041.48 677.23 1040.25 677.189 cv
1040.8 677.869 1041.35 678.559 1041.92 679.258 cv
cp
.819608 .788235 .854902 rgb
f
982.304 656.606 mo
983.727 657.126 985.969 656.391 992.587 649.316 cv
996.26 645.389 998.271 643.239 1001.33 638.879 cv
1001.88 638.107 1002.5 637.21 1003.19 636.195 cv
1001.5 634.55 997.63 630.934 989.21 623.531 cv
988.818 623.187 987.822 622.323 986.294 621.613 cv
985.38 621.188 984.517 620.93 983.764 620.768 cv
983.157 629.498 982.522 638.724 981.843 648.779 cv
981.679 651.212 981.516 653.605 981.354 655.974 cv
981.626 656.246 981.936 656.472 982.304 656.606 cv
cp
.392157 .2 .533333 rgb
f
987.004 462.685 mo
970.255 457.159 965.018 448.353 964.155 444.67 cv
963.243 440.779 963.292 437.418 968.529 428.785 cv
973.766 420.151 983.071 405.129 993.201 388.938 cv
1003.33 372.745 1023.51 341.052 1037.17 319.104 cv
1050.83 297.156 1075.24 258.172 1084.67 243.515 cv
1094.11 228.858 1099.29 220.685 1102.9 215.735 cv
1107.68 209.17 1123.81 207.716 1128.76 217.846 cv
1133.71 227.975 1145.91 254.335 1158.34 282.883 cv
1170.78 311.43 1196.71 369.138 1205.31 388.938 cv
1213.91 408.736 1223.5 431.259 1230.06 446.454 cv
1236.66 461.737 1231.94 468.44 1221.73 473.351 cv
1211.53 478.263 1207.84 478.032 1207.84 478.032 cv
1207.84 478.032 1207.84 475.692 1207.84 473.62 cv
1207.84 471.548 1208.28 467.979 1202.64 464.756 cv
1197 461.533 1181.46 453.977 1147.99 449.447 cv
1115.24 445.015 1083.75 441.389 1042.43 442.54 cv
1003.4 443.627 994.253 449.292 991.896 450.79 cv
987.58 453.533 987.925 455.72 987.004 462.685 cv
cp
.745098 .0705882 .701961 rgb
f
gsave
987.004 462.685 mo
970.255 457.159 965.018 448.353 964.155 444.67 cv
963.243 440.779 963.292 437.418 968.529 428.785 cv
973.766 420.151 983.071 405.129 993.201 388.938 cv
1003.33 372.745 1023.51 341.052 1037.17 319.104 cv
1050.83 297.156 1075.24 258.172 1084.67 243.515 cv
1094.11 228.858 1099.29 220.685 1102.9 215.735 cv
1107.68 209.17 1123.81 207.716 1128.76 217.846 cv
1133.71 227.975 1145.91 254.335 1158.34 282.883 cv
1170.78 311.43 1196.71 369.138 1205.31 388.938 cv
1213.91 408.736 1223.5 431.259 1230.06 446.454 cv
1236.66 461.737 1231.94 468.44 1221.73 473.351 cv
1211.53 478.263 1207.84 478.032 1207.84 478.032 cv
1207.84 478.032 1207.84 475.692 1207.84 473.62 cv
1207.84 471.548 1208.28 467.979 1202.64 464.756 cv
1197 461.533 1181.46 453.977 1147.99 449.447 cv
1115.24 445.015 1083.75 441.389 1042.43 442.54 cv
1003.4 443.627 994.253 449.292 991.896 450.79 cv
987.58 453.533 987.925 455.72 987.004 462.685 cv
cp
clp
1029.02 424.756 mo
1028.98 422.867 1050.17 419.774 1072.36 420.497 cv
1096.57 421.285 1119.07 426.521 1118.86 428.497 cv
1118.64 430.627 1091.98 429.457 1071.44 428.554 cv
1051.45 427.676 1029.06 426.693 1029.02 424.756 cv
cp
.882353 .784314 .870588 rgb
f
1110.23 210.67 mo
1117.21 210.747 1124.66 212.205 1126.96 218.498 cv
1129.26 224.791 1143 261.856 1150.06 280.964 cv
1157.12 300.072 1175.27 349.301 1182.98 370.251 cv
1190.69 391.201 1192.07 399.144 1196.22 412.036 cv
1200.36 424.928 1202.85 432.065 1205.16 436.056 cv
1207.46 440.046 1210.76 446.876 1200.48 449.178 cv
1190.19 451.48 1164.02 443.96 1138.7 441.351 cv
1113.38 438.742 1084.44 436.209 1051.14 436.669 cv
1017.83 437.13 993.85 439.624 982.764 442.348 cv
969.181 445.687 969.872 452.708 965.268 447.835 cv
960.663 442.962 962.888 454.473 962.888 454.473 cv
986.985 471.893 li
1007.01 454.167 li
1095.73 451.71 li
1195.03 465.677 li
1206.38 485.937 li
1242.3 468.593 li
1229.71 426.08 li
1181.37 311.737 li
1156.35 245.126 li
1130.72 203.687 li
1110.46 203.534 li
1110.23 210.67 li
cp
.431373 .0196078 .380392 rgb
f
1127.15 215.428 mo
1129.91 222.162 1144.47 256.004 1150.12 270.105 cv
1155.75 284.207 1164.04 308.437 1170.2 323.919 cv
1176.36 339.402 1186.2 364.38 1193.68 383.374 cv
1201.17 402.367 1207.78 419.483 1212.37 430.3 cv
1219.47 447.029 1223.21 445.015 1226.55 451.116 cv
1229.89 457.217 1232.36 464.641 1226.95 469.246 cv
1225.13 470.793 1222.86 471.966 1221 472.315 cv
1217.74 472.929 1215.2 471.781 1212.52 470.167 cv
1209.53 468.363 1211.07 465.178 1203.54 461.764 cv
1196.02 458.349 1178.68 452.325 1156.96 448.948 cv
1135.25 445.571 1106.08 441.965 1071.86 441.581 cv
1037.63 441.197 1026.05 442.29 1007.86 444.42 cv
976.74 448.065 970.946 454.665 967.915 451.25 cv
964.842 447.788 965.536 452.9 965.536 452.9 cv
984.586 467.059 li
995.925 459.807 li
1006.98 450.368 li
1075.58 447.605 li
1112.42 449.677 li
1162.83 455.893 li
1197.71 464.641 li
1207.5 481.447 li
1226.14 473.62 li
1237.89 464.526 li
1230.75 439.663 li
1211.53 393.964 li
1189.19 340.438 li
1163.99 283.918 li
1146.14 238.911 li
1129.57 210.824 li
1127.15 215.428 li
cp
.282353 .0117647 .243137 rgb
f
grestore
1279.29 811.928 mo
1290.49 777.242 1296.94 758.363 1304.92 733.96 cv
1312.9 709.557 1322.34 681.316 1325.02 673.259 cv
1330.7 676.635 1353.92 692.482 1396.58 708.444 cv
1439.25 724.406 1455.94 727.667 1480.81 732.579 cv
1505.67 737.49 1516.8 737.72 1524.16 737.951 cv
1519.71 750.459 1506.44 786.604 1493.7 821.444 cv
1480.96 856.284 1469.45 888.208 1458.71 917.215 cv
1447.96 946.223 1433.07 987.048 1422.02 1016.82 cv
1410.97 1046.6 1394.7 1090.49 1383.96 1120.42 cv
1373.22 1150.35 1361.4 1182.7 1361.4 1182.7 cv
1361.4 1182.7 1324.68 1189.6 1294.64 1194.9 cv
1264.59 1200.19 1169.63 1218.61 1158.12 1220.68 cv
1160.99 1206.29 1165.25 1186.57 1169.7 1165.08 cv
1174.15 1143.6 1179.99 1114.59 1179.99 1114.59 cv
1179.99 1114.59 1191.5 1080.52 1200.09 1053.51 cv
1208.69 1026.49 1222.65 985.207 1234.32 949.446 cv
1245.98 913.685 1248.44 906.472 1251.81 895.575 cv
1262.1 888.208 1272.07 873.78 1277.29 860.428 cv
1282.51 847.075 1284.81 830.959 1279.29 811.928 cv
cp
0 .345098 .54902 rgb
f
1473.17 784.877 mo
1463.2 784.336 1454.47 783.042 1445.55 781.175 cv
1451.49 799 1459.34 810.213 1464.84 815.381 cv
1471.14 821.29 1473.67 822.595 1476.2 816.532 cv
1478.53 810.968 1482.15 800.614 1487.59 785.064 cv
1483.19 785.268 1478.36 785.159 1473.17 784.877 cv
cp
.678431 .678431 .678431 rgb
f
1505.25 736.593 mo
1499.41 752.464 1495.19 763.378 1489.09 780.771 cv
1488.58 782.246 1488.08 783.673 1487.59 785.064 cv
1497.61 784.6 1505.37 782.495 1509.95 777.038 cv
1516.37 759.492 1521.66 744.984 1524.16 737.951 cv
1519.83 737.815 1514.2 737.679 1505.25 736.593 cv
cp
0 .345098 .54902 rgb
f
1419.18 738.488 mo
1416.47 736.449 1414.02 734.676 1411.69 733.041 cv
1408.57 741.655 1404.15 753.799 1398.78 768.447 cv
1405.22 770.669 1411.65 772.659 1418.07 774.383 cv
1422.06 762.907 1425.44 753.108 1428.09 745.395 cv
1426.05 743.758 1422.98 741.334 1419.18 738.488 cv
cp
0 .623529 .796078 rgb
f
1445.55 781.175 mo
1448.5 772.45 1451.61 763.59 1454.87 754.603 cv
1458 745.964 1461.18 737.516 1464.37 729.243 cv
1454.55 727.133 1444.76 724.712 1432.33 720.851 cv
1433.87 732.706 1437.41 751.806 1443.13 773.098 cv
1443.89 775.927 1444.7 778.619 1445.55 781.175 cv
cp
0 .776471 .890196 rgb
f
1358.64 751.956 mo
1372.07 758.254 1385.45 763.846 1398.78 768.447 cv
1404.15 753.799 1408.57 741.655 1411.69 733.041 cv
1406.21 729.176 1401.46 726.096 1395.7 722.219 cv
1386.83 716.243 1389.28 717.606 1374.21 707.178 cv
1358.53 696.32 1355.23 694.4 1343.83 686.381 cv
1338.28 682.478 1333.29 678.88 1328.97 675.702 cv
1327.22 674.615 1325.91 673.785 1325.02 673.259 cv
1323.1 679.045 1317.68 695.237 1311.83 712.943 cv
1312.44 716.812 1313.58 720.431 1318.96 726.056 cv
1325.87 733.27 1338.26 742.401 1358.64 751.956 cv
cp
0 .772549 .890196 rgb
f
1374.21 707.178 mo
1389.28 717.606 1386.83 716.243 1395.7 722.219 cv
1401.46 726.096 1406.21 729.176 1411.69 733.041 cv
1414.02 734.676 1416.47 736.449 1419.18 738.488 cv
1422.98 741.334 1426.05 743.758 1428.09 745.395 cv
1425.44 753.108 1422.06 762.907 1418.07 774.383 cv
1418.52 774.503 1418.97 774.63 1419.41 774.748 cv
1429.04 777.278 1437.38 779.466 1445.55 781.175 cv
1444.7 778.619 1443.89 775.927 1443.13 773.098 cv
1437.41 751.806 1433.87 732.706 1432.33 720.851 cv
1422.51 717.801 1411.04 713.852 1396.58 708.444 cv
1360.57 694.971 1338.42 681.581 1328.97 675.702 cv
1333.29 678.88 1338.28 682.478 1343.83 686.381 cv
1355.23 694.4 1358.53 696.32 1374.21 707.178 cv
cp
0 .345098 .552941 rgb
f
1394.78 779.352 mo
1387.8 798.354 1381.49 815.501 1369.53 847.529 cv
1376.03 849.795 1381.96 851.639 1387.18 853.137 cv
1388.08 853.394 1388.96 853.641 1389.83 853.883 cv
1396.4 835.734 1401.79 820.626 1405.91 809.012 cv
1410.41 796.312 1414.49 784.673 1418.07 774.383 cv
1411.65 772.659 1405.22 770.669 1398.78 768.447 cv
1397.5 771.944 1396.17 775.583 1394.78 779.352 cv
cp
.678431 .678431 .678431 rgb
f
1340.77 924.399 mo
1332.76 945.868 1332.21 947.386 1327.21 960.535 cv
1321.84 974.642 1316.87 987.592 1312.42 999.125 cv
1320.12 1001.98 1327 1004.1 1332.84 1005.74 cv
1340.52 985.919 1346.89 969.263 1351.73 956.506 cv
1355.05 947.758 1358.25 939.272 1361.34 931.06 cv
1354.38 929.103 1349.16 927.36 1346.38 926.405 cv
1345.29 926.033 1343.37 925.364 1340.77 924.399 cv
cp
f
1337 1085.66 mo
1332.85 1085.02 1329.07 1084.31 1325.64 1083.59 cv
1320.93 1094.33 1312.75 1112.75 1299.13 1142.64 cv
1297.62 1145.94 1295.95 1149.59 1294.13 1153.56 cv
1302.26 1155.41 1308.4 1156.32 1310.92 1156.68 cv
1321.88 1158.23 1330 1158.47 1332.68 1158.52 cv
1342.83 1158.74 1348.34 1157.94 1351.04 1157.49 cv
1351.4 1157.43 1351.75 1157.36 1352.1 1157.3 cv
1356.69 1144.65 1361.27 1132 1365.85 1119.35 cv
1369.77 1108.49 1373.69 1097.64 1377.6 1086.78 cv
1373.21 1087.54 1368.85 1087.81 1363.47 1087.81 cv
1356.21 1087.8 1347.66 1087.31 1337 1085.66 cv
cp
.67451 .67451 .67451 rgb
f
1325.64 1083.59 mo
1329.07 1084.31 1332.85 1085.02 1337 1085.66 cv
1347.66 1087.31 1356.21 1087.8 1363.47 1087.81 cv
1368.85 1087.81 1373.21 1087.54 1377.6 1086.78 cv
1383.67 1069.91 1389.74 1053.04 1395.78 1036.16 cv
1386.51 1033.21 1376.42 1030.38 1365.54 1027.87 cv
1360.44 1026.7 1355.46 1025.66 1350.62 1024.74 cv
1345.55 1037.06 1338.21 1054.66 1329.05 1075.76 cv
1328.2 1077.72 1327.09 1080.29 1325.64 1083.59 cv
cp
.00392157 .627451 .8 rgb
f
1325.64 1083.59 mo
1318.65 1082.11 1313.18 1080.59 1309.37 1079.52 cv
1305.46 1078.42 1301.81 1077.3 1298.48 1076.2 cv
1298.07 1076.82 1297.66 1077.44 1297.24 1078.06 cv
1282.08 1100.8 1284.39 1096.39 1269.46 1118.73 cv
1264.18 1126.65 1259.31 1134.05 1254.96 1140.76 cv
1257.8 1141.99 1261.04 1143.31 1264.59 1144.65 cv
1274.75 1148.49 1283 1150.78 1287.33 1151.91 cv
1289.71 1152.53 1291.99 1153.08 1294.13 1153.56 cv
1295.95 1149.59 1297.62 1145.94 1299.13 1142.64 cv
1312.75 1112.75 1320.93 1094.33 1325.64 1083.59 cv
cp
.85098 .85098 .85098 rgb
f
1298.48 1076.2 mo
1298.07 1076.82 1297.66 1077.44 1297.25 1078.06 cv
1282.08 1100.8 1284.39 1096.39 1269.46 1118.73 cv
1268.78 1119.75 1268.11 1120.76 1267.45 1121.76 cv
1266.58 1120.96 1265.72 1120.16 1264.85 1119.35 cv
1269.72 1107.37 1276.35 1090.92 1284.23 1071.07 cv
1287.84 1072.5 1292.68 1074.3 1298.48 1076.2 cv
cp
.678431 .678431 .678431 rgb
f
1267.45 1121.76 mo
1262.93 1128.54 1258.75 1134.91 1254.96 1140.76 cv
1248.66 1138.05 1244.3 1135.85 1242.84 1135.1 cv
1238.03 1132.64 1231.12 1129.07 1222.69 1123.24 cv
1215.21 1118.07 1210.48 1113.82 1206.06 1109.83 cv
1202.77 1106.87 1200.47 1104.57 1198.56 1102.17 cv
1200.38 1099.83 1202.75 1097.18 1205.77 1094.52 cv
1209.66 1091.1 1213.47 1088.7 1216.59 1087.04 cv
1216.86 1083.67 1217.37 1081.35 1217.74 1079.96 cv
1217.91 1079.33 1218.15 1078.53 1218.78 1078.29 cv
1219.72 1077.94 1220.55 1079.25 1222 1079.27 cv
1223.07 1079.29 1223.97 1078.6 1224.59 1077.95 cv
1224.71 1080.78 1224.75 1083.78 1224.65 1086.93 cv
1224.45 1093.55 1223.71 1099.57 1222.75 1104.88 cv
1225.48 1104.63 1228.26 1104.4 1231.09 1104.19 cv
1233.54 1104.01 1235.97 1103.86 1238.35 1103.73 cv
1243.96 1105.95 1249.58 1108.16 1255.19 1110.37 cv
1258.41 1113.36 1261.64 1116.36 1264.85 1119.35 cv
1265.72 1120.16 1266.58 1120.96 1267.45 1121.76 cv
cp
.466667 .466667 .466667 rgb
f
1369.53 847.529 mo
1367.17 853.843 1364.59 860.732 1361.74 868.332 cv
1351.43 895.866 1345.04 912.962 1340.77 924.399 cv
1343.37 925.364 1345.29 926.033 1346.38 926.405 cv
1349.16 927.36 1354.38 929.103 1361.34 931.06 cv
1372.44 901.509 1381.98 875.531 1389.83 853.883 cv
1388.96 853.641 1388.08 853.394 1387.18 853.137 cv
1381.96 851.639 1376.03 849.795 1369.53 847.529 cv
cp
0 .623529 .796078 rgb
f
1289 799.323 mo
1291.05 803.775 1294.68 806.863 1296.53 808.417 cv
1308.29 818.241 1313.17 821.137 1313.17 821.137 cv
1331.94 832.271 1347.82 839.094 1347.82 839.094 cv
1355.55 842.416 1362.84 845.196 1369.53 847.529 cv
1381.49 815.501 1387.8 798.354 1394.78 779.352 cv
1396.17 775.583 1397.5 771.944 1398.78 768.447 cv
1385.45 763.846 1372.07 758.254 1358.64 751.956 cv
1338.26 742.401 1325.87 733.27 1318.96 726.056 cv
1313.58 720.431 1312.44 716.812 1311.83 712.943 cv
1309.53 719.895 1307.17 727.08 1304.92 733.96 cv
1298.77 752.757 1293.53 768.283 1286.33 790.274 cv
1286.46 791.146 1286.65 792.159 1286.92 793.28 cv
1286.92 793.28 1287.72 796.567 1289 799.323 cv
cp
.85098 .85098 .85098 rgb
f
1295.21 1043.3 mo
1291.34 1053.15 1287.67 1062.43 1284.24 1071.07 cv
1287.84 1072.49 1292.68 1074.3 1298.48 1076.2 cv
1303.9 1068.07 1308.71 1060.78 1314.48 1052.65 cv
1321.22 1035.58 1327.36 1019.86 1332.84 1005.74 cv
1327 1004.1 1320.12 1001.98 1312.42 999.125 cv
1305.1 1018.06 1299.19 1033.18 1295.21 1043.3 cv
cp
0 .627451 .796078 rgb
f
1309.37 1079.52 mo
1313.18 1080.59 1318.65 1082.11 1325.64 1083.59 cv
1327.09 1080.29 1328.2 1077.72 1329.05 1075.76 cv
1338.21 1054.66 1345.55 1037.06 1350.62 1024.74 cv
1346.16 1023.9 1341.82 1023.15 1337.61 1022.5 cv
1334.26 1026.55 1329.16 1032.86 1323.18 1040.77 cv
1319.97 1045.01 1317.13 1048.92 1314.48 1052.65 cv
1314.4 1052.83 1314.33 1053.01 1314.26 1053.2 cv
1314.33 1053.01 1314.4 1052.83 1314.48 1052.65 cv
1308.71 1060.78 1303.9 1068.07 1298.48 1076.2 cv
1301.81 1077.3 1305.46 1078.42 1309.37 1079.52 cv
cp
0 .772549 .890196 rgb
f
1445.55 781.175 mo
1454.47 783.042 1463.2 784.336 1473.17 784.877 cv
1478.36 785.159 1483.19 785.268 1487.59 785.064 cv
1488.08 783.673 1488.58 782.246 1489.09 780.771 cv
1495.19 763.378 1499.41 752.464 1505.25 736.593 cv
1498.97 735.832 1491.06 734.604 1480.81 732.579 cv
1475.03 731.438 1469.7 730.386 1464.37 729.243 cv
1461.18 737.516 1458 745.964 1454.87 754.603 cv
1451.61 763.59 1448.5 772.45 1445.55 781.175 cv
cp
.00392157 .627451 .8 rgb
f
1364.68 1153.23 mo
1362.22 1154.54 1358.61 1156.1 1352.1 1157.3 cv
1348.57 1167 1345.04 1176.7 1341.51 1186.4 cv
1353.26 1184.23 1361.4 1182.7 1361.4 1182.7 cv
1361.4 1182.7 1367.93 1164.82 1375.7 1143.35 cv
1374.76 1144.82 1373.57 1146.4 1372.05 1147.93 cv
1369.22 1150.78 1366.49 1152.26 1364.68 1153.23 cv
cp
0 .345098 .54902 rgb
f
1420.95 1008.69 mo
1417.94 1010.76 1414.96 1011.99 1411.59 1012.99 cv
1399.72 1016.5 1388.66 1015.55 1385.96 1015.29 cv
1360.94 1012.91 1344.06 1008.69 1344.06 1008.69 cv
1340.93 1007.91 1337.17 1006.96 1332.84 1005.74 cv
1327.36 1019.86 1321.22 1035.58 1314.48 1052.65 cv
1317.13 1048.92 1319.97 1045.01 1323.18 1040.77 cv
1329.16 1032.86 1334.26 1026.55 1337.61 1022.5 cv
1341.82 1023.15 1346.16 1023.9 1350.62 1024.74 cv
1355.46 1025.66 1360.44 1026.7 1365.54 1027.87 cv
1376.42 1030.38 1386.51 1033.21 1395.78 1036.16 cv
1389.74 1053.04 1383.67 1069.91 1377.6 1086.78 cv
1378.79 1086.57 1379.98 1086.33 1381.2 1086.04 cv
1385.66 1084.99 1389.77 1083.98 1394.17 1080.9 cv
1397.01 1078.91 1399.12 1076.65 1400.66 1074.6 cv
1408.16 1054.19 1415.9 1033.34 1422.02 1016.82 cv
1423.66 1012.43 1425.37 1007.78 1427.15 1002.98 cv
1425.58 1004.89 1423.55 1006.9 1420.95 1008.69 cv
cp
.00392157 .345098 .552941 rgb
f
1287.33 1151.91 mo
1283 1150.78 1274.75 1148.49 1264.59 1144.65 cv
1261.04 1143.31 1257.8 1141.99 1254.96 1140.76 cv
1243.82 1157.91 1235.96 1170.58 1232.63 1175.98 cv
1226.44 1186.01 1221 1195.06 1216.41 1202.8 cv
1219.98 1204.74 1223.27 1206.36 1226.16 1207.71 cv
1242.7 1204.56 1259.52 1201.37 1273.25 1198.81 cv
1281.48 1181.11 1288.53 1165.8 1294.13 1153.56 cv
1291.99 1153.08 1289.71 1152.53 1287.33 1151.91 cv
cp
0 .772549 .890196 rgb
f
1351.04 1157.49 mo
1348.34 1157.94 1342.83 1158.74 1332.68 1158.52 cv
1330 1158.47 1321.88 1158.23 1310.92 1156.68 cv
1308.4 1156.32 1302.26 1155.41 1294.13 1153.56 cv
1288.53 1165.8 1281.48 1181.11 1273.25 1198.81 cv
1281.88 1197.2 1289.29 1195.84 1294.64 1194.9 cv
1310.53 1192.1 1328.3 1188.84 1341.51 1186.4 cv
1345.04 1176.7 1348.57 1167 1352.1 1157.3 cv
1351.75 1157.36 1351.4 1157.43 1351.04 1157.49 cv
cp
0 .623529 .796078 rgb
f
1394.17 1080.9 mo
1389.77 1083.98 1385.66 1084.99 1381.2 1086.04 cv
1379.98 1086.33 1378.79 1086.57 1377.6 1086.78 cv
1373.69 1097.64 1369.77 1108.49 1365.85 1119.35 cv
1361.27 1132 1356.69 1144.65 1352.1 1157.3 cv
1358.61 1156.1 1362.22 1154.54 1364.68 1153.23 cv
1366.49 1152.26 1369.22 1150.78 1372.05 1147.93 cv
1373.57 1146.4 1374.76 1144.82 1375.7 1143.35 cv
1378.38 1135.94 1381.2 1128.1 1383.96 1120.42 cv
1388.75 1107.09 1394.63 1090.99 1400.66 1074.6 cv
1399.12 1076.65 1397.01 1078.91 1394.17 1080.9 cv
cp
.466667 .466667 .466667 rgb
f
1487.59 785.064 mo
1482.15 800.614 1478.53 810.968 1476.2 816.532 cv
1473.67 822.595 1471.14 821.29 1464.84 815.381 cv
1459.34 810.213 1451.49 799 1445.55 781.176 cv
1437.38 779.466 1429.04 777.278 1419.41 774.748 cv
1418.97 774.63 1418.52 774.503 1418.07 774.383 cv
1414.49 784.673 1410.41 796.312 1405.91 809.012 cv
1401.79 820.626 1396.4 835.734 1389.83 853.883 cv
1405.88 858.348 1417.82 860.335 1428.05 862.001 cv
1428.05 862.001 1440.29 863.995 1459.59 863.382 cv
1463.02 863.273 1467.79 863.023 1473.06 860.389 cv
1477.18 858.324 1480.14 855.532 1482.13 853.162 cv
1485.88 842.872 1489.73 832.3 1493.7 821.444 cv
1499.27 806.195 1504.95 790.696 1509.95 777.038 cv
1505.37 782.495 1497.61 784.6 1487.59 785.064 cv
cp
f
1473.06 860.389 mo
1467.79 863.023 1463.02 863.273 1459.59 863.382 cv
1440.29 863.995 1428.05 862.001 1428.05 862.001 cv
1417.82 860.335 1405.88 858.348 1389.83 853.883 cv
1381.98 875.531 1372.44 901.509 1361.34 931.06 cv
1364.4 931.919 1367.8 932.821 1371.47 933.714 cv
1386.57 937.386 1398.48 939.01 1405.83 939.815 cv
1406.31 939.868 1417.08 941 1430.18 940.218 cv
1433.21 940.037 1437.79 939.668 1443.07 937.456 cv
1448.45 935.201 1451.23 932.42 1451.93 931.7 cv
1453 930.6 1453.86 929.493 1454.55 928.458 cv
1455.99 924.56 1457.38 920.797 1458.71 917.215 cv
1466.1 897.246 1473.86 875.895 1482.13 853.162 cv
1480.14 855.532 1477.18 858.324 1473.06 860.389 cv
cp
.00392157 .34902 .552941 rgb
f
1443.07 937.456 mo
1437.79 939.668 1433.21 940.037 1430.18 940.218 cv
1417.08 941 1406.31 939.868 1405.83 939.815 cv
1398.48 939.01 1386.57 937.386 1371.47 933.714 cv
1367.8 932.821 1364.4 931.919 1361.34 931.06 cv
1358.25 939.272 1355.05 947.758 1351.73 956.506 cv
1346.89 969.263 1340.52 985.919 1332.84 1005.74 cv
1337.17 1006.96 1340.93 1007.91 1344.06 1008.69 cv
1344.06 1008.69 1360.94 1012.91 1385.96 1015.29 cv
1388.66 1015.55 1399.72 1016.5 1411.59 1012.99 cv
1414.96 1011.99 1417.94 1010.76 1420.95 1008.69 cv
1423.55 1006.9 1425.58 1004.89 1427.15 1002.98 cv
1435.9 979.26 1446.06 951.473 1454.55 928.458 cv
1453.86 929.493 1453 930.6 1451.93 931.7 cv
1451.23 932.42 1448.45 935.201 1443.07 937.456 cv
cp
.470588 .470588 .470588 rgb
f
1181.75 1177.67 mo
1188.47 1184.7 1194.71 1189.12 1199.4 1192.4 cv
1205.12 1196.41 1209.74 1199.06 1212.6 1200.69 cv
1213.9 1201.43 1215.17 1202.14 1216.41 1202.8 cv
1221 1195.06 1226.44 1186.01 1232.63 1175.98 cv
1235.96 1170.58 1243.82 1157.91 1254.96 1140.76 cv
1248.66 1138.05 1244.3 1135.85 1242.84 1135.1 cv
1238.03 1132.64 1231.12 1129.08 1222.69 1123.24 cv
1215.21 1118.06 1210.48 1113.82 1206.06 1109.83 cv
1202.77 1106.87 1200.47 1104.57 1198.55 1102.17 cv
1198.75 1104.07 1198.92 1105.99 1199.09 1107.93 cv
1199.36 1110.97 1199.59 1113.96 1199.79 1116.91 cv
1198.45 1118.14 1196.44 1120 1194.03 1122.32 cv
1187.25 1128.85 1185.36 1131.25 1184.71 1132.11 cv
1183.5 1133.67 1181.79 1136.08 1180.04 1139.3 cv
1179.31 1139.37 1178.48 1139.51 1177.57 1139.76 cv
1176.44 1140.08 1175.46 1140.5 1174.66 1140.93 cv
1173.35 1147.35 1171.94 1154.22 1170.61 1160.68 cv
1171.37 1162.71 1172.42 1165.11 1173.92 1167.69 cv
1175.05 1169.64 1177.07 1172.77 1181.75 1177.67 cv
cp
0 .345098 .54902 rgb
f
1217.28 1023.73 mo
1219.99 1029.36 1223.7 1033.13 1225.88 1035.24 cv
1237.29 1046.32 1249.74 1054.04 1249.74 1054.04 cv
1262.03 1061.66 1272.16 1066.02 1278.83 1068.85 cv
1280.06 1069.38 1281.89 1070.14 1284.24 1071.07 cv
1287.67 1062.43 1291.34 1053.15 1295.21 1043.3 cv
1299.19 1033.18 1305.1 1018.06 1312.42 999.125 cv
1307.71 997.383 1302.69 995.373 1297.4 993.034 cv
1297.4 993.034 1281.14 985.849 1259.79 971.547 cv
1259.32 971.227 1249.59 964.604 1242.91 954.971 cv
1240.45 951.423 1238.69 947.87 1237.85 943.614 cv
1237.59 942.326 1237.46 941.127 1237.39 940.036 cv
1236.44 942.936 1235.42 946.063 1234.32 949.446 cv
1227.77 969.511 1220.5 991.314 1213.87 1011.36 cv
1213.96 1012.44 1214.11 1013.66 1214.37 1014.98 cv
1214.56 1015.98 1215.3 1019.62 1217.28 1023.73 cv
cp
0 .772549 .890196 rgb
f
1196.04 1098.61 mo
1196.83 1099.88 1197.65 1101.04 1198.55 1102.17 cv
1200.38 1099.83 1202.75 1097.18 1205.77 1094.52 cv
1209.66 1091.1 1213.47 1088.7 1216.59 1087.04 cv
1216.86 1083.67 1217.37 1081.35 1217.74 1079.96 cv
1217.91 1079.33 1218.15 1078.53 1218.78 1078.29 cv
1219.72 1077.94 1220.55 1079.25 1222 1079.27 cv
1223.07 1079.29 1223.97 1078.59 1224.59 1077.95 cv
1224.71 1080.78 1224.75 1083.78 1224.65 1086.93 cv
1224.44 1093.55 1223.71 1099.57 1222.75 1104.88 cv
1225.48 1104.63 1228.26 1104.4 1231.09 1104.19 cv
1233.55 1104.01 1235.96 1103.86 1238.35 1103.73 cv
1243.96 1105.94 1249.58 1108.16 1255.19 1110.37 cv
1258.41 1113.37 1261.63 1116.36 1264.86 1119.36 cv
1269.71 1107.37 1276.34 1090.92 1284.24 1071.07 cv
1281.89 1070.14 1280.06 1069.38 1278.83 1068.85 cv
1272.16 1066.02 1262.03 1061.66 1249.74 1054.04 cv
1249.74 1054.04 1237.29 1046.32 1225.88 1035.24 cv
1223.7 1033.13 1219.99 1029.36 1217.28 1023.73 cv
1215.3 1019.62 1214.56 1015.98 1214.37 1014.98 cv
1214.11 1013.66 1213.96 1012.44 1213.87 1011.36 cv
1208.67 1027.04 1203.86 1041.65 1200.09 1053.51 cv
1197.17 1062.68 1193.92 1072.67 1190.89 1081.87 cv
1190.9 1084.05 1191.15 1086.64 1191.9 1089.46 cv
1192.12 1090.3 1193.13 1093.94 1196.04 1098.61 cv
cp
.85098 .85098 .85098 rgb
f
1242.91 954.971 mo
1249.59 964.604 1259.32 971.227 1259.79 971.547 cv
1281.14 985.849 1297.4 993.034 1297.4 993.034 cv
1302.69 995.373 1307.71 997.383 1312.42 999.125 cv
1316.87 987.592 1321.84 974.642 1327.21 960.535 cv
1332.21 947.386 1332.76 945.868 1340.77 924.399 cv
1335.78 922.546 1328.31 919.604 1319.56 915.584 cv
1304.31 908.582 1294.49 902.58 1292.33 901.253 cv
1282.51 895.204 1277.49 891.053 1273.28 886.807 cv
1270.61 884.106 1268.5 881.603 1266.92 879.587 cv
1262.38 886.055 1257.14 891.762 1251.81 895.575 cv
1248.76 905.44 1246.46 912.288 1237.39 940.036 cv
1237.46 941.127 1237.59 942.326 1237.85 943.614 cv
1238.69 947.87 1240.45 951.423 1242.91 954.971 cv
cp
.854902 .854902 .854902 rgb
f
1292.33 901.253 mo
1294.49 902.58 1304.31 908.582 1319.56 915.584 cv
1328.31 919.604 1335.78 922.546 1340.77 924.399 cv
1345.04 912.962 1351.43 895.866 1361.74 868.332 cv
1364.59 860.732 1367.17 853.843 1369.53 847.529 cv
1362.84 845.196 1355.55 842.416 1347.82 839.094 cv
1347.82 839.094 1331.94 832.271 1313.17 821.137 cv
1313.17 821.137 1308.29 818.241 1296.53 808.417 cv
1294.68 806.863 1291.05 803.775 1289 799.323 cv
1287.72 796.567 1286.92 793.28 1286.92 793.28 cv
1286.65 792.159 1286.46 791.146 1286.33 790.274 cv
1284.18 796.833 1281.86 803.959 1279.29 811.928 cv
1284.81 830.959 1282.51 847.075 1277.29 860.428 cv
1274.77 866.869 1271.15 873.559 1266.92 879.587 cv
1268.5 881.603 1270.61 884.106 1273.28 886.807 cv
1277.49 891.053 1282.51 895.204 1292.33 901.253 cv
cp
0 .772549 .890196 rgb
f
1180.04 1139.3 mo
1181.79 1136.08 1183.5 1133.67 1184.71 1132.11 cv
1185.36 1131.25 1187.25 1128.85 1194.03 1122.32 cv
1196.44 1120 1198.45 1118.14 1199.79 1116.91 cv
1199.59 1113.96 1199.36 1110.97 1199.09 1107.93 cv
1198.92 1105.99 1198.75 1104.07 1198.55 1102.17 cv
1197.65 1101.04 1196.83 1099.88 1196.04 1098.61 cv
1193.13 1093.94 1192.12 1090.3 1191.9 1089.46 cv
1191.15 1086.64 1190.9 1084.05 1190.89 1081.87 cv
1185 1099.74 1179.99 1114.59 1179.99 1114.59 cv
1179.99 1114.59 1177.57 1126.62 1174.66 1140.93 cv
1175.46 1140.5 1176.44 1140.08 1177.57 1139.76 cv
1178.48 1139.51 1179.31 1139.37 1180.04 1139.3 cv
cp
f
1212.6 1200.69 mo
1209.74 1199.06 1205.12 1196.41 1199.4 1192.4 cv
1194.71 1189.12 1188.47 1184.7 1181.75 1177.67 cv
1177.07 1172.77 1175.05 1169.64 1173.92 1167.69 cv
1172.42 1165.11 1171.37 1162.71 1170.61 1160.68 cv
1170.3 1162.17 1170 1163.65 1169.7 1165.08 cv
1165.25 1186.57 1160.99 1206.29 1158.12 1220.68 cv
1163.37 1219.74 1186 1215.39 1211.91 1210.44 cv
1213.3 1208.06 1214.8 1205.51 1216.41 1202.8 cv
1215.17 1202.14 1213.9 1201.43 1212.6 1200.69 cv
cp
.466667 .466667 .466667 rgb
f
1211.91 1210.44 mo
1216.58 1209.54 1221.36 1208.63 1226.16 1207.71 cv
1223.27 1206.36 1219.98 1204.74 1216.41 1202.8 cv
1214.8 1205.51 1213.3 1208.06 1211.91 1210.44 cv
cp
.85098 .85098 .85098 rgb
f
1430.87 708.444 mo
1431.04 708.442 1431.2 708.439 1431.37 708.438 cv
1436.85 708.36 1442.32 708.285 1447.79 708.214 cv
1448.66 708.203 1449.9 708.187 1451.21 708.17 cv
1389.03 687.379 li
1333.57 661.157 li
1341.9 668.908 1358.3 679.847 1363.55 683.158 cv
1369.38 686.842 1374.6 690.755 1374.6 690.755 cv
1374.28 691.625 li
1377.98 693.391 1381.98 695.21 1386.26 697.048 cv
1399.56 702.757 1414.99 708.865 1431.62 714.032 cv
1431.46 712.95 1431.3 711.858 1431.16 710.747 cv
1431.05 709.973 1430.96 709.206 1430.87 708.444 cv
cp
0 .345098 .552941 rgb
f
1363.55 683.158 mo
1358.3 679.847 1341.9 668.908 1333.57 661.157 cv
1331.82 660.328 li
1334.92 666.659 1341.37 672.53 1347.7 676.904 cv
1352.59 680.281 1361.73 685.647 1374.28 691.625 cv
1374.6 690.755 li
1374.6 690.755 1369.38 686.842 1363.55 683.158 cv
cp
0 .772549 .890196 rgb
f
1501.77 719.546 mo
1504.14 722.161 1506.5 724.776 1508.86 727.392 cv
1520.66 726.988 1525.78 723.984 1525.78 723.984 cv
1501.77 719.546 li
cp
.00392157 .345098 .552941 rgb
f
1464.77 712.703 mo
1451.21 708.17 li
1449.9 708.187 1448.66 708.203 1447.79 708.214 cv
1442.32 708.285 1436.85 708.36 1431.37 708.438 cv
1431.85 708.591 1432.32 708.745 1432.8 708.901 cv
1438 710.604 1443.55 712.25 1449.42 713.778 cv
1456.02 715.496 1462.34 716.88 1468.3 717.998 cv
1467.71 719.636 1467.13 721.274 1466.54 722.913 cv
1483.4 726.336 1495.28 727.438 1506.21 727.438 cv
1507.13 727.438 1508.01 727.42 1508.86 727.392 cv
1506.5 724.776 1504.14 722.161 1501.77 719.546 cv
1464.77 712.703 li
cp
.00392157 .627451 .796078 rgb
f
1449.42 713.778 mo
1443.55 712.25 1438 710.604 1432.8 708.901 cv
1432.32 708.745 1431.85 708.591 1431.37 708.438 cv
1431.2 708.439 1431.04 708.442 1430.87 708.444 cv
1430.96 709.206 1431.05 709.973 1431.16 710.747 cv
1431.3 711.858 1431.46 712.95 1431.62 714.032 cv
1438.46 716.158 1445.5 718.129 1452.68 719.84 cv
1457.67 721.028 1462.26 722.044 1466.54 722.913 cv
1467.13 721.274 1467.71 719.636 1468.3 717.998 cv
1462.34 716.88 1456.02 715.496 1449.42 713.778 cv
cp
0 .776471 .890196 rgb
f
1311.79 614.399 mo
1331.82 594.715 1365.7 562.063 1390.1 538.734 cv
1414.5 515.405 1456.56 475.193 1473.9 458.771 cv
1491.24 442.348 1498.61 435.287 1504.29 430.454 cv
1513.04 423.01 1529.23 427.921 1531.46 437.744 cv
1533.68 447.566 1537.44 472.507 1540.05 489.16 cv
1542.66 505.813 1549.11 545.794 1554.02 578.792 cv
1558.93 611.79 1568.94 676.674 1570.9 690.602 cv
1572.86 704.53 1572.74 709.192 1568.48 713.969 cv
1564.22 718.747 1558.64 722.718 1545.75 724.272 cv
1532.86 725.826 1513.57 724.828 1495.69 721.989 cv
1477.81 719.149 1448.73 712.166 1428.32 705.566 cv
1407.9 698.967 1371.61 685.077 1348.12 672.031 cv
1324.64 658.985 1315.2 649.623 1310.06 642.409 cv
1304.92 635.196 1304.71 630.227 1305.34 626.083 cv
1305.97 621.939 1307.23 618.88 1311.79 614.399 cv
cp
.945098 .854902 .00392157 rgb
f
gsave
1311.79 614.399 mo
1331.82 594.715 1365.7 562.063 1390.1 538.734 cv
1414.5 515.405 1456.56 475.193 1473.9 458.771 cv
1491.24 442.348 1498.61 435.287 1504.29 430.454 cv
1513.04 423.01 1529.23 427.921 1531.46 437.744 cv
1533.68 447.566 1537.44 472.507 1540.05 489.16 cv
1542.66 505.813 1549.11 545.794 1554.02 578.792 cv
1558.93 611.79 1568.94 676.674 1570.9 690.602 cv
1572.86 704.53 1572.74 709.192 1568.48 713.969 cv
1564.22 718.747 1558.64 722.718 1545.75 724.272 cv
1532.86 725.826 1513.57 724.828 1495.69 721.989 cv
1477.81 719.149 1448.73 712.166 1428.32 705.566 cv
1407.9 698.967 1371.61 685.077 1348.12 672.031 cv
1324.64 658.985 1315.2 649.623 1310.06 642.409 cv
1304.92 635.196 1304.71 630.227 1305.34 626.083 cv
1305.97 621.939 1307.23 618.88 1311.79 614.399 cv
cp
clp
1340.68 609.91 mo
1348.71 601.563 1351.47 599.963 1376.59 576.298 cv
1389.19 564.428 1401.44 552.889 1415.39 539.002 cv
1421.36 533.053 1429.88 524.792 1446.93 508.268 cv
1446.93 508.268 1447.44 507.768 1448.42 506.848 cv
1454.5 501.146 1461.52 494.566 1463.08 495.721 cv
1464.02 496.42 1462.91 499.915 1462.12 502.397 cv
1462.05 502.622 1461.72 503.647 1461.31 504.584 cv
1449.13 532.843 1426.4 574.418 1426.4 574.418 cv
1412.97 598.973 1412.99 602.185 1398.39 630.208 cv
1398.39 630.208 1388.23 649.699 1382.12 664.127 cv
1381.57 665.417 1380.96 666.679 1380.45 667.983 cv
1378.93 671.845 1378.9 673.107 1377.75 673.911 cv
1376.23 674.964 1374.1 674.322 1372.28 673.738 cv
1360.94 670.117 1353.63 666.544 1353.63 666.544 cv
1348.11 663.846 1345.35 662.498 1345.17 662.4 cv
1339.48 659.332 1335.62 656.591 1328.13 651.234 cv
1328.13 651.234 1321.33 646.369 1314.95 638.918 cv
1314.21 638.05 1312.64 636.104 1313.17 634.371 cv
1313.31 633.905 1313.57 633.566 1313.77 633.306 cv
1314.98 631.745 1316.83 631.271 1317.25 631.148 cv
1319.32 630.552 1320.95 628.708 1324.68 625.047 cv
1329.92 619.902 1335.59 615.2 1340.68 609.91 cv
cp
.964706 .941176 .870588 rgb
f
1405.34 682.976 mo
1406.05 683.747 1407.14 684.821 1408.65 685.854 cv
1411.13 687.548 1412.72 687.748 1415.41 688.933 cv
1419.04 690.525 1423.11 693.209 1422.78 694.084 cv
1422.47 694.916 1418.21 694.05 1415.41 693.48 cv
1410.88 692.557 1407.2 691.363 1404.59 690.401 cv
1404.31 689.791 1403.84 688.578 1403.9 687.005 cv
1403.99 684.95 1404.94 683.519 1405.34 682.976 cv
cp
.964706 .941176 .87451 rgb
f
1517.6 425.043 mo
1520.83 432.986 1520.71 437.706 1519.45 444.152 cv
1518.18 450.598 1507.51 504.814 1502.14 538.12 cv
1496.77 571.425 1493.54 599.972 1489.09 633.584 cv
1484.64 667.196 1482.38 686.228 1482.03 694.861 cv
1481.47 708.979 1490.09 712.78 1482.88 714.161 cv
1475.67 715.542 1460.09 713.087 1446.27 709.403 cv
1432.46 705.72 1422.93 702.746 1415.67 700.386 cv
1408.42 698.027 1406.35 697.278 1404.62 692.329 cv
1399.04 691.408 1395.39 691.063 1384.34 686.995 cv
1373.29 682.928 1350.58 673.335 1337.38 665.892 cv
1324.18 658.448 1343.9 673.796 1343.9 673.796 cv
1384.73 694.669 li
1443.82 716.157 li
1494.93 726.9 li
1541.74 731.351 li
1580.57 719.073 li
1575.04 671.187 li
1560.31 581.248 li
1550.18 499.443 li
1538.82 439.585 li
1527.62 422.089 li
1517.6 425.043 li
cp
.847059 .607843 .00392157 rgb
f
1520.48 426.655 mo
1521 429.878 1524.11 432.123 1526.12 435.576 cv
1528.14 439.029 1528.6 441.734 1529 450.598 cv
1529.4 459.461 1531.3 495.261 1532.22 521.736 cv
1533.14 548.211 1535.14 591.991 1536.83 636.04 cv
1538.51 680.089 1539.82 705.682 1539.36 714.084 cv
1538.9 722.488 1533.83 725.25 1525.32 726.401 cv
1516.8 727.552 1536.21 727.821 1536.21 727.821 cv
1550.49 726.439 li
1575.35 717.231 li
1573.2 682.852 li
1564.61 631.589 li
1552.94 545.026 li
1542.97 484.249 li
1537.29 443.883 li
1526.7 425.312 li
1520.48 426.655 li
cp
.701961 .396078 0 rgb
f
grestore
897.86 1013.62 mo
894.311 1020.16 890.447 1024.42 888.067 1027.01 cv
885.977 1029.29 876.938 1038.85 861.647 1045.78 cv
858.198 1047.34 855.247 1048.39 853.249 1049.05 cv
848.221 1050.75 842.212 1052.41 835.347 1053.58 cv
828.532 1054.75 822.357 1055.19 817.081 1055.27 cv
814.088 1055.29 809.939 1055.19 805.036 1054.66 cv
799.253 1054.03 788.488 1052.77 776.028 1047.21 cv
770.913 1044.93 761.897 1040.81 752.928 1032.02 cv
751.095 1030.22 748.954 1028.1 746.809 1025.47 cv
746.04 1023.32 745.156 1020.26 744.718 1016.52 cv
744.557 1015.14 743.875 1008.72 745.943 1000.63 cv
746.251 999.433 747.518 994.677 750.625 989.045 cv
752.679 985.316 754.88 982.411 756.689 980.297 cv
757.348 978.423 758.366 975.872 759.913 973.004 cv
760.581 971.765 763.136 967.156 768.095 961.889 cv
768.974 960.954 769.927 960.001 770.963 959.039 cv
778.966 951.603 786.973 948.209 791.223 946.455 cv
793.262 945.612 801.61 942.265 813.384 941.035 cv
817.615 940.593 826.193 939.778 836.792 941.625 cv
840.955 942.352 845.435 943.489 850.081 945.225 cv
855.077 947.09 862.057 949.77 869.267 956.124 cv
875.506 961.622 879.217 967.501 881.313 971.47 cv
882.813 972.783 884.738 974.615 886.764 976.996 cv
890.843 981.793 892.989 986.066 893.44 986.973 cv
894.347 988.815 896.244 992.964 897.354 998.636 cv
898.519 1004.6 898.335 1009.8 897.86 1013.62 cv
cp
936.644 1183.73 mo
935.723 1149.2 934.111 1088.65 933.535 1064.48 cv
932.96 1040.31 931.924 996.334 931.348 987.586 cv
930.773 978.837 929.737 968.938 918.341 952.592 cv
906.945 936.247 888.758 924.505 868.498 917.906 cv
848.239 911.306 831.893 910.635 815.548 911.383 cv
799.202 912.131 784.813 916.333 771.346 921.052 cv
757.877 925.771 742.568 935.786 730.711 947.873 cv
718.855 959.959 712.985 972.622 709.992 986.435 cv
706.999 1000.25 711.258 1021.89 715.172 1054.12 cv
719.085 1086.35 725.685 1135.77 729.676 1167.85 cv
733.666 1199.92 736.659 1223.1 738.961 1241.75 cv
750.472 1253.26 778.482 1281 789.993 1292.28 cv
803.576 1289.46 827.289 1284.45 847.548 1280.54 cv
867.808 1276.63 918.686 1266.38 938.792 1262.24 cv
938.639 1248.81 937.564 1218.27 936.644 1183.73 cv
cp
.756863 .113725 .00392157 rgb
f
938.793 1262.24 mo
924.497 1265.18 894.642 1271.22 871.298 1275.86 cv
872.5 1259.89 873.678 1245.89 874.714 1234.3 cv
875.98 1220.13 877.081 1207.8 878.858 1191.68 cv
880.313 1178.49 880.364 1179.56 880.778 1174.45 cv
881.833 1161.33 881.349 1155.89 883.693 1147.59 cv
885.406 1141.52 887.781 1136.93 889.333 1134.24 cv
889.145 1131.29 888.891 1127.14 888.643 1122.15 cv
888.265 1114.49 887.864 1106.46 887.837 1098.21 cv
887.781 1081.82 887.749 1073.63 890.217 1067.55 cv
893.426 1059.64 899.302 1052.01 901.111 1049.67 cv
903.524 1046.54 905.734 1044.08 907.373 1042.35 cv
910.131 1039.72 913.078 1036.57 916.076 1032.56 cv
919.492 1027.99 927.789 1016.61 930.427 999.709 cv
931.482 992.945 931.325 987.268 931.021 983.529 cv
931.164 984.92 931.261 986.264 931.348 987.586 cv
931.924 996.334 932.96 1040.31 933.535 1064.48 cv
934.111 1088.65 935.723 1149.2 936.644 1183.73 cv
937.564 1218.27 938.637 1248.81 938.793 1262.24 cv
cp
.533333 .0431373 0 rgb
f
907.373 1042.35 mo
905.734 1044.08 903.524 1046.54 901.111 1049.67 cv
899.302 1052.01 893.426 1059.64 890.217 1067.55 cv
887.749 1073.63 887.781 1081.82 887.837 1098.21 cv
887.864 1106.46 888.265 1114.49 888.643 1122.15 cv
888.891 1127.14 889.145 1131.29 889.333 1134.24 cv
887.781 1136.93 885.406 1141.52 883.693 1147.59 cv
881.349 1155.89 881.833 1161.33 880.778 1174.45 cv
880.364 1179.56 880.313 1178.49 878.858 1191.68 cv
877.081 1207.8 875.98 1220.13 874.714 1234.3 cv
873.678 1245.89 872.5 1259.89 871.298 1275.86 cv
861.813 1277.75 853.4 1279.41 847.548 1280.54 cv
827.289 1284.45 803.576 1289.46 789.993 1292.28 cv
778.482 1281 750.474 1253.26 738.963 1241.75 cv
736.661 1223.1 733.667 1199.93 729.676 1167.85 cv
725.684 1135.77 719.085 1086.35 715.172 1054.12 cv
712.317 1030.62 709.278 1012.75 709.006 999.442 cv
709.729 1005.82 711.046 1013.37 713.445 1021.66 cv
717.617 1036.07 723.179 1046.25 725.532 1050.32 cv
728.373 1055.24 732.153 1061.69 738.884 1068.74 cv
750.262 1080.64 757.809 1081.39 759.834 1081.52 cv
762.455 1081.67 764.651 1081.3 766.166 1080.94 cv
767.961 1081.44 770.567 1082.05 773.763 1082.44 cv
781.913 1083.41 788.644 1082.22 792.756 1081.17 cv
794.948 1080.61 797.936 1079.69 801.353 1078.14 cv
810.193 1078.19 822.399 1077.68 836.728 1075.22 cv
845.361 1073.74 854.708 1072.08 866.426 1067.62 cv
886.105 1060.14 898.385 1050.11 901.038 1047.9 cv
902.976 1046.29 905.108 1044.5 907.373 1042.35 cv
cp
.752941 .109804 0 rgb
f
920.836 964.104 mo
920.726 965.268 920.247 966.194 919.529 967.248 cv
918.313 969.048 917.148 970.149 915.178 971.986 cv
915.067 972.087 914.961 972.188 914.86 972.285 cv
915.716 974.763 916.425 977.433 916.923 980.297 cv
919.575 995.538 914.759 1007.62 912.47 1013.14 cv
904.058 1033.46 887.938 1043.72 879.319 1049.21 cv
858.797 1062.27 839.085 1064.31 828.058 1065.32 cv
818.876 1066.17 799.377 1067.75 776.489 1059.49 cv
765.968 1055.7 748.733 1049.23 735.662 1032.33 cv
732.061 1027.67 725.348 1018.77 723.114 1005.31 cv
722.723 1002.95 721.264 993.18 724.496 981.14 cv
727.038 971.668 731.43 964.702 735.334 959.646 cv
734.929 959.172 734.704 958.923 734.704 958.923 cv
733.415 957.491 732.471 955.774 731.209 954.319 cv
731.084 954.171 730.675 953.707 730.633 953.053 cv
730.633 953.048 730.822 952.266 730.882 952.017 cv
731.485 949.567 734.911 946.091 734.916 946.091 cv
737.052 943.917 739 942.076 740.671 940.565 cv
743.567 938.134 747.273 935.271 751.777 932.333 cv
753.393 931.278 756.717 929.17 760.871 926.983 cv
770.277 922.019 778.399 919.579 783.492 918.06 cv
794.285 914.836 803.364 913.497 808.986 912.879 cv
828.739 910.706 844.579 913.137 852.728 914.781 cv
865.119 917.277 873.803 920.776 876.271 921.798 cv
881.05 923.783 887.883 926.665 895.779 932.278 cv
903.271 937.596 907.788 942.509 909.132 944.019 cv
911.149 946.28 912.415 948.02 914.947 951.497 cv
914.947 951.501 917.475 954.973 920.183 960.88 cv
920.459 961.483 920.975 962.639 920.836 964.104 cv
cp
931.021 983.529 mo
930.225 975.702 928.02 966.47 918.341 952.592 cv
906.945 936.247 888.758 924.505 868.498 917.907 cv
848.239 911.305 831.893 910.637 815.548 911.383 cv
799.202 912.129 784.813 916.333 771.346 921.052 cv
757.877 925.771 742.568 935.786 730.711 947.873 cv
718.855 959.959 712.985 972.622 709.992 986.435 cv
709.182 990.178 708.901 994.492 709.006 999.442 cv
709.729 1005.82 711.046 1013.37 713.445 1021.66 cv
717.617 1036.07 723.179 1046.25 725.532 1050.32 cv
728.373 1055.24 732.153 1061.69 738.884 1068.74 cv
750.262 1080.64 757.809 1081.39 759.834 1081.52 cv
762.455 1081.67 764.651 1081.3 766.166 1080.94 cv
767.961 1081.44 770.567 1082.05 773.763 1082.44 cv
781.913 1083.41 788.644 1082.22 792.756 1081.17 cv
794.948 1080.61 797.936 1079.69 801.353 1078.14 cv
810.193 1078.19 822.399 1077.68 836.728 1075.22 cv
845.361 1073.74 854.708 1072.08 866.426 1067.62 cv
886.105 1060.14 898.385 1050.11 901.038 1047.9 cv
902.976 1046.29 905.108 1044.5 907.373 1042.35 cv
910.131 1039.72 913.078 1036.57 916.076 1032.56 cv
919.492 1027.99 927.789 1016.61 930.427 999.709 cv
931.482 992.945 931.325 987.268 931.021 983.529 cv
cp
.894118 .247059 .00392157 rgb
f
920.836 964.104 mo
920.726 965.268 920.247 966.194 919.529 967.248 cv
918.313 969.048 917.148 970.149 915.178 971.986 cv
915.067 972.087 914.961 972.188 914.86 972.285 cv
911.388 962.142 905.563 955.217 902.188 951.289 cv
894.96 942.882 887.551 938.393 882.196 935.211 cv
869.129 927.443 857.535 924.8 850.426 923.239 cv
831.212 919.021 814.894 920.274 805.073 921.743 cv
782.672 925.095 767.284 933.59 763.633 935.671 cv
757.224 939.322 748.222 944.558 739.46 954.665 cv
738.24 956.069 736.822 957.717 735.334 959.646 cv
734.929 959.172 734.704 958.923 734.704 958.923 cv
733.415 957.491 732.471 955.774 731.209 954.319 cv
731.084 954.171 730.675 953.707 730.633 953.053 cv
730.633 953.048 730.822 952.266 730.882 952.017 cv
731.485 949.567 734.911 946.091 734.916 946.091 cv
737.052 943.917 739 942.076 740.671 940.565 cv
743.567 938.134 747.273 935.271 751.777 932.333 cv
753.393 931.278 756.717 929.17 760.871 926.983 cv
770.277 922.019 778.399 919.579 783.492 918.06 cv
794.285 914.836 803.364 913.497 808.986 912.879 cv
828.739 910.706 844.579 913.137 852.728 914.781 cv
865.119 917.277 873.803 920.776 876.271 921.798 cv
881.05 923.783 887.883 926.665 895.779 932.278 cv
903.271 937.596 907.788 942.509 909.132 944.019 cv
911.149 946.28 912.415 948.02 914.947 951.497 cv
914.947 951.501 917.475 954.973 920.183 960.88 cv
920.459 961.483 920.975 962.639 920.836 964.104 cv
cp
.933333 .803922 .776471 rgb
f
912.47 1013.14 mo
904.058 1033.46 887.938 1043.72 879.319 1049.21 cv
858.797 1062.27 839.085 1064.31 828.058 1065.32 cv
818.876 1066.17 799.377 1067.75 776.489 1059.49 cv
765.968 1055.7 748.733 1049.23 735.662 1032.33 cv
732.061 1027.67 725.348 1018.77 723.114 1005.31 cv
722.723 1002.95 721.264 993.18 724.496 981.14 cv
727.038 971.668 731.43 964.702 735.334 959.646 cv
736.163 960.6 737.733 962.45 739.69 964.946 cv
739.916 965.236 740.142 965.577 740.381 966.06 cv
740.644 966.594 741.136 967.635 740.901 968.763 cv
740.805 969.214 740.629 969.527 740.574 969.628 cv
738.732 972.953 737.489 976.59 736.352 980.219 cv
734.101 987.411 734.05 995.031 734.05 995.031 cv
734.031 997.854 734.225 1006.78 738.963 1016.82 cv
743.438 1026.32 749.622 1031.84 754.388 1036.01 cv
762.279 1042.91 769.642 1046.35 774.03 1048.36 cv
776.346 1049.42 787.364 1054.35 803.038 1056.19 cv
808.724 1056.86 813.536 1056.95 817.007 1056.88 cv
817.03 1056.34 817.058 1055.81 817.081 1055.27 cv
822.357 1055.19 828.532 1054.75 835.347 1053.58 cv
842.212 1052.41 848.221 1050.75 853.249 1049.05 cv
853.879 1049.4 854.51 1049.75 855.146 1050.09 cv
865.091 1046.78 872.518 1042.33 877.362 1038.92 cv
882.026 1035.65 889.485 1030.31 896.125 1020.74 cv
898.629 1017.12 902.663 1011.2 904.873 1002.67 cv
906.618 995.938 906.88 988.935 907 985.744 cv
907.083 983.571 907.083 981.748 907.06 980.449 cv
907.668 979.639 908.635 978.405 909.938 976.996 cv
910.983 975.868 911.595 975.324 914.86 972.285 cv
915.716 974.763 916.425 977.433 916.923 980.297 cv
919.575 995.538 914.759 1007.62 912.47 1013.14 cv
cp
.917647 .835294 .247059 rgb
f
744.718 1016.52 mo
745.156 1020.26 746.04 1023.32 746.809 1025.47 cv
744.207 1022.28 741.592 1018.33 739.497 1013.29 cv
738.894 1011.84 738.387 1010.43 737.959 1009.06 cv
737.959 1009.05 737.959 1009.04 737.955 1009.03 cv
737.328 1004.08 737.158 996.5 737.789 990.579 cv
738.424 984.648 739.17 982.378 741.734 980.739 cv
743.742 979.459 747.209 979.643 750.625 989.045 cv
747.518 994.677 746.251 999.433 745.943 1000.63 cv
743.875 1008.72 744.557 1015.14 744.718 1016.52 cv
cp
.721569 .513726 .0941176 rgb
f
768.095 961.889 mo
763.136 967.156 760.581 971.765 759.913 973.004 cv
758.366 975.872 757.348 978.423 756.689 980.297 cv
754.88 982.411 752.679 985.316 750.625 989.045 cv
747.209 979.643 743.742 979.459 741.734 980.739 cv
739.17 982.378 738.424 984.648 737.789 990.579 cv
737.158 996.5 737.328 1004.08 737.955 1009.03 cv
737.153 1006.48 736.624 1004.08 736.283 1001.95 cv
736.283 1001.93 736.278 1001.92 736.278 1001.9 cv
735.919 997.923 735.905 992.72 737.121 986.817 cv
738.852 978.377 742.301 972.364 744.101 969.55 cv
745.681 967.087 747.417 965.084 750.893 961.069 cv
750.893 961.069 753.899 957.602 761.022 952.362 cv
761.828 951.773 763.486 950.585 764.821 951.133 cv
765.47 951.4 765.82 951.984 766.05 952.44 cv
767.524 955.323 767.97 960.254 768.095 961.889 cv
cp
.878431 .760784 .176471 rgb
f
904.297 995.183 mo
903.772 999.129 902.81 1002.5 901.742 1005.34 cv
901.839 1004.35 901.958 1002.68 901.88 1000.63 cv
901.47 990.095 896.268 982.457 894.435 979.836 cv
893.528 978.538 892.096 976.641 890.061 974.542 cv
890.512 973.409 891.336 970.872 890.756 967.746 cv
890.406 965.862 889.669 964.43 889.103 963.528 cv
889.444 962.565 889.84 961.092 889.854 959.269 cv
889.858 957.745 889.596 956.479 889.333 955.585 cv
887.487 953.573 884.807 950.889 881.275 948.103 cv
874.116 942.454 867.646 939.677 863.318 937.858 cv
857.945 935.598 850.127 932.918 840.236 931.527 cv
839.09 934.893 837.939 938.259 836.792 941.625 cv
826.193 939.778 817.615 940.593 813.384 941.035 cv
801.61 942.265 793.262 945.612 791.223 946.455 cv
786.973 948.209 778.966 951.603 770.963 959.039 cv
769.927 960.001 768.974 960.954 768.095 961.889 cv
767.97 960.254 767.524 955.323 766.05 952.44 cv
765.82 951.984 765.47 951.4 764.821 951.133 cv
763.486 950.585 761.828 951.773 761.022 952.362 cv
753.899 957.602 750.893 961.069 750.893 961.069 cv
747.417 965.084 745.681 967.087 744.101 969.55 cv
742.301 972.364 738.852 978.377 737.121 986.817 cv
735.905 992.72 735.919 997.923 736.278 1001.9 cv
735.717 998.392 735.652 995.598 735.662 993.954 cv
735.675 991.803 735.864 984.073 739.575 975.002 cv
745.653 960.153 756.92 952.1 763.748 947.219 cv
772.593 940.897 780.485 937.844 785.311 936.017 cv
789.413 934.46 798.742 931.219 811.252 929.801 cv
829.296 927.756 843.432 930.703 849.39 932.181 cv
854.022 933.328 861.283 935.174 869.958 939.7 cv
875.29 942.481 883.615 946.924 891.368 955.894 cv
894.79 959.849 900.107 966.139 902.916 976.075 cv
903.984 979.855 905.421 986.738 904.297 995.183 cv
cp
.917647 .835294 .247059 rgb
f
901.742 1005.34 mo
900.642 1008.27 899.421 1010.65 898.427 1012.56 cv
898.238 1012.92 898.054 1013.28 897.86 1013.62 cv
898.335 1009.8 898.519 1004.6 897.354 998.636 cv
896.244 992.964 894.347 988.815 893.44 986.973 cv
892.989 986.066 890.843 981.793 886.764 976.996 cv
884.738 974.615 882.813 972.783 881.313 971.47 cv
879.217 967.501 875.506 961.622 869.267 956.124 cv
862.057 949.77 855.077 947.09 850.081 945.225 cv
845.435 943.489 840.955 942.352 836.792 941.625 cv
837.939 938.259 839.09 934.893 840.236 931.527 cv
850.127 932.918 857.945 935.598 863.318 937.858 cv
867.646 939.677 874.116 942.454 881.275 948.103 cv
884.807 950.889 887.487 953.573 889.333 955.585 cv
889.596 956.479 889.858 957.745 889.854 959.269 cv
889.84 961.092 889.444 962.565 889.103 963.528 cv
889.669 964.43 890.406 965.862 890.756 967.746 cv
891.336 970.872 890.512 973.409 890.061 974.542 cv
892.096 976.641 893.528 978.538 894.435 979.836 cv
896.268 982.457 901.47 990.095 901.88 1000.63 cv
901.958 1002.68 901.839 1004.35 901.742 1005.34 cv
cp
.721569 .513726 .0941176 rgb
f
914.86 972.285 mo
911.595 975.324 910.983 975.868 909.938 976.996 cv
908.635 978.405 907.668 979.639 907.06 980.449 cv
907.083 981.748 907.083 983.571 907 985.744 cv
906.88 988.935 906.618 995.938 904.873 1002.67 cv
902.663 1011.2 898.629 1017.12 896.125 1020.74 cv
889.485 1030.31 882.026 1035.65 877.362 1038.92 cv
872.518 1042.33 865.091 1046.78 855.146 1050.09 cv
854.51 1049.75 853.879 1049.4 853.249 1049.05 cv
855.247 1048.39 858.198 1047.34 861.647 1045.78 cv
876.938 1038.85 885.977 1029.29 888.067 1027.01 cv
890.447 1024.42 894.311 1020.16 897.86 1013.63 cv
898.054 1013.28 898.238 1012.92 898.427 1012.56 cv
899.421 1010.65 900.642 1008.27 901.742 1005.34 cv
902.81 1002.5 903.772 999.129 904.297 995.183 cv
905.421 986.738 903.984 979.855 902.916 976.075 cv
900.107 966.139 894.79 959.849 891.368 955.894 cv
883.615 946.924 875.29 942.481 869.958 939.7 cv
861.283 935.174 854.022 933.328 849.39 932.181 cv
843.432 930.703 829.296 927.756 811.252 929.801 cv
798.742 931.219 789.413 934.46 785.311 936.017 cv
780.485 937.844 772.593 940.897 763.748 947.219 cv
756.92 952.1 745.653 960.153 739.575 975.002 cv
735.864 984.073 735.675 991.803 735.662 993.954 cv
735.652 995.598 735.717 998.392 736.278 1001.9 cv
736.278 1001.92 736.283 1001.93 736.283 1001.95 cv
736.624 1004.08 737.153 1006.48 737.955 1009.03 cv
737.959 1009.04 737.959 1009.05 737.959 1009.06 cv
738.387 1010.43 738.894 1011.84 739.497 1013.29 cv
741.592 1018.33 744.207 1022.28 746.809 1025.47 cv
748.954 1028.1 751.095 1030.22 752.928 1032.02 cv
761.897 1040.81 770.913 1044.93 776.028 1047.21 cv
788.488 1052.77 799.253 1054.03 805.036 1054.66 cv
809.939 1055.19 814.088 1055.29 817.081 1055.27 cv
817.058 1055.81 817.03 1056.34 817.007 1056.88 cv
813.536 1056.95 808.724 1056.86 803.038 1056.19 cv
787.364 1054.35 776.346 1049.42 774.03 1048.36 cv
769.642 1046.35 762.279 1042.91 754.388 1036.01 cv
749.622 1031.84 743.438 1026.32 738.963 1016.82 cv
734.225 1006.78 734.031 997.854 734.05 995.031 cv
734.05 995.031 734.101 987.411 736.352 980.219 cv
737.489 976.59 738.732 972.953 740.574 969.628 cv
740.629 969.527 740.805 969.214 740.901 968.763 cv
741.136 967.635 740.644 966.594 740.381 966.06 cv
740.142 965.577 739.916 965.236 739.69 964.946 cv
737.733 962.45 736.163 960.6 735.334 959.646 cv
736.822 957.717 738.24 956.069 739.46 954.665 cv
748.222 944.558 757.224 939.322 763.633 935.671 cv
767.284 933.59 782.672 925.095 805.073 921.743 cv
814.894 920.274 831.212 919.021 850.426 923.239 cv
857.535 924.8 869.129 927.443 882.196 935.211 cv
887.551 938.393 894.96 942.882 902.188 951.289 cv
905.563 955.217 911.388 962.142 914.86 972.285 cv
cp
.952941 .929412 .87451 rgb
f
761.6 1065.55 mo
761.731 1065.17 773.378 1070.31 791.298 1073.38 cv
810.118 1076.61 823.375 1075.42 823.375 1075.84 cv
823.375 1076.27 808.731 1078.35 790.837 1075.22 cv
773.941 1072.27 761.462 1065.95 761.6 1065.55 cv
cp
.960784 .87451 .854902 rgb
f
751.624 1010.15 mo
751.848 1008.89 752.113 1007.58 752.429 1006.23 cv
752.852 1004.42 753.32 1002.72 753.811 1001.13 cv
753.926 1003.55 754.09 1006.04 754.309 1008.61 cv
754.517 1011.04 754.762 1013.4 755.038 1015.67 cv
753.9 1013.83 752.762 1011.99 751.624 1010.15 cv
cp
.721569 .513726 .0941176 rgb
f
887.146 991.883 mo
887.837 993.047 888.552 994.404 889.218 995.95 cv
889.821 997.349 890.282 998.668 890.638 999.864 cv
890.368 1000.82 890.019 1001.86 889.563 1002.97 cv
889.037 1004.25 888.467 1005.38 887.914 1006.35 cv
887.888 1004.1 887.817 1001.76 887.693 999.356 cv
887.56 996.771 887.373 994.278 887.146 991.883 cv
cp
.721569 .517647 .0980392 rgb
f
854.865 984.979 mo
853.916 985.486 852.88 986.112 851.807 986.895 cv
850.315 987.977 849.118 989.082 848.184 990.063 cv
848.239 991.389 848.174 993.364 847.543 995.644 cv
846.637 998.94 845.034 1001.09 844.611 1001.63 cv
843.901 1002.55 843.211 1003.24 842.396 1003.92 cv
842.396 1002.66 842.216 1001.16 841.618 999.612 cv
839.196 993.351 831.884 991.292 828.325 990.293 cv
827.786 990.141 827.022 989.925 826.087 989.708 cv
828.62 977.949 831.498 965.015 834.03 953.26 cv
838.551 954.011 843.437 955.304 848.391 957.427 cv
849.021 959.218 849.892 961.861 850.771 965.103 cv
851.803 968.906 852.318 971.687 853.456 977.608 cv
854.031 980.605 854.501 983.046 854.865 984.979 cv
cp
.72549 .517647 .0980392 rgb
f
880.087 1013.22 mo
879.646 1015.86 879.001 1018 878.476 1019.51 cv
875.152 1022.68 870.29 1026.78 863.815 1030.64 cv
852.457 1037.4 842.391 1039.67 836.958 1040.84 cv
823.767 1043.7 812.923 1043.16 807.26 1042.61 cv
801.979 1042.1 792.793 1041.13 781.857 1036.47 cv
775.448 1033.74 770.457 1030.6 766.971 1028.1 cv
765.396 1025.42 762.859 1020.29 762.367 1013.37 cv
761.727 1004.4 764.885 997.633 766.396 994.838 cv
766.525 991.587 767.123 986.614 769.504 981.14 cv
772.994 973.109 778.363 968.523 781.59 965.83 cv
793.69 955.723 807.26 953.739 813.246 952.938 cv
816.878 952.45 824.678 951.699 834.03 953.26 cv
831.498 965.015 828.62 977.949 826.087 989.708 cv
821.773 988.705 813.803 987.646 807.205 992.42 cv
807.103 990.067 806.91 986.725 806.514 982.696 cv
806.072 978.262 805.795 977.217 804.958 976.766 cv
802.646 975.527 798.051 979.892 796.131 982.139 cv
794.975 983.488 792.784 986.112 791.987 990.27 cv
791.365 993.53 791.881 996.224 792.277 997.683 cv
791.913 996.703 791.628 995.639 791.453 994.492 cv
791.315 993.613 790.785 989.658 792.618 985.214 cv
794.036 981.766 796.177 979.726 797.945 978.045 cv
798.769 977.263 801.288 974.965 805.243 973.082 cv
807.555 971.986 809.705 971.337 811.491 970.945 cv
812.012 965.121 812.532 959.296 813.052 953.477 cv
810.432 953.835 806.947 954.466 802.941 955.641 cv
799.943 956.524 795.776 957.772 790.859 960.475 cv
788.764 961.626 783.174 964.886 777.736 970.78 cv
775.075 973.662 773.436 976.103 772.229 978.57 cv
770.996 981.084 770.397 983.244 770.231 985.32 cv
770.107 986.914 770.268 988.042 770.388 988.852 cv
770.692 990.915 771.198 991.697 771.382 991.96 cv
771.921 992.729 772.547 993.148 772.842 993.341 cv
778.505 997.062 780.609 998.001 780.609 998.001 cv
782.889 999.023 786.098 1000.62 790.048 1003.13 cv
792.318 1005.84 796.679 1010.25 803.521 1012.96 cv
806.519 1014.16 809.295 1014.75 811.579 1015.04 cv
811.266 1014.02 810.953 1013.01 810.648 1011.98 cv
814.774 1013.03 818.085 1013.06 819.498 1013.03 cv
820.778 1013.01 826.598 1012.83 833.123 1009.86 cv
836.433 1008.36 838.754 1006.67 840.126 1005.66 cv
841.01 1005.01 841.742 1004.47 842.396 1003.92 cv
843.211 1003.24 843.901 1002.55 844.611 1001.63 cv
845.034 1001.09 846.637 998.94 847.543 995.644 cv
848.174 993.364 848.239 991.389 848.184 990.063 cv
849.118 989.082 850.315 987.977 851.807 986.895 cv
852.88 986.112 853.916 985.486 854.865 984.979 cv
855.486 988.244 855.827 990.072 855.915 990.73 cv
856.453 994.796 856.927 1000.59 856.527 1007.77 cv
857.908 1007.6 860.049 1007.16 862.361 1005.92 cv
867.205 1003.34 869.263 999.097 869.879 997.771 cv
871.606 994.083 871.588 990.882 871.569 988.046 cv
871.556 985.993 871.427 979.206 867.172 972.852 cv
865.947 971.015 864.672 969.661 863.719 968.652 cv
861.196 965.982 858.967 964.338 856.582 962.607 cv
854.542 961.125 851.803 959.292 848.391 957.427 cv
857.194 961.198 861.928 965.747 863.203 967.018 cv
868.144 971.945 870.529 976.821 871.183 978.225 cv
872.762 981.6 873.577 984.648 874.023 986.895 cv
877.173 991.011 878.66 994.916 879.397 997.407 cv
881.483 1004.48 880.553 1010.44 880.087 1013.22 cv
cp
.913725 .835294 .243137 rgb
f
gsave
880.087 1013.22 mo
879.646 1015.86 879.001 1018 878.476 1019.51 cv
875.152 1022.68 870.29 1026.78 863.815 1030.64 cv
852.457 1037.4 842.391 1039.67 836.958 1040.84 cv
823.767 1043.7 812.923 1043.16 807.26 1042.61 cv
801.979 1042.1 792.793 1041.13 781.857 1036.47 cv
775.448 1033.74 770.457 1030.6 766.971 1028.1 cv
765.396 1025.42 762.859 1020.29 762.367 1013.37 cv
761.727 1004.4 764.885 997.633 766.396 994.838 cv
766.525 991.587 767.123 986.614 769.504 981.14 cv
772.994 973.109 778.363 968.523 781.59 965.83 cv
793.69 955.723 807.26 953.739 813.246 952.938 cv
816.878 952.45 824.678 951.699 834.03 953.26 cv
831.498 965.015 828.62 977.949 826.087 989.708 cv
821.773 988.705 813.803 987.646 807.205 992.42 cv
807.103 990.067 806.91 986.725 806.514 982.696 cv
806.072 978.262 805.795 977.217 804.958 976.766 cv
802.646 975.527 798.051 979.892 796.131 982.139 cv
794.975 983.488 792.784 986.112 791.987 990.27 cv
791.365 993.53 791.881 996.224 792.277 997.683 cv
791.913 996.703 791.628 995.639 791.453 994.492 cv
791.315 993.613 790.785 989.658 792.618 985.214 cv
794.036 981.766 796.177 979.726 797.945 978.045 cv
798.769 977.263 801.288 974.965 805.243 973.082 cv
807.555 971.986 809.705 971.337 811.491 970.945 cv
812.012 965.121 812.532 959.296 813.052 953.477 cv
810.432 953.835 806.947 954.466 802.941 955.641 cv
799.943 956.524 795.776 957.772 790.859 960.475 cv
788.764 961.626 783.174 964.886 777.736 970.78 cv
775.075 973.662 773.436 976.103 772.229 978.57 cv
770.996 981.084 770.397 983.244 770.231 985.32 cv
770.107 986.914 770.268 988.042 770.388 988.852 cv
770.692 990.915 771.198 991.697 771.382 991.96 cv
771.921 992.729 772.547 993.148 772.842 993.341 cv
778.505 997.062 780.609 998.001 780.609 998.001 cv
782.889 999.023 786.098 1000.62 790.048 1003.13 cv
792.318 1005.84 796.679 1010.25 803.521 1012.96 cv
806.519 1014.16 809.295 1014.75 811.579 1015.04 cv
811.266 1014.02 810.953 1013.01 810.648 1011.98 cv
814.774 1013.03 818.085 1013.06 819.498 1013.03 cv
820.778 1013.01 826.598 1012.83 833.123 1009.86 cv
836.433 1008.36 838.754 1006.67 840.126 1005.66 cv
841.01 1005.01 841.742 1004.47 842.396 1003.92 cv
843.211 1003.24 843.901 1002.55 844.611 1001.63 cv
845.034 1001.09 846.637 998.94 847.543 995.644 cv
848.174 993.364 848.239 991.389 848.184 990.063 cv
849.118 989.082 850.315 987.977 851.807 986.895 cv
852.88 986.112 853.916 985.486 854.865 984.979 cv
855.486 988.244 855.827 990.072 855.915 990.73 cv
856.453 994.796 856.927 1000.59 856.527 1007.77 cv
857.908 1007.6 860.049 1007.16 862.361 1005.92 cv
867.205 1003.34 869.263 999.097 869.879 997.771 cv
871.606 994.083 871.588 990.882 871.569 988.046 cv
871.556 985.993 871.427 979.206 867.172 972.852 cv
865.947 971.015 864.672 969.661 863.719 968.652 cv
861.196 965.982 858.967 964.338 856.582 962.607 cv
854.542 961.125 851.803 959.292 848.391 957.427 cv
857.194 961.198 861.928 965.747 863.203 967.018 cv
868.144 971.945 870.529 976.821 871.183 978.225 cv
872.762 981.6 873.577 984.648 874.023 986.895 cv
877.173 991.011 878.66 994.916 879.397 997.407 cv
881.483 1004.48 880.553 1010.44 880.087 1013.22 cv
cp
clp
769.873 1030.08 mo
768.05 1027.25 767.064 1024.65 766.511 1022.81 cv
764.709 1016.81 765.369 1011.79 765.705 1009.86 cv
766.174 1007.16 766.961 1005.01 767.604 1003.53 cv
767.202 1000.63 766.799 997.734 766.396 994.838 cv
765.897 994.55 765.398 994.262 764.899 993.974 cv
763.504 996.177 761.612 999.731 760.583 1004.45 cv
760.025 1007 758.71 1013.43 761.331 1020.91 cv
763.059 1025.84 765.821 1029.3 767.834 1031.38 cv
768.514 1030.95 769.193 1030.52 769.873 1030.08 cv
cp
.717647 .513726 .0901961 rgb
f
874.023 986.895 mo
874.141 988.428 874.205 990.624 873.908 993.226 cv
872.815 1002.81 867.809 1009.35 865.736 1011.99 cv
864.067 1014.11 860.828 1018.16 855.433 1021.43 cv
852.185 1023.39 841.467 1029.13 840.739 1029.52 cv
840.491 1029.65 839.833 1030.01 839.03 1030.58 cv
838.583 1030.9 838.171 1031.23 837.994 1031.38 cv
836.914 1032.36 836.79 1034.13 836.728 1035.18 cv
836.594 1037.45 836.465 1039.88 836.383 1042.55 cv
838.354 1042.2 841.193 1041.63 844.555 1040.71 cv
847.574 1039.88 855.398 1037.59 864.757 1032.48 cv
871.899 1028.58 874.741 1025.94 876.096 1024.59 cv
877.918 1022.78 879.248 1021.09 880.125 1019.87 cv
881.159 1017.21 882.28 1013.34 882.427 1008.59 cv
882.486 1006.69 882.484 1001.49 880.182 995.355 cv
878.611 991.168 876.539 988.057 874.983 986.051 cv
874.663 986.333 874.343 986.614 874.023 986.895 cv
cp
.878431 .760784 .176471 rgb
f
861.477 1035.53 mo
861.436 1031.95 861.434 1028.3 861.477 1024.59 cv
861.501 1022.46 861.54 1020.35 861.592 1018.26 cv
862.307 1017.47 863.419 1016.19 864.694 1014.56 cv
868.019 1010.28 870.521 1007 871.526 1002.35 cv
871.759 1001.27 872.027 999.585 871.952 997.428 cv
872.262 995.573 872.524 993.553 872.7 991.384 cv
872.884 989.101 872.947 986.962 872.93 984.996 cv
873.832 984.555 874.733 984.113 875.635 983.672 cv
876.595 984.978 878.037 987.095 879.434 989.888 cv
880.75 992.521 885.428 1002.2 883.52 1014 cv
883.096 1016.63 882.612 1019.44 880.7 1022.52 cv
878.677 1025.78 876.167 1027.54 872.988 1029.72 cv
870.468 1031.44 866.636 1033.72 861.477 1035.53 cv
cp
.721569 .517647 .0980392 rgb
f
792.123 1026.9 mo
792.214 1026.63 797.744 1028.92 806.339 1030.35 cv
816.677 1032.07 823.684 1031.25 823.692 1031.56 cv
823.7 1031.89 815.451 1033.44 805.648 1031.62 cv
797.936 1030.18 792.028 1027.18 792.123 1026.9 cv
cp
.945098 .913725 .819608 rgb
f
grestore
807.205 992.42 mo
806.473 992.95 804.502 994.373 802.807 996.633 cv
801.725 994.368 800.261 991.716 798.281 988.912 cv
796.297 986.099 795.67 985.804 795.178 985.868 cv
793.405 986.099 792.466 990.993 792.411 994.262 cv
792.374 996.449 792.724 998.245 793.032 999.438 cv
792.756 998.885 792.498 998.3 792.277 997.683 cv
791.881 996.224 791.365 993.53 791.987 990.27 cv
792.784 986.112 794.975 983.488 796.131 982.139 cv
798.051 979.892 802.646 975.527 804.958 976.766 cv
805.795 977.217 806.072 978.262 806.514 982.696 cv
806.91 986.725 807.103 990.067 807.205 992.42 cv
cp
.878431 .760784 .176471 rgb
f
800.349 1007.54 mo
799.824 1007.18 799.285 1006.77 798.742 1006.31 cv
797.499 1005.26 794.828 1003.02 793.037 999.447 cv
792.724 998.245 792.374 996.449 792.411 994.262 cv
792.466 990.993 793.405 986.099 795.178 985.868 cv
795.67 985.804 796.297 986.099 798.281 988.912 cv
800.261 991.716 801.725 994.368 802.807 996.633 cv
801.486 998.397 800.335 1000.67 800.068 1003.42 cv
799.907 1005.03 800.095 1006.45 800.349 1007.54 cv
cp
.721569 .517647 .0941176 rgb
f
810.648 1011.98 mo
810.953 1013.01 811.266 1014.02 811.579 1015.04 cv
809.295 1014.75 806.519 1014.16 803.521 1012.96 cv
796.679 1010.25 792.318 1005.84 790.048 1003.13 cv
786.098 1000.62 782.889 999.023 780.609 998.001 cv
780.609 998.001 778.505 997.062 772.842 993.341 cv
772.547 993.148 771.921 992.729 771.382 991.96 cv
771.198 991.697 770.692 990.915 770.388 988.852 cv
770.268 988.042 770.107 986.914 770.231 985.32 cv
770.397 983.244 770.996 981.084 772.229 978.57 cv
773.436 976.103 775.075 973.662 777.736 970.78 cv
783.174 964.886 788.764 961.626 790.859 960.475 cv
795.776 957.772 799.943 956.524 802.941 955.641 cv
806.947 954.466 810.432 953.835 813.052 953.477 cv
812.532 959.296 812.012 965.121 811.491 970.945 cv
809.705 971.337 807.555 971.986 805.243 973.082 cv
801.288 974.965 798.769 977.263 797.945 978.045 cv
796.177 979.726 794.036 981.766 792.618 985.214 cv
790.785 989.658 791.315 993.613 791.453 994.492 cv
791.628 995.639 791.913 996.703 792.277 997.683 cv
792.498 998.3 792.756 998.885 793.032 999.438 cv
794.828 1003.02 797.499 1005.26 798.742 1006.31 cv
799.285 1006.77 799.824 1007.18 800.349 1007.54 cv
802.338 1008.92 804.193 1009.7 805.823 1010.38 cv
807.508 1011.08 809.134 1011.6 810.648 1011.98 cv
810.648 1011.98 li
cp
.952941 .933333 .878431 rgb
f
869.879 997.771 mo
869.263 999.097 867.205 1003.34 862.361 1005.92 cv
860.049 1007.16 857.908 1007.6 856.527 1007.77 cv
856.927 1000.59 856.453 994.796 855.915 990.73 cv
855.827 990.072 855.486 988.244 854.865 984.979 cv
854.501 983.046 854.031 980.605 853.456 977.608 cv
852.318 971.687 851.803 968.906 850.771 965.103 cv
849.892 961.861 849.021 959.218 848.391 957.427 cv
851.803 959.292 854.542 961.125 856.582 962.607 cv
858.967 964.338 861.196 965.982 863.719 968.652 cv
864.672 969.661 865.947 971.015 867.172 972.852 cv
871.427 979.206 871.556 985.993 871.569 988.046 cv
871.588 990.882 871.606 994.083 869.879 997.771 cv
cp
.952941 .933333 .87451 rgb
f
928.01 1241.17 mo
929.56 1236.07 930.667 1231.29 931.463 1226.96 cv
930.096 1229.86 928.221 1233.25 925.65 1236.8 cv
923.457 1239.83 921.228 1242.33 919.204 1244.34 cv
918.146 1243.33 917.034 1242.31 915.866 1241.29 cv
914.244 1239.86 912.646 1238.54 911.089 1237.32 cv
910.102 1240.66 908.977 1244.14 907.693 1247.73 cv
906.174 1251.99 904.583 1255.98 902.974 1259.71 cv
900.085 1262.05 896.904 1264.45 893.419 1266.84 cv
889.685 1269.41 886.057 1271.64 882.601 1273.61 cv
897.657 1270.59 913.839 1267.33 926.237 1264.81 cv
925.389 1260.94 924.542 1257.07 923.693 1253.2 cv
925.192 1249.6 926.67 1245.58 928.01 1241.17 cv
cp
0 0 0 rgb
f
735.431 1201.4 mo
734.5 1198.03 733.561 1194.69 732.618 1191.35 cv
733.122 1195.35 733.606 1199.19 734.072 1202.88 cv
735.504 1205.98 736.935 1209.07 738.367 1212.17 cv
737.405 1208.59 736.426 1205 735.431 1201.4 cv
cp
f
759.54 1262.21 mo
761.641 1264.29 763.772 1266.4 765.896 1268.51 cv
764.822 1265.78 763.748 1263.05 762.674 1260.32 cv
761.629 1260.95 760.585 1261.58 759.54 1262.21 cv
cp
f
928.816 1093.49 mo
928.442 1097.59 928.059 1101.68 927.665 1105.75 cv
926.583 1108.98 925.229 1112.49 923.521 1116.16 cv
920.896 1121.82 918.018 1126.63 915.291 1130.61 cv
917.433 1129.89 919.969 1128.84 922.658 1127.27 cv
924.411 1126.25 925.923 1125.18 927.204 1124.16 cv
927.319 1130.21 927.435 1136.25 927.55 1142.29 cv
929.08 1136.79 930.512 1130.85 931.751 1124.51 cv
933.012 1118.05 933.929 1111.9 934.59 1106.09 cv
934.383 1098.11 934.187 1090.55 934.015 1083.78 cv
932.646 1082.87 931.278 1081.96 929.91 1081.05 cv
929.559 1085.18 929.195 1089.32 928.816 1093.49 cv
cp
f
930.313 1015.38 mo
929.977 1020.75 929.503 1025.88 928.931 1030.75 cv
927.944 1033.79 926.565 1037.3 924.614 1041.05 cv
922.394 1045.32 919.991 1048.83 917.823 1051.59 cv
920.528 1052.51 923.233 1053.43 925.938 1054.35 cv
925.488 1057.91 925.064 1061.54 924.672 1065.23 cv
924.16 1070.04 923.721 1074.76 923.348 1079.39 cv
925.573 1074.13 927.702 1068.01 929.334 1061.08 cv
930.001 1058.25 930.53 1055.52 930.945 1052.91 cv
931.339 1052.17 931.742 1051.42 932.154 1050.67 cv
932.489 1050.05 932.825 1049.45 933.162 1048.85 cv
932.861 1036.41 932.511 1022.34 932.178 1010.67 cv
931.729 1007.87 931.28 1005.07 930.83 1002.26 cv
930.761 1006.47 930.596 1010.85 930.313 1015.38 cv
cp
f
737.12 1174.37 mo
737.017 1169.25 736.915 1164.14 736.813 1159.02 cv
738.408 1160.18 740.248 1161.39 742.338 1162.55 cv
745.271 1164.18 748.041 1165.37 750.472 1166.24 cv
747.43 1162.94 744.105 1158.86 740.88 1153.96 cv
738.287 1150.01 736.227 1146.25 734.587 1142.83 cv
733.848 1139.75 733.13 1136.61 732.438 1133.39 cv
731.567 1129.34 730.776 1125.38 730.06 1121.5 cv
728.448 1121.29 726.836 1121.09 725.225 1120.88 cv
724.298 1117.73 723.371 1114.57 722.444 1111.42 cv
723.658 1120.8 724.872 1130.17 726.024 1139.12 cv
727.267 1143.27 728.51 1147.43 729.752 1151.58 cv
732.208 1159.18 734.664 1166.77 737.12 1174.37 cv
cp
f
938.573 1251.23 mo
938.266 1253.62 937.781 1256.19 937.027 1258.9 cv
936.638 1260.3 936.209 1261.62 935.759 1262.86 cv
936.833 1262.64 937.847 1262.43 938.792 1262.24 cv
938.759 1259.33 938.682 1255.61 938.573 1251.23 cv
cp
f
748.093 1091.42 mo
748.58 1088.86 749.091 1086.28 749.628 1083.66 cv
750.178 1080.99 750.741 1078.36 751.316 1075.76 cv
748.541 1075.31 745.212 1074.54 741.57 1073.23 cv
738.169 1072 735.296 1070.57 732.976 1069.24 cv
730.626 1065.75 728.191 1061.76 725.839 1057.27 cv
723.25 1052.32 721.222 1047.63 719.623 1043.38 cv
719.989 1047.17 720.51 1051.19 721.234 1055.42 cv
721.807 1058.76 722.456 1061.94 723.153 1064.94 cv
722.274 1064.58 721.284 1064.11 720.237 1063.48 cv
719.076 1062.79 718.107 1062.07 717.32 1061.41 cv
718.339 1065.21 719.836 1069.66 722.079 1074.46 cv
724.062 1078.7 726.207 1082.3 728.218 1085.28 cv
729.166 1088.58 730.137 1091.91 731.134 1095.25 cv
732.648 1100.34 734.184 1105.35 735.738 1110.29 cv
736.766 1109.01 737.839 1107.7 738.961 1106.38 cv
740.303 1104.8 741.635 1103.29 742.952 1101.85 cv
745.992 1104.05 749.544 1106.37 753.619 1108.6 cv
758.075 1111.05 762.286 1112.92 766.05 1114.36 cv
762.498 1110.47 758.826 1106.13 755.153 1101.31 cv
752.574 1097.93 750.227 1094.62 748.093 1091.42 cv
cp
f
866.023 1097.23 mo
864.28 1094.95 862.504 1092.49 860.729 1089.86 cv
858.818 1087.03 857.098 1084.28 855.548 1081.63 cv
853.59 1084.74 851.339 1088.03 848.757 1091.42 cv
845.732 1095.38 842.713 1098.88 839.836 1101.95 cv
835.666 1102.55 831.145 1103.04 826.311 1103.33 cv
820.601 1103.67 815.282 1103.69 810.425 1103.5 cv
813.459 1106.16 816.869 1108.92 820.67 1111.67 cv
823.951 1114.05 827.137 1116.16 830.167 1118 cv
829.082 1120.96 827.95 1123.95 826.771 1126.98 cv
825.497 1130.26 824.21 1133.46 822.915 1136.6 cv
827.719 1135.38 833.035 1133.75 838.685 1131.53 cv
842.808 1129.91 846.57 1128.19 849.965 1126.47 cv
853.822 1127.49 858.093 1128.43 862.743 1129.17 cv
866.573 1129.78 870.194 1130.19 873.563 1130.44 cv
873.262 1127.71 872.937 1124.94 872.584 1122.15 cv
872.167 1118.83 871.725 1115.57 871.261 1112.37 cv
874.732 1108.89 878.3 1105.11 881.909 1101.03 cv
885.234 1097.26 888.298 1093.56 891.117 1089.98 cv
887.236 1091.68 882.674 1093.39 877.477 1094.81 cv
873.356 1095.94 869.505 1096.71 866.023 1097.23 cv
cp
f
869.477 1160.31 mo
865.616 1161.99 861.312 1163.67 856.584 1165.2 cv
851.317 1166.91 846.365 1168.17 841.85 1169.11 cv
838.608 1167.35 835.239 1165.4 831.778 1163.24 cv
828.16 1160.99 824.784 1158.73 821.648 1156.51 cv
820.955 1159.28 820.208 1162.1 819.404 1164.97 cv
818.478 1168.28 817.522 1171.49 816.545 1174.6 cv
812.967 1175.15 809.229 1175.65 805.341 1176.06 cv
800.479 1176.58 795.815 1176.92 791.375 1177.13 cv
794.994 1179.57 799.175 1182.1 803.921 1184.54 cv
808.264 1186.77 812.392 1188.56 816.181 1190.01 cv
816.716 1192.56 817.272 1195.13 817.85 1197.72 cv
818.601 1201.09 819.369 1204.41 820.152 1207.68 cv
823.701 1205.92 827.493 1203.84 831.433 1201.4 cv
834.75 1199.35 837.779 1197.27 840.526 1195.24 cv
844.878 1195.36 849.702 1195.27 854.916 1194.84 cv
859.791 1194.44 864.278 1193.81 868.326 1193.06 cv
864.393 1188.74 860.46 1184.42 856.527 1180.11 cv
858.648 1177.07 860.781 1173.92 862.916 1170.67 cv
865.216 1167.16 867.402 1163.7 869.477 1160.31 cv
cp
f
823.375 1243.82 mo
823.247 1238.07 823.119 1232.31 822.992 1226.55 cv
819.567 1228.04 815.724 1229.51 811.48 1230.85 cv
807.672 1232.05 804.068 1232.98 800.737 1233.69 cv
796.891 1232.04 792.635 1229.95 788.151 1227.32 cv
783.614 1224.66 779.68 1221.92 776.333 1219.34 cv
779.313 1225.93 782.294 1232.51 785.274 1239.1 cv
780.804 1241.17 776.333 1243.25 771.863 1245.32 cv
775.471 1247.44 779.735 1249.64 784.641 1251.65 cv
788.754 1253.33 792.626 1254.6 796.132 1255.56 cv
798.61 1258.26 801.142 1260.97 803.729 1263.7 cv
806.636 1266.76 809.528 1269.75 812.401 1272.67 cv
814.934 1267.84 817.466 1263.01 819.999 1258.17 cv
824.157 1257.73 828.713 1257.05 833.582 1256.02 cv
838.289 1255.03 842.597 1253.87 846.474 1252.65 cv
842.688 1251.56 838.622 1250.22 834.349 1248.58 cv
830.371 1247.04 826.709 1245.43 823.375 1243.82 cv
cp
f
931.981 1163.88 mo
932.731 1158.56 933.157 1153.57 933.363 1148.97 cv
932.668 1152.23 931.584 1156.1 929.852 1160.31 cv
928.196 1164.33 926.337 1167.71 924.614 1170.44 cv
921.539 1169.65 918.462 1168.86 915.386 1168.08 cv
914.839 1171.25 914.302 1174.45 913.775 1177.67 cv
913.108 1181.74 912.469 1185.79 911.856 1189.8 cv
909.236 1193.14 906.28 1196.65 902.955 1200.23 cv
899.331 1204.14 895.763 1207.61 892.364 1210.67 cv
895.368 1210.47 898.838 1210.04 902.628 1209.17 cv
905.471 1208.52 908.03 1207.74 910.283 1206.93 cv
910.667 1212.7 911.051 1218.48 911.434 1224.25 cv
913.994 1219.72 916.564 1214.73 919.032 1209.29 cv
920.713 1205.58 922.201 1201.98 923.521 1198.52 cv
925.242 1196.78 927.213 1194.49 929.104 1191.62 cv
931.12 1188.55 932.486 1185.66 933.42 1183.27 cv
932.269 1180.57 931.118 1177.86 929.967 1175.16 cv
930.728 1171.64 931.417 1167.88 931.981 1163.88 cv
cp
f
797.936 707.293 mo
797.292 706.488 796.303 705.305 795 703.955 cv
792.198 701.05 790.755 699.593 788.727 699.351 cv
788.581 699.333 786.193 699.082 784.411 700.559 cv
782.068 702.5 781.582 706.755 783.72 710.747 cv
780.403 710.647 776.125 712.536 775.202 715.753 cv
774.351 718.717 776.489 722.358 779.058 724.042 cv
777.188 724.219 773.973 724.94 772.458 726.286 cv
772.161 726.55 770.503 728.024 770.386 730.277 cv
770.242 733.07 772.939 735.838 775.144 737.145 cv
765.206 738.104 765.59 746.968 772.381 750.229 cv
763.403 750.459 762.329 760.052 771 763.006 cv
762.866 763.773 762.252 773.75 770.271 775.4 cv
764.017 776.206 762.559 785.107 770.77 787.333 cv
764.4 790.939 766.665 797.846 772.918 799.304 cv
767.95 803.698 770.77 809.568 776.871 810.374 cv
772.113 814.652 776.047 820.223 781.437 820.945 cv
777.37 824.897 780.785 830.499 786.847 830.998 cv
782.856 835.219 786.993 839.793 792.411 840.514 cv
788.804 844.504 792.535 848.861 797.706 849.492 cv
794.329 853.368 797.866 857.254 802.771 858.241 cv
799.835 861.425 802.425 865.598 807.26 866.778 cv
805.389 868.821 804.9 872.677 810.684 875.296 cv
808.123 878.49 809.447 881.656 813.13 884.016 cv
811.49 886.605 811.375 890.116 815.26 892.735 cv
812.843 896.073 812.872 899.124 816.728 901.857 cv
813.792 904.448 812.44 908.477 817.792 912.103 cv
813.476 913.627 813.217 919.095 818.051 921.858 cv
812.756 923.441 813.044 929.887 817.792 931.901 cv
813.159 933.484 811.605 939.412 816.929 942.52 cv
812.094 943.758 809.965 950.232 816.209 953.34 cv
810.339 955.039 809.965 961.254 814.857 963.815 cv
809.677 965.082 808.728 971.959 813.85 974.348 cv
808.68 975.653 807.106 981.753 812.325 984.861 cv
806.109 986.818 806.723 992.881 810.981 995.375 cv
809.255 995.759 807.97 996.737 807.452 997.313 cv
808.891 998.636 820.075 1004.51 832.354 996.219 cv
827.212 1001 823.164 1003.61 820.382 1004.66 cv
824.729 1004.77 827.744 1003.68 831.932 1000.9 cv
826.176 1009.42 813.207 1013.29 806.953 1008.73 cv
806.483 1008.85 805.792 1009.65 805.821 1010.38 cv
807.404 1011.13 811.864 1014 822.282 1012.79 cv
832.699 1011.59 839.145 1006.52 840.124 1005.66 cv
840.472 1004.52 840.821 1002.96 840.872 1001.09 cv
840.914 999.543 840.739 998.211 840.526 997.178 cv
841.045 996.105 841.681 994.483 841.965 992.42 cv
842.256 990.31 842.069 988.541 841.85 987.355 cv
842.122 986.865 842.478 986.143 842.771 985.226 cv
843.017 984.457 843.224 983.534 843.347 981.6 cv
843.425 980.363 843.47 978.699 843.347 976.708 cv
843.699 976.162 844.154 975.347 844.498 974.291 cv
844.695 973.685 844.923 972.792 845.016 970.895 cv
845.077 969.646 845.081 967.938 844.843 965.888 cv
845.103 965.397 845.44 964.673 845.707 963.758 cv
846.042 962.605 846.12 961.651 846.167 959.902 cv
846.203 958.584 846.218 956.931 846.167 955.01 cv
846.466 954.682 846.877 954.166 847.203 953.456 cv
847.81 952.134 847.752 950.948 847.664 949.484 cv
847.533 947.326 847.431 945.656 847.318 943.901 cv
847.579 943.291 847.92 942.386 848.181 941.254 cv
848.593 939.473 848.593 938.056 848.584 936.649 cv
848.579 935.671 848.52 934.352 848.296 932.793 cv
848.714 931.322 849.12 929.292 849.102 926.865 cv
849.089 925.109 848.858 923.589 848.584 922.376 cv
848.911 920.7 849.193 918.873 849.39 916.908 cv
849.675 914.063 849.593 911.447 849.659 909.119 cv
849.735 906.395 849.889 901.292 849.16 901.177 cv
849.333 895.21 848.757 890.433 847.778 888.821 cv
848.226 882.085 847.371 879.174 845.016 875.872 cv
845.504 871.446 844.264 868.896 841.563 865.167 cv
841.884 862.58 840.546 859.136 837.016 853.713 cv
836.682 852.309 836.057 850.25 834.81 847.996 cv
833.648 845.896 833.012 845.553 831.356 842.931 cv
829.57 840.103 830.05 840.091 828.056 836.715 cv
825.703 832.729 825.116 832.884 824.066 830.346 cv
823.753 829.588 823.272 828.287 822.224 826.662 cv
821.457 825.473 821.35 825.606 820.689 824.59 cv
819.262 822.395 819.502 821.377 818.233 819.218 cv
817.384 817.772 817.317 818.3 816.162 816.532 cv
814.738 814.355 814.656 813.277 813.246 811.007 cv
812.533 809.861 811.848 808.999 811.404 808.475 cv
811.082 807.227 810.602 805.759 809.869 804.177 cv
808.988 802.276 807.99 800.743 807.106 799.573 cv
807.108 798.656 807.022 797.527 806.723 796.273 cv
806.15 793.878 805.062 792.12 804.267 791.055 cv
804.409 789.945 804.49 788.188 803.96 786.144 cv
803.577 784.666 802.995 783.504 802.502 782.69 cv
802.469 780.986 802.562 779.635 802.655 778.7 cv
802.766 777.594 802.91 776.755 802.502 775.784 cv
802.21 775.089 801.758 774.614 801.428 774.325 cv
801.775 772.49 802.043 770.327 802.08 767.898 cv
802.103 766.379 802.031 764.972 801.907 763.697 cv
802.231 762.167 802.501 760.368 802.598 758.344 cv
802.67 756.83 802.634 755.44 802.54 754.2 cv
803.124 753.237 803.726 752.046 804.209 750.632 cv
805.357 747.276 805.286 744.281 805.073 742.401 cv
805.741 741.436 806.539 740.069 807.145 738.315 cv
807.895 736.144 808.059 734.224 808.065 732.905 cv
809.031 731.703 810.339 729.817 811.346 727.265 cv
812.907 723.311 812.88 719.949 812.843 717.883 cv
812.843 717.883 812.76 713.288 810.771 708.042 cv
810.027 706.081 809.073 704.246 807.202 703.091 cv
807.007 702.971 806.863 702.882 806.684 702.804 cv
803.79 701.532 799.039 706.18 797.936 707.293 cv
cp
.607843 .392157 .184314 rgb
f
gsave
797.936 707.293 mo
797.292 706.488 796.303 705.305 795 703.955 cv
792.198 701.05 790.755 699.593 788.727 699.351 cv
788.581 699.333 786.193 699.082 784.411 700.559 cv
782.068 702.5 781.582 706.755 783.72 710.747 cv
780.403 710.647 776.125 712.536 775.202 715.753 cv
774.351 718.717 776.489 722.358 779.058 724.042 cv
777.188 724.219 773.973 724.94 772.458 726.286 cv
772.161 726.55 770.503 728.024 770.386 730.277 cv
770.242 733.07 772.939 735.838 775.144 737.145 cv
765.206 738.104 765.59 746.968 772.381 750.229 cv
763.403 750.459 762.329 760.052 771 763.006 cv
762.866 763.773 762.252 773.75 770.271 775.4 cv
764.017 776.206 762.559 785.107 770.77 787.333 cv
764.4 790.939 766.665 797.846 772.918 799.304 cv
767.95 803.698 770.77 809.568 776.871 810.374 cv
772.113 814.652 776.047 820.223 781.437 820.945 cv
777.37 824.897 780.785 830.499 786.847 830.998 cv
782.856 835.219 786.993 839.793 792.411 840.514 cv
788.804 844.504 792.535 848.861 797.706 849.492 cv
794.329 853.368 797.866 857.254 802.771 858.241 cv
799.835 861.425 802.425 865.598 807.26 866.778 cv
805.389 868.821 804.9 872.677 810.684 875.296 cv
808.123 878.49 809.447 881.656 813.13 884.016 cv
811.49 886.605 811.375 890.116 815.26 892.735 cv
812.843 896.073 812.872 899.124 816.728 901.857 cv
813.792 904.448 812.44 908.477 817.792 912.103 cv
813.476 913.627 813.217 919.095 818.051 921.858 cv
812.756 923.441 813.044 929.887 817.792 931.901 cv
813.159 933.484 811.605 939.412 816.929 942.52 cv
812.094 943.758 809.965 950.232 816.209 953.34 cv
810.339 955.039 809.965 961.254 814.857 963.815 cv
809.677 965.082 808.728 971.959 813.85 974.348 cv
808.68 975.653 807.106 981.753 812.325 984.861 cv
806.109 986.818 806.723 992.881 810.981 995.375 cv
809.255 995.759 807.97 996.737 807.452 997.313 cv
808.891 998.636 820.075 1004.51 832.354 996.219 cv
827.212 1001 823.164 1003.61 820.382 1004.66 cv
824.729 1004.77 827.744 1003.68 831.932 1000.9 cv
826.176 1009.42 813.207 1013.29 806.953 1008.73 cv
806.483 1008.85 805.792 1009.65 805.821 1010.38 cv
807.404 1011.13 811.864 1014 822.282 1012.79 cv
832.699 1011.59 839.145 1006.52 840.124 1005.66 cv
840.472 1004.52 840.821 1002.96 840.872 1001.09 cv
840.914 999.543 840.739 998.211 840.526 997.178 cv
841.045 996.105 841.681 994.483 841.965 992.42 cv
842.256 990.31 842.069 988.541 841.85 987.355 cv
842.122 986.865 842.478 986.143 842.771 985.226 cv
843.017 984.457 843.224 983.534 843.347 981.6 cv
843.425 980.363 843.47 978.699 843.347 976.708 cv
843.699 976.162 844.154 975.347 844.498 974.291 cv
844.695 973.685 844.923 972.792 845.016 970.895 cv
845.077 969.646 845.081 967.938 844.843 965.888 cv
845.103 965.397 845.44 964.673 845.707 963.758 cv
846.042 962.605 846.12 961.651 846.167 959.902 cv
846.203 958.584 846.218 956.931 846.167 955.01 cv
846.466 954.682 846.877 954.166 847.203 953.456 cv
847.81 952.134 847.752 950.948 847.664 949.484 cv
847.533 947.326 847.431 945.656 847.318 943.901 cv
847.579 943.291 847.92 942.386 848.181 941.254 cv
848.593 939.473 848.593 938.056 848.584 936.649 cv
848.579 935.671 848.52 934.352 848.296 932.793 cv
848.714 931.322 849.12 929.292 849.102 926.865 cv
849.089 925.109 848.858 923.589 848.584 922.376 cv
848.911 920.7 849.193 918.873 849.39 916.908 cv
849.675 914.063 849.593 911.447 849.659 909.119 cv
849.735 906.395 849.889 901.292 849.16 901.177 cv
849.333 895.21 848.757 890.433 847.778 888.821 cv
848.226 882.085 847.371 879.174 845.016 875.872 cv
845.504 871.446 844.264 868.896 841.563 865.167 cv
841.884 862.58 840.546 859.136 837.016 853.713 cv
836.682 852.309 836.057 850.25 834.81 847.996 cv
833.648 845.896 833.012 845.553 831.356 842.931 cv
829.57 840.103 830.05 840.091 828.056 836.715 cv
825.703 832.729 825.116 832.884 824.066 830.346 cv
823.753 829.588 823.272 828.287 822.224 826.662 cv
821.457 825.473 821.35 825.606 820.689 824.59 cv
819.262 822.395 819.502 821.377 818.233 819.218 cv
817.384 817.772 817.317 818.3 816.162 816.532 cv
814.738 814.355 814.656 813.277 813.246 811.007 cv
812.533 809.861 811.848 808.999 811.404 808.475 cv
811.082 807.227 810.602 805.759 809.869 804.177 cv
808.988 802.276 807.99 800.743 807.106 799.573 cv
807.108 798.656 807.022 797.527 806.723 796.273 cv
806.15 793.878 805.062 792.12 804.267 791.055 cv
804.409 789.945 804.49 788.188 803.96 786.144 cv
803.577 784.666 802.995 783.504 802.502 782.69 cv
802.469 780.986 802.562 779.635 802.655 778.7 cv
802.766 777.594 802.91 776.755 802.502 775.784 cv
802.21 775.089 801.758 774.614 801.428 774.325 cv
801.775 772.49 802.043 770.327 802.08 767.898 cv
802.103 766.379 802.031 764.972 801.907 763.697 cv
802.231 762.167 802.501 760.368 802.598 758.344 cv
802.67 756.83 802.634 755.44 802.54 754.2 cv
803.124 753.237 803.726 752.046 804.209 750.632 cv
805.357 747.276 805.286 744.281 805.073 742.401 cv
805.741 741.436 806.539 740.069 807.145 738.315 cv
807.895 736.144 808.059 734.224 808.065 732.905 cv
809.031 731.703 810.339 729.817 811.346 727.265 cv
812.907 723.311 812.88 719.949 812.843 717.883 cv
812.843 717.883 812.76 713.288 810.771 708.042 cv
810.027 706.081 809.073 704.246 807.202 703.091 cv
807.007 702.971 806.863 702.882 806.684 702.804 cv
803.79 701.532 799.039 706.18 797.936 707.293 cv
cp
clp
803.27 709.672 mo
804.298 709.86 806.205 710.374 807.912 711.936 cv
810.99 714.752 810.933 718.704 810.905 719.457 cv
810.886 719.975 810.838 721.022 810.368 722.257 cv
809.441 724.691 807.552 726.074 806.262 726.938 cv
799.355 731.565 794.061 733.116 794.061 733.116 cv
791.216 733.976 786.981 735.072 781.738 735.724 cv
775.252 736.53 770.29 736.275 770.281 736.588 cv
770.272 736.868 774.217 737.472 778.674 737.414 cv
785.207 737.327 790.278 735.977 794.329 734.651 cv
800.233 732.718 803.921 731.121 803.921 731.121 cv
807.041 729.77 808.812 728.792 809.255 729.317 cv
809.983 730.181 806.429 734.281 805.61 735.227 cv
804.156 736.904 802.225 739.1 798.895 741.404 cv
797.248 742.544 793.057 745.228 784.66 747.351 cv
775.081 749.773 767.821 749.494 767.834 749.913 cv
767.845 750.215 771.626 750.438 775.144 750.306 cv
776.822 750.243 782.409 749.914 788.65 748.003 cv
793.322 746.574 798.243 744.435 798.243 744.435 cv
801.953 742.823 804.064 741.622 804.612 742.248 cv
805.317 743.054 802.877 746.251 802.271 747.044 cv
801.196 748.454 797.52 753.019 789.821 757.078 cv
787.548 758.276 782.874 760.679 776.353 761.797 cv
771.217 762.679 766.92 762.421 766.914 762.757 cv
766.908 763.026 769.668 763.431 772.439 763.467 cv
773.557 763.481 778.208 763.427 785.792 760.877 cv
789.947 759.479 793.391 758.322 797.619 755.841 cv
799.839 754.538 801.689 753.302 802.195 753.797 cv
802.94 754.528 800.16 758.453 799.701 759.092 cv
798.107 761.312 795.928 763.683 792.267 766.373 cv
790.104 767.962 786.583 770.512 781.514 772.407 cv
772.772 775.675 765.608 774.686 765.609 775.189 cv
765.61 775.611 770.665 776.456 776.372 775.707 cv
781.551 775.027 785.467 773.313 787.461 772.369 cv
791.509 770.452 796.018 767.764 796.018 767.764 cv
798.591 766.23 800.075 765.204 800.507 765.615 cv
801.157 766.237 798.865 769.612 798.166 770.642 cv
795.305 774.855 792.262 777.479 791.451 778.163 cv
789.745 779.603 785.839 782.836 779.902 784.992 cv
773.07 787.474 767.489 787.096 767.508 787.563 cv
767.524 787.935 771.071 788.359 774.875 788.023 cv
781.608 787.429 786.567 784.674 788.458 783.611 cv
791.232 782.051 794.172 779.905 794.981 779.313 cv
798.206 776.958 799.615 775.562 800.123 775.937 cv
800.837 776.464 799.133 780.024 797.936 782.115 cv
797.082 783.606 795.021 786.902 790.991 790.441 cv
788.984 792.203 785.583 795.135 780.439 797.041 cv
774.232 799.339 769.075 798.814 769.082 799.343 cv
769.087 799.753 772.203 800.312 775.489 800.11 cv
780.393 799.81 784.012 797.879 787.192 796.235 cv
791.043 794.243 793.771 792.023 795.135 790.901 cv
799.21 787.548 800.865 785.096 801.504 785.491 cv
802.272 785.966 800.762 790.056 799.125 793.088 cv
796.798 797.399 793.929 800.102 792.18 801.722 cv
790.521 803.259 787.815 805.73 783.701 807.746 cv
778.091 810.494 773.467 810.63 773.533 811.122 cv
773.585 811.523 776.686 811.639 779.749 811.122 cv
780.461 811.002 783.427 810.466 787.845 808.168 cv
793.042 805.463 796.702 802.163 798.281 800.647 cv
801.655 797.41 802.797 795.351 803.384 795.659 cv
804.264 796.121 802.795 801.312 800.507 805.52 cv
800.023 806.41 797.752 810.474 793.216 814.384 cv
792.01 815.423 790.33 816.854 787.806 818.182 cv
782.702 820.868 778.398 820.895 778.444 821.367 cv
778.482 821.763 781.553 822.174 784.928 821.559 cv
789.592 820.709 792.807 818.271 795.442 816.226 cv
800.028 812.666 803.269 808.551 803.27 808.551 cv
805.014 806.337 806.119 804.473 806.723 804.714 cv
807.553 805.046 806.652 809.048 806.531 809.587 cv
806.235 810.901 805.314 814.492 802.425 818.834 cv
801.261 820.585 799.45 823.258 796.171 825.818 cv
792.997 828.295 790.018 829.44 789.111 829.77 cv
785.754 830.991 783.216 831.083 783.24 831.381 cv
783.266 831.702 786.244 832.064 789.379 831.573 cv
795.758 830.574 800.096 826.465 801.236 825.357 cv
804.25 822.428 806.922 818.287 808.104 816.456 cv
809.721 813.95 810.606 812.21 811.173 812.388 cv
811.964 812.638 811.574 816.441 810.905 819.257 cv
810.708 820.085 809.745 823.949 806.492 828.849 cv
804.974 831.136 803.498 833.36 800.967 835.449 cv
795.313 840.114 788.983 840.322 789.111 841.089 cv
789.203 841.643 792.554 841.9 795.902 841.127 cv
801.06 839.937 804.395 836.719 806.416 834.72 cv
809.767 831.405 811.954 827.624 812.823 826.01 cv
814.391 823.099 815.021 821.02 815.548 821.137 cv
816.255 821.294 816.063 825.258 815.548 828.235 cv
814.917 831.877 813.704 834.61 812.977 836.063 cv
812.227 837.561 810.902 840.153 808.257 842.816 cv
804.845 846.251 801.311 847.714 800.507 848.034 cv
795.573 849.996 791.612 849.397 791.605 849.837 cv
791.598 850.284 795.657 851.355 800.161 850.566 cv
804.784 849.757 807.929 847.328 809.754 845.885 cv
810.601 845.216 815.111 841.565 818.157 835.104 cv
819.686 831.86 820.118 829.454 820.689 829.54 cv
821.404 829.648 821.581 833.536 821.111 836.869 cv
820.553 840.834 819.118 843.692 818.349 845.195 cv
817.391 847.067 815.872 849.968 812.785 852.753 cv
811.606 853.818 809.538 855.649 806.377 856.821 cv
802.121 858.398 798.858 857.675 798.818 858.125 cv
798.774 858.626 802.742 860.193 807.068 859.43 cv
810.994 858.737 813.566 856.417 815.586 854.595 cv
819.736 850.853 822.042 846.401 823.298 843.929 cv
825.103 840.376 825.649 838.136 826.292 838.25 cv
827.128 838.398 827.281 842.396 826.79 845.655 cv
826.338 848.656 825.374 850.816 824.718 852.255 cv
822.417 857.309 819.349 860.333 818.694 860.965 cv
817.146 862.458 815.466 864.078 812.785 865.224 cv
808.118 867.218 803.975 866.254 803.921 866.797 cv
803.879 867.234 806.532 868.161 809.447 868.217 cv
814.059 868.305 817.496 866.179 818.694 865.416 cv
821.279 863.77 822.743 861.932 824.948 859.162 cv
826.18 857.615 827.579 855.857 828.862 853.214 cv
830.548 849.74 830.736 847.409 831.279 847.458 cv
831.927 847.518 832.278 850.891 832.085 853.713 cv
832.048 854.257 831.873 856.504 830.896 859.43 cv
829.785 862.755 828.28 865.033 827.864 865.646 cv
824.685 870.331 820.743 872.577 819.73 873.128 cv
818.292 873.91 816.898 874.667 814.857 875.008 cv
810.864 875.676 807.664 874.202 807.567 874.509 cv
807.491 874.749 809.364 875.841 811.749 876.351 cv
815.591 877.173 818.817 876.066 820.382 875.507 cv
825.049 873.841 827.873 870.833 829.323 869.253 cv
831.964 866.374 833.791 863.029 834.387 861.924 cv
835.903 859.116 836.456 857.295 836.881 857.396 cv
837.482 857.54 837.199 861.355 836.536 864.457 cv
835.806 867.873 834.64 870.31 834.349 870.903 cv
833.34 872.962 831.482 876.647 827.442 879.728 cv
825.749 881.019 822.322 883.632 817.658 883.833 cv
813.28 884.022 809.951 881.996 809.792 882.375 cv
809.665 882.679 811.729 884.137 814.281 884.946 cv
818.996 886.44 823.246 885.042 824.642 884.563 cv
828.513 883.231 830.944 880.959 832.315 879.651 cv
834.098 877.95 836.694 874.935 839.03 871.133 cv
840.241 869.162 840.893 867.775 841.409 867.91 cv
842.156 868.105 842.057 871.341 841.601 873.78 cv
841.475 874.455 840.846 877.61 838.301 881.531 cv
835.023 886.582 830.965 889.204 829.706 889.973 cv
827.316 891.432 825.004 892.843 821.764 893.081 cv
816.678 893.453 812.852 890.674 812.67 891.047 cv
812.524 891.345 814.85 893.356 818.119 894.27 cv
822.774 895.571 826.9 893.96 829.054 893.119 cv
833.843 891.249 836.924 888.185 838.378 886.711 cv
841.89 883.15 843.259 880.016 844.018 880.342 cv
844.73 880.647 844.206 883.697 843.481 885.944 cv
841.782 891.21 838.219 894.43 836.574 895.881 cv
834.033 898.124 830.547 901.199 825.524 901.867 cv
819.029 902.731 813.846 899.054 813.514 899.757 cv
813.288 900.235 815.597 902.125 818.349 903.21 cv
822.906 905.007 827.146 903.993 829.476 903.402 cv
835.742 901.813 840.046 897.955 841.793 896.188 cv
844.347 893.606 845.618 891.266 846.167 891.546 cv
846.792 891.864 845.944 895.309 844.517 898.184 cv
841.849 903.559 837.411 906.427 834.963 907.968 cv
831.922 909.882 828.514 912.027 823.874 912.189 cv
818.164 912.388 814 909.464 813.783 909.925 cv
813.604 910.305 816.327 912.514 819.96 913.57 cv
824.5 914.89 828.421 913.817 831.011 913.11 cv
836.756 911.539 840.822 908.424 842.714 906.779 cv
845.482 904.371 846.76 902.357 847.203 902.635 cv
847.816 903.018 846.28 907.45 843.558 911.191 cv
839.469 916.81 833.984 919.11 832.315 919.786 cv
830.693 920.443 827.263 921.793 822.761 921.743 cv
818.905 921.7 815.983 920.648 815.854 921.052 cv
815.738 921.418 818.004 922.706 820.498 923.393 cv
824.844 924.591 828.613 923.617 831.279 922.894 cv
837.702 921.152 842.345 917.555 843.212 916.87 cv
845.573 915.004 847.089 913.272 847.548 913.608 cv
848.097 914.01 846.679 917.038 845.361 919.172 cv
841.578 925.301 835.995 928.319 834.081 929.263 cv
831.387 930.592 826.824 932.843 821.227 932.141 cv
817.512 931.675 814.594 930.066 814.435 930.415 cv
814.293 930.725 816.467 932.321 819.04 933.254 cv
823.419 934.843 827.459 933.968 829.898 933.407 cv
835.219 932.185 839.356 929.517 841.831 927.92 cv
845.047 925.846 846.853 924.151 847.28 924.544 cv
847.824 925.045 845.559 928.436 843.941 930.53 cv
842.043 932.988 839.564 936.198 835.078 938.856 cv
832.832 940.187 827.201 943.522 820.498 942.616 cv
816.099 942.021 813.034 939.843 812.823 940.237 cv
812.634 940.592 814.966 942.628 817.965 943.729 cv
821.388 944.985 824.377 944.544 827.558 944.036 cv
829.594 943.71 834.872 942.812 840.488 939.201 cv
844.131 936.859 846.021 934.595 846.474 934.98 cv
846.985 935.415 845.049 938.688 843.174 941.12 cv
840.048 945.173 836.622 947.495 835.308 948.333 cv
833.001 949.805 828.266 952.825 821.956 953.053 cv
817.177 953.225 813.491 951.725 813.361 952.17 cv
813.258 952.519 815.459 953.645 817.773 954.281 cv
822.08 955.464 825.753 954.669 828.632 954.012 cv
829.996 953.701 834.525 952.577 839.721 949.484 cv
843.346 947.327 845.333 945.378 845.783 945.801 cv
846.315 946.301 844.076 949.541 842.791 951.211 cv
839.652 955.289 836.344 957.629 835.347 958.31 cv
831.277 961.086 827.603 962.217 826.368 962.568 cv
824.409 963.125 821.675 963.903 818.119 963.681 cv
814.388 963.449 811.797 962.244 811.672 962.568 cv
811.559 962.863 813.582 964.148 815.893 964.909 cv
819.664 966.15 822.943 965.582 825.946 965.024 cv
832.176 963.868 836.869 961.307 838.531 960.343 cv
842.2 958.217 844.176 956.3 844.632 956.736 cv
845.174 957.254 842.976 960.525 841.179 962.722 cv
839.683 964.551 836.706 968.115 831.433 970.856 cv
829.29 971.971 824.149 974.644 817.658 974.195 cv
813.888 973.934 810.937 972.708 810.79 973.12 cv
810.658 973.489 812.894 974.832 815.317 975.576 cv
816.094 975.814 818.941 976.621 824.219 975.806 cv
826.131 975.511 830.435 974.661 835.807 971.931 cv
840.583 969.504 843.002 967.212 843.481 967.71 cv
844.021 968.272 841.395 971.654 839.989 973.312 cv
838.157 975.475 835.799 978.257 831.702 980.679 cv
829.791 981.809 824.028 985.214 816.814 984.669 cv
812.668 984.356 809.559 982.854 809.37 983.327 cv
809.208 983.734 811.381 985.182 813.706 986.013 cv
814.948 986.457 817.536 987.19 822.147 986.588 cv
823.167 986.455 827.741 985.805 834.387 982.482 cv
839.457 979.948 841.724 977.861 842.215 978.377 cv
842.833 979.026 839.962 983.097 836.805 986.166 cv
832.772 990.085 828.566 992.087 826.176 993.034 cv
826.176 993.034 820.792 995.168 815.317 995.26 cv
815.019 995.265 814.837 995.261 814.78 995.26 cv
810.142 995.155 807.397 992.525 807.221 992.766 cv
807.068 992.975 808.864 995.348 812.018 996.641 cv
812.754 996.943 815.168 997.843 820.536 997.063 cv
826.481 996.199 831.322 993.961 834.272 992.344 cv
838.284 990.144 840.302 988.267 840.718 988.698 cv
841.264 989.264 838.327 993.023 836.268 995.298 cv
834.634 997.103 832.173 999.78 828.21 1002.13 cv
823.237 1005.07 819.436 1005.41 819.538 1005.93 cv
819.653 1006.51 824.573 1006.77 829.208 1004.81 cv
831.445 1003.87 834.025 1002.23 835.04 1001.59 cv
837.823 999.827 839.005 998.74 839.26 998.981 cv
839.673 999.373 837.231 1002.84 834.733 1005.62 cv
832.504 1008.1 829.366 1011 824.987 1013.68 cv
826.854 1013.85 829.725 1013.89 833.044 1013.03 cv
834.24 1012.71 840.187 1011.16 843.903 1006.58 cv
847.805 1001.77 847.593 995.663 847.548 993.111 cv
847.251 976.17 852.002 984.635 853.764 940.621 cv
854.663 918.182 855.112 906.963 853.764 896.188 cv
850.626 871.101 842.509 852.316 839.26 845.31 cv
827.726 820.433 820.756 821.505 814.396 801.338 cv
808.54 782.765 809.593 766.446 810.252 756.215 cv
811.389 738.599 815.458 724.397 818.924 714.852 cv
817.705 713.766 815.94 712.447 813.591 711.398 cv
809.295 709.481 805.365 709.501 803.27 709.672 cv
cp
795.173 708.099 mo
796.434 708.932 797.422 709.057 798.089 709.02 cv
799.101 708.963 799.923 708.501 800.775 708.943 cv
801.167 709.146 801.408 709.459 801.542 709.672 cv
801.121 709.879 800.563 710.241 800.315 710.861 cv
800.066 711.48 800.307 711.984 800.315 712.588 cv
800.329 713.744 799.819 714.592 799.202 715.619 cv
797.62 718.251 794.669 720.219 794.252 720.492 cv
792.647 721.545 789.627 723.492 785.12 724.099 cv
781.187 724.629 777.996 723.89 776.218 723.332 cv
777.879 723.641 780.141 723.867 782.78 723.562 cv
784.155 723.403 786.522 723.108 789.264 721.758 cv
791.723 720.548 793.442 719.001 794.521 717.845 cv
794.638 717.413 794.845 716.755 795.211 716.003 cv
795.985 714.415 796.574 714.243 796.708 713.279 cv
796.782 712.747 796.643 712.505 795.979 710.555 cv
795.616 709.489 795.34 708.627 795.173 708.099 cv
cp
.278431 .141176 .0588235 rgb
f
grestore
950.265 1260.01 mo
953.066 1259.53 955.867 1259.04 958.667 1258.55 cv
957.371 1257.06 956.017 1255.35 954.677 1253.41 cv
952.788 1250.67 951.324 1248.05 950.188 1245.7 cv
950.213 1250.47 950.239 1255.24 950.265 1260.01 cv
cp
.886275 .54902 .00392157 rgb
f
gsave
950.265 1260.01 mo
953.066 1259.53 955.867 1259.04 958.667 1258.55 cv
957.371 1257.06 956.017 1255.35 954.677 1253.41 cv
952.788 1250.67 951.324 1248.05 950.188 1245.7 cv
950.213 1250.47 950.239 1255.24 950.265 1260.01 cv
cp
clp
954.14 1260.55 mo
953.498 1259.05 952.869 1257.29 952.375 1255.29 cv
951.44 1251.51 951.304 1248.15 951.416 1245.59 cv
961.776 1259.36 li
954.14 1260.55 li
cp
.552941 .156863 .00392157 rgb
f
grestore
962.888 1143.21 mo
965.754 1147.59 970.179 1153.47 976.644 1159.33 cv
979.047 1161.51 986.339 1167.85 999.148 1173.89 cv
1018.79 1183.15 1036.48 1184.64 1046.57 1185.4 cv
1052.19 1185.83 1070.44 1186.89 1093.25 1181.89 cv
1101.62 1180.06 1113.29 1177.41 1127.15 1170.27 cv
1139.67 1163.81 1148.02 1156.74 1151.21 1153.92 cv
1157.82 1148.07 1162.74 1142.36 1166.23 1137.8 cv
1166.23 1140.22 1166.23 1142.64 1166.23 1145.06 cv
1163.63 1157.84 1160.89 1170.77 1158 1183.85 cv
1155.92 1193.25 1153.81 1202.54 1151.67 1211.74 cv
1150.03 1215.38 1148.39 1219.01 1146.76 1222.64 cv
1123.12 1227.26 1103.26 1231.05 1088.51 1233.84 cv
1063.94 1238.5 1051.98 1240.66 1023.82 1245.97 cv
1000.45 1250.37 980.974 1254.1 967.032 1256.79 cv
965.31 1255.25 963.146 1253.1 960.97 1250.27 cv
959.928 1248.91 956.392 1244.15 953.987 1237.53 cv
950.088 1226.79 951.243 1216.89 952.068 1212.28 cv
955.675 1189.26 959.282 1166.24 962.888 1143.21 cv
cp
.796078 .372549 0 rgb
f
1165.8 1138.36 mo
1165.18 1145.49 1163.5 1155.17 1159.04 1165.78 cv
1157.53 1169.37 1151.69 1182.61 1138.66 1195.7 cv
1131.7 1202.71 1124.67 1207.66 1118.37 1211.3 cv
1119.11 1207.44 1119.85 1203.56 1120.59 1199.7 cv
1117.85 1197.65 1115.11 1195.6 1112.38 1193.55 cv
1106.88 1193.39 1101.28 1193.17 1095.57 1192.86 cv
1089.19 1192.53 1082.95 1192.12 1076.85 1191.64 cv
1078.21 1196.67 1079.5 1201.99 1080.68 1207.6 cv
1081.98 1213.73 1083.01 1219.61 1083.83 1225.21 cv
1082.95 1225.43 1082.05 1225.65 1081.12 1225.86 cv
1075.14 1227.22 1068.24 1228.39 1060.62 1228.97 cv
1031.44 1231.22 1010.01 1223.66 1004.79 1221.72 cv
996.031 1218.46 985.206 1214.3 975.09 1204.11 cv
974.468 1203.48 973.746 1202.75 972.958 1201.9 cv
970.679 1191 968.396 1180.1 966.111 1169.2 cv
964.721 1162.55 963.331 1155.91 961.94 1149.26 cv
962.258 1147.25 962.571 1145.23 962.888 1143.21 cv
965.752 1147.59 970.177 1153.47 976.646 1159.33 cv
979.05 1161.51 986.338 1167.85 999.148 1173.89 cv
1018.79 1183.15 1036.49 1184.64 1046.57 1185.4 cv
1052.19 1185.82 1070.43 1186.89 1093.25 1181.89 cv
1101.62 1180.06 1113.3 1177.42 1127.15 1170.27 cv
1139.67 1163.81 1148.02 1156.74 1151.21 1153.92 cv
1157.55 1148.31 1162.35 1142.81 1165.8 1138.36 cv
cp
.552941 .160784 .00392157 rgb
f
1118.37 1211.3 mo
1117.26 1217.13 1116.15 1222.96 1115.03 1228.78 cv
1104.97 1230.72 1096.07 1232.41 1088.51 1233.84 cv
1086.29 1234.26 1084.16 1234.67 1082.12 1235.05 cv
1081.79 1231.99 1081.46 1228.92 1081.12 1225.86 cv
1082.05 1225.65 1082.95 1225.43 1083.83 1225.21 cv
1094.16 1222.64 1101.37 1219.59 1104.36 1218.27 cv
1108.19 1216.58 1113.02 1214.41 1118.37 1211.3 cv
cp
.737255 .113725 0 rgb
f
1082.12 1235.05 mo
1061.64 1238.92 1049.43 1241.14 1023.82 1245.97 cv
1002.24 1250.04 983.977 1253.53 970.329 1256.16 cv
969.256 1255.23 967.949 1254.06 966.517 1252.62 cv
966.517 1252.62 965.78 1251.89 964.712 1250.74 cv
967.46 1234.46 970.209 1218.18 972.958 1201.9 cv
973.746 1202.75 974.468 1203.48 975.09 1204.11 cv
985.206 1214.3 996.031 1218.46 1004.79 1221.72 cv
1010.01 1223.66 1031.44 1231.22 1060.62 1228.97 cv
1068.24 1228.39 1075.14 1227.22 1081.12 1225.86 cv
1081.46 1228.92 1081.79 1231.99 1082.12 1235.05 cv
cp
.462745 .0392157 0 rgb
f
966.111 1169.2 mo
965.066 1175.16 964.017 1181.12 962.967 1187.08 cv
962.543 1186.15 962.143 1185.18 961.765 1184.18 cv
961.516 1183.5 961.277 1182.82 961.047 1182.12 cv
959.592 1177.67 958.933 1173.56 958.671 1170.14 cv
959.762 1163.18 960.849 1156.22 961.94 1149.26 cv
963.331 1155.91 964.721 1162.55 966.111 1169.2 cv
cp
.890196 .556863 0 rgb
f
961.765 1184.17 mo
959.306 1201.05 956.848 1217.91 954.389 1234.78 cv
953.191 1231.9 952.238 1229.11 951.529 1226.83 cv
950.853 1220.54 951.529 1215.29 952.068 1212.28 cv
954.269 1198.23 956.47 1184.19 958.671 1170.14 cv
958.933 1173.56 959.592 1177.67 961.047 1182.12 cv
961.277 1182.82 961.516 1183.5 961.765 1184.17 cv
cp
.890196 .243137 0 rgb
f
970.329 1256.16 mo
969.196 1256.37 968.101 1256.58 967.032 1256.79 cv
965.311 1255.25 963.146 1253.1 960.968 1250.27 cv
960.25 1249.33 958.353 1246.79 956.452 1243.14 cv
956.539 1242 956.617 1240.88 956.7 1239.75 cv
957.663 1241.6 958.726 1243.38 959.896 1244.97 cv
961.489 1247.15 963.363 1249.28 964.712 1250.74 cv
965.78 1251.89 966.517 1252.62 966.517 1252.62 cv
967.949 1254.06 969.256 1255.23 970.329 1256.16 cv
cp
.552941 .156863 0 rgb
f
956.7 1239.75 mo
956.617 1240.88 956.539 1242 956.452 1243.13 cv
955.595 1241.47 954.739 1239.59 953.988 1237.53 cv
952.63 1233.8 951.884 1230.16 951.529 1226.83 cv
952.238 1229.11 953.191 1231.9 954.389 1234.78 cv
955.08 1236.43 955.848 1238.12 956.7 1239.75 cv
cp
.788235 .356863 .00392157 rgb
f
1120.59 1199.7 mo
1119.85 1203.56 1119.11 1207.44 1118.37 1211.3 cv
1113.02 1214.41 1108.19 1216.58 1104.36 1218.27 cv
1101.37 1219.59 1094.16 1222.64 1083.83 1225.21 cv
1083.01 1219.61 1081.98 1213.73 1080.68 1207.6 cv
1079.5 1201.99 1078.21 1196.67 1076.85 1191.64 cv
1082.95 1192.12 1089.19 1192.53 1095.57 1192.86 cv
1101.28 1193.17 1106.88 1193.39 1112.38 1193.55 cv
1115.11 1195.6 1117.85 1197.65 1120.59 1199.7 cv
cp
.796078 .372549 0 rgb
f
1166.23 1137.8 mo
1166.23 1145.06 li
1163.63 1157.84 1160.89 1170.77 1158 1183.85 cv
1155.92 1193.25 1153.81 1202.55 1151.67 1211.74 cv
1150.03 1215.38 1148.39 1219.01 1146.76 1222.64 cv
1135.23 1224.9 1124.6 1226.95 1115.03 1228.78 cv
1116.15 1222.96 1117.26 1217.13 1118.37 1211.3 cv
1124.67 1207.66 1131.7 1202.71 1138.66 1195.7 cv
1151.69 1182.61 1157.53 1169.37 1159.04 1165.78 cv
1163.5 1155.17 1165.18 1145.49 1165.8 1138.36 cv
1165.95 1138.17 1166.09 1137.99 1166.23 1137.8 cv
cp
.462745 .0392157 0 rgb
f
972.958 1201.9 mo
970.209 1218.18 967.46 1234.46 964.712 1250.74 cv
963.363 1249.28 961.489 1247.15 959.896 1244.97 cv
958.726 1243.38 957.663 1241.6 956.7 1239.75 cv
955.848 1238.12 955.08 1236.43 954.389 1234.78 cv
956.848 1217.91 959.306 1201.05 961.765 1184.18 cv
962.143 1185.18 962.543 1186.15 962.967 1187.08 cv
965.992 1193.85 969.956 1198.69 972.958 1201.9 cv
cp
.737255 .109804 0 rgb
f
972.958 1201.9 mo
969.956 1198.69 965.992 1193.85 962.967 1187.08 cv
964.017 1181.12 965.066 1175.16 966.111 1169.2 cv
968.396 1180.1 970.679 1191 972.958 1201.9 cv
cp
.8 .372549 .00392157 rgb
f
976.702 1030.56 mo
979.39 1034.53 983.505 1039.88 989.421 1045.26 cv
992.098 1047.69 1000.4 1054.91 1016.42 1061.66 cv
1037.33 1070.47 1055.53 1071.79 1065.45 1072.42 cv
1073.85 1072.96 1090.3 1073.38 1110.46 1069.31 cv
1119.02 1067.58 1131.91 1064.89 1147.29 1057.34 cv
1163.45 1049.42 1173.65 1040.41 1176.3 1038 cv
1182.5 1032.39 1187.11 1027.02 1190.29 1022.92 cv
1189.87 1027.13 1189.46 1031.34 1189.04 1035.55 cv
1186.76 1045.75 1184.51 1056.04 1182.29 1066.4 cv
1179.43 1079.69 1176.67 1092.89 1174 1106 cv
1172.47 1109.88 1170.12 1115.26 1166.63 1121.34 cv
1162.82 1127.99 1152.79 1145.07 1132.87 1158.64 cv
1118.55 1168.39 1105.63 1171.9 1095.11 1174.75 cv
1076.32 1179.86 1061.11 1180.05 1055.05 1179.97 cv
1047.75 1179.88 1034.06 1179.6 1017.3 1174.29 cv
1010.23 1172.06 998.737 1168.31 986.601 1159.1 cv
980.704 1154.62 973.607 1149.11 968.797 1139.15 cv
966.038 1133.43 964.963 1128.18 964.5 1124.57 cv
966.375 1108.93 968.325 1093.3 970.353 1077.67 cv
972.392 1061.96 974.508 1046.26 976.702 1030.56 cv
cp
f
1190.29 1022.92 mo
1189.87 1027.13 1189.46 1031.34 1189.04 1035.55 cv
1186.76 1045.75 1184.51 1056.04 1182.29 1066.4 cv
1179.43 1079.69 1176.67 1092.89 1174 1106 cv
1172.49 1109.83 1170.17 1115.15 1166.74 1121.15 cv
1165.28 1123.32 1163.56 1125.78 1161.57 1128.45 cv
1159.49 1131.23 1157.16 1134.36 1154.2 1137.69 cv
1153 1139.04 1147.72 1144.88 1139.35 1151.04 cv
1136.72 1152.98 1134.21 1154.63 1131.84 1156.07 cv
1133.37 1145.65 1135.06 1135.01 1136.93 1124.18 cv
1138.31 1116.26 1139.73 1108.47 1141.22 1100.81 cv
1150.72 1095 1156.78 1089.67 1158.92 1087.73 cv
1163.38 1083.69 1169.01 1078.52 1174.35 1070.12 cv
1179.07 1062.67 1181.42 1056.06 1183.09 1051.36 cv
1184.7 1046.85 1186.72 1040.22 1188.04 1032.02 cv
1188.5 1029.24 1188.79 1026.73 1188.99 1024.56 cv
1189.45 1024 1189.88 1023.45 1190.29 1022.92 cv
cp
.462745 .0392157 0 rgb
f
1144.61 1083.82 mo
1143.45 1089.41 1142.32 1095.07 1141.22 1100.81 cv
1136.86 1103.46 1131.77 1106.22 1126 1108.8 cv
1122.28 1110.46 1109.84 1115.8 1092.39 1118.81 cv
1087.84 1119.59 1083.46 1120.13 1079.27 1120.48 cv
1084.79 1106.49 1090.3 1092.49 1095.81 1078.5 cv
1098.93 1078.61 1102.42 1078.71 1106.47 1078.83 cv
1114.61 1079.07 1124.1 1079.33 1134.71 1079.6 cv
1138.01 1081 1141.31 1082.41 1144.61 1083.82 cv
cp
.796078 .372549 .00392157 rgb
f
1095.81 1078.5 mo
1090.3 1092.49 1084.79 1106.49 1079.27 1120.48 cv
1078.83 1120.52 1078.39 1120.55 1077.96 1120.58 cv
1069.92 1121.18 1062.64 1121.08 1056.4 1120.65 cv
1052.97 1111.39 1049.43 1102.02 1045.77 1092.57 cv
1042.81 1084.95 1039.84 1077.43 1036.84 1070 cv
1040.53 1071.26 1045.76 1072.87 1052.16 1074.26 cv
1058.02 1075.54 1063.79 1076.4 1073.68 1077.26 cv
1081 1077.89 1086.93 1078.2 1095.81 1078.5 cv
cp
.890196 .556863 0 rgb
f
1077.96 1120.58 mo
1075.73 1126.63 1073.37 1132.77 1070.86 1139.02 cv
1068.92 1143.84 1066.97 1148.56 1065 1153.18 cv
1064.37 1151.09 1063.72 1149 1063.08 1146.91 cv
1060.4 1138.13 1057.71 1129.34 1055.02 1120.55 cv
1055.47 1120.59 1055.93 1120.62 1056.4 1120.65 cv
1062.64 1121.08 1069.92 1121.18 1077.96 1120.58 cv
cp
.890196 .247059 0 rgb
f
1166.73 1121.16 mo
1166.7 1121.22 1166.67 1121.28 1166.63 1121.34 cv
1162.82 1128 1152.79 1145.07 1132.87 1158.64 cv
1128.29 1161.76 1123.86 1164.23 1119.61 1166.25 cv
1118.77 1165.37 1117.92 1164.49 1117.08 1163.6 cv
1117.62 1163.36 1118.11 1163.15 1118.52 1162.96 cv
1122.1 1161.32 1126.63 1159.23 1131.84 1156.07 cv
1134.21 1154.63 1136.72 1152.98 1139.35 1151.04 cv
1147.72 1144.88 1153 1139.04 1154.2 1137.69 cv
1157.16 1134.36 1159.49 1131.23 1161.57 1128.45 cv
1163.56 1125.78 1165.28 1123.32 1166.73 1121.16 cv
cp
.552941 .160784 .00392157 rgb
f
1119.6 1166.25 mo
1110.54 1170.57 1102.27 1172.81 1095.11 1174.75 cv
1087.42 1176.84 1080.33 1178.11 1074.22 1178.87 cv
1073.78 1177.61 1073.34 1176.35 1072.91 1175.09 cv
1082.25 1174.17 1089.49 1172.57 1093.71 1171.53 cv
1104.56 1168.85 1112.83 1165.48 1117.08 1163.6 cv
1117.92 1164.49 1118.77 1165.37 1119.6 1166.25 cv
cp
.796078 .368627 .00392157 rgb
f
1074.22 1178.87 mo
1065.4 1179.97 1058.63 1180.02 1055.05 1179.97 cv
1047.75 1179.88 1034.06 1179.6 1017.3 1174.29 cv
1010.23 1172.06 998.738 1168.31 986.601 1159.1 cv
981.297 1155.08 975.021 1150.21 970.32 1142.02 cv
970.513 1140.66 970.707 1139.3 970.9 1137.94 cv
972.079 1139.97 973.63 1142.33 975.666 1144.77 cv
976.366 1145.61 977.88 1147.37 980.758 1149.89 cv
982.231 1151.18 984.06 1152.66 986.315 1154.32 cv
995.239 1160.89 1003.23 1164.57 1006.11 1165.83 cv
1018.07 1171.1 1028.01 1172.83 1034.66 1173.95 cv
1038.02 1174.51 1048.73 1176.18 1062.86 1175.73 cv
1065.98 1175.63 1068.95 1175.45 1071.74 1175.19 cv
1072.13 1175.16 1072.52 1175.12 1072.91 1175.09 cv
1073.34 1176.35 1073.78 1177.61 1074.22 1178.87 cv
cp
.54902 .156863 0 rgb
f
1071.74 1175.19 mo
1068.95 1175.45 1065.98 1175.63 1062.86 1175.73 cv
1048.73 1176.18 1038.02 1174.51 1034.66 1173.95 cv
1028.01 1172.83 1018.07 1171.1 1006.11 1165.83 cv
1003.23 1164.57 995.239 1160.89 986.315 1154.32 cv
984.06 1152.66 982.231 1151.18 980.758 1149.89 cv
983.516 1131.94 986.279 1113.99 989.037 1096.04 cv
991.491 1098.26 993.807 1100.02 995.695 1101.43 cv
1009.87 1112.06 1023.82 1115.19 1036.44 1117.89 cv
1040.03 1118.66 1046.49 1119.89 1055.02 1120.55 cv
1057.71 1129.34 1060.4 1138.13 1063.08 1146.91 cv
1063.72 1149 1064.37 1151.09 1065 1153.18 cv
1067.25 1160.52 1069.49 1167.85 1071.74 1175.19 cv
cp
.466667 .0392157 .00392157 rgb
f
984.23 1065.73 mo
982.978 1072.63 981.729 1079.54 980.477 1086.45 cv
979.846 1085.54 979.229 1084.6 978.631 1083.6 cv
977.383 1081.52 976.223 1079.26 975.205 1076.8 cv
973.451 1072.54 972.498 1068.59 971.973 1065.31 cv
973.276 1055.49 974.606 1045.67 975.97 1035.86 cv
978.433 1044.68 980.873 1053.5 983.3 1062.33 cv
983.613 1063.46 983.921 1064.59 984.23 1065.73 cv
cp
.894118 .560784 .00392157 rgb
f
978.631 1083.6 mo
976.052 1101.71 973.479 1119.83 970.9 1137.94 cv
969.749 1135.96 968.953 1134.29 968.414 1133.14 cv
966.618 1129.32 965.462 1125.79 964.707 1122.86 cv
966.517 1107.79 968.4 1092.73 970.352 1077.68 cv
970.886 1073.55 971.43 1069.43 971.973 1065.31 cv
972.498 1068.59 973.451 1072.54 975.205 1076.8 cv
976.223 1079.26 977.383 1081.52 978.631 1083.6 cv
cp
.890196 .243137 0 rgb
f
970.9 1137.94 mo
970.707 1139.3 970.513 1140.66 970.32 1142.02 cv
969.786 1141.1 969.279 1140.15 968.796 1139.15 cv
966.038 1133.43 964.965 1128.19 964.5 1124.57 cv
964.569 1124 964.638 1123.43 964.707 1122.86 cv
965.462 1125.79 966.618 1129.32 968.414 1133.14 cv
968.953 1134.29 969.749 1135.96 970.9 1137.94 cv
cp
.886275 .545098 .00392157 rgb
f
989.037 1096.04 mo
986.279 1113.99 983.516 1131.94 980.758 1149.89 cv
977.88 1147.37 976.366 1145.61 975.666 1144.77 cv
973.63 1142.33 972.079 1139.97 970.9 1137.94 cv
973.479 1119.83 976.052 1101.71 978.631 1083.6 cv
979.229 1084.6 979.846 1085.54 980.477 1086.45 cv
982.876 1089.88 985.482 1092.72 987.996 1095.08 cv
988.346 1095.42 988.691 1095.73 989.037 1096.04 cv
cp
.741176 .113725 .00392157 rgb
f
1188.99 1024.56 mo
1188.79 1026.73 1188.5 1029.24 1188.04 1032.02 cv
1186.72 1040.22 1184.7 1046.85 1183.09 1051.36 cv
1181.42 1056.06 1179.07 1062.67 1174.35 1070.12 cv
1169.01 1078.52 1163.38 1083.69 1158.92 1087.73 cv
1156.78 1089.67 1150.72 1095 1141.22 1100.81 cv
1142.32 1095.07 1143.45 1089.41 1144.61 1083.82 cv
1141.31 1082.41 1138.01 1081 1134.71 1079.6 cv
1124.1 1079.33 1114.61 1079.07 1106.47 1078.83 cv
1102.42 1078.71 1098.93 1078.61 1095.81 1078.5 cv
1086.93 1078.2 1081 1077.89 1073.68 1077.26 cv
1063.79 1076.4 1058.02 1075.54 1052.16 1074.26 cv
1045.76 1072.87 1040.53 1071.26 1036.84 1070 cv
1039.84 1077.43 1042.81 1084.95 1045.77 1092.57 cv
1049.43 1102.02 1052.97 1111.39 1056.4 1120.65 cv
1055.93 1120.62 1055.47 1120.59 1055.02 1120.55 cv
1046.49 1119.89 1040.03 1118.66 1036.44 1117.89 cv
1023.82 1115.19 1009.87 1112.06 995.695 1101.43 cv
993.807 1100.02 991.491 1098.26 989.037 1096.04 cv
988.691 1095.73 988.346 1095.42 987.996 1095.08 cv
988.479 1091.66 988.963 1088.24 989.442 1084.82 cv
987.715 1078.45 985.975 1072.09 984.23 1065.73 cv
983.921 1064.59 983.613 1063.46 983.3 1062.33 cv
980.873 1053.5 978.433 1044.68 975.97 1035.86 cv
976.209 1034.09 976.453 1032.33 976.702 1030.56 cv
979.391 1034.53 983.507 1039.87 989.419 1045.26 cv
992.099 1047.69 1000.4 1054.91 1016.42 1061.66 cv
1037.33 1070.47 1055.52 1071.79 1065.45 1072.42 cv
1073.85 1072.96 1090.31 1073.38 1110.46 1069.31 cv
1119.02 1067.59 1131.91 1064.89 1147.29 1057.34 cv
1163.45 1049.42 1173.65 1040.41 1176.3 1038 cv
1181.71 1033.11 1185.9 1028.4 1188.99 1024.56 cv
cp
.552941 .160784 .00392157 rgb
f
1141.22 1100.81 mo
1139.73 1108.47 1138.31 1116.26 1136.93 1124.18 cv
1135.06 1135.01 1133.37 1145.65 1131.84 1156.07 cv
1126.63 1159.23 1122.1 1161.32 1118.52 1162.96 cv
1118.11 1163.15 1117.62 1163.36 1117.08 1163.6 cv
1112.83 1165.48 1104.56 1168.85 1093.71 1171.53 cv
1089.49 1172.57 1082.25 1174.17 1072.91 1175.09 cv
1072.52 1175.12 1072.13 1175.16 1071.74 1175.19 cv
1069.49 1167.85 1067.25 1160.52 1065 1153.18 cv
1066.97 1148.56 1068.92 1143.84 1070.86 1139.02 cv
1073.37 1132.77 1075.73 1126.63 1077.96 1120.58 cv
1078.39 1120.55 1078.83 1120.52 1079.27 1120.48 cv
1083.46 1120.13 1087.84 1119.59 1092.39 1118.81 cv
1109.84 1115.8 1122.28 1110.46 1126 1108.8 cv
1131.77 1106.22 1136.86 1103.46 1141.22 1100.81 cv
cp
.737255 .113725 0 rgb
f
989.442 1084.82 mo
988.963 1088.24 988.479 1091.66 987.996 1095.08 cv
985.482 1092.72 982.876 1089.88 980.477 1086.45 cv
981.729 1079.54 982.978 1072.63 984.23 1065.73 cv
985.975 1072.09 987.715 1078.45 989.442 1084.82 cv
cp
.796078 .368627 0 rgb
f
992.472 907.93 mo
995.56 911.816 1000.47 917.397 1007.44 923.009 cv
1024.2 936.521 1041.27 940.89 1054.29 944.074 cv
1072.86 948.618 1087.61 948.619 1096.3 948.563 cv
1117.47 948.428 1133.55 944.759 1139.93 943.153 cv
1156.83 938.9 1170.67 932.79 1181.14 927.153 cv
1186.46 926.217 1192.3 924.922 1198.52 923.124 cv
1203.93 921.558 1208.89 919.826 1213.37 918.06 cv
1210.35 932.415 1207.32 946.765 1204.27 961.11 cv
1202.13 971.201 1199.98 981.292 1197.83 991.384 cv
1195.62 997.604 1191.88 1006.25 1185.51 1015.44 cv
1174.14 1031.86 1160.94 1040.57 1153.74 1045.22 cv
1131.68 1059.46 1110.94 1063.09 1100.18 1064.86 cv
1091.86 1066.23 1068.56 1069.37 1040.32 1062.87 cv
1022.78 1058.83 1011.16 1052.88 1003.02 1047.52 cv
991.816 1040.13 987.264 1033.86 984.759 1029.49 cv
981.33 1023.5 979.896 1017.83 979.234 1013.95 cv
983.646 978.607 988.059 943.269 992.472 907.93 cv
cp
.894118 .560784 .00392157 rgb
f
1213.37 918.06 mo
1210.35 932.416 1207.32 946.763 1204.27 961.11 cv
1202.13 971.199 1199.98 981.292 1197.83 991.384 cv
1196.86 994.11 1195.59 997.315 1193.94 1000.82 cv
1193.94 1000.83 1193.93 1000.84 1193.92 1000.85 cv
1190.59 1006.48 1186.33 1012.63 1180.91 1018.82 cv
1172.04 1028.94 1163.57 1035.17 1159.96 1037.7 cv
1158.51 1038.71 1157.09 1039.65 1155.7 1040.53 cv
1158.03 1027.05 1160.49 1013.43 1163.06 999.672 cv
1164.29 993.152 1165.52 986.674 1166.77 980.232 cv
1173.32 976.411 1180.42 971.475 1187.58 963.988 cv
1197.83 953.278 1203.04 942.753 1204.96 938.549 cv
1208.41 931.016 1210.32 924.156 1211.4 918.824 cv
1212.07 918.57 1212.72 918.313 1213.37 918.06 cv
cp
.462745 .0392157 0 rgb
f
1136.24 952.086 mo
1131.84 967.276 1127.43 982.457 1123.02 997.646 cv
1122.53 997.766 1122.04 997.876 1121.54 997.992 cv
1117.32 998.949 1112.81 999.801 1108.04 1000.48 cv
1100.42 1001.56 1086.22 1003.06 1068.56 1001.4 cv
1061.22 1000.71 1049.49 999.534 1035.06 994.607 cv
1027.27 991.946 1020.1 989.501 1011.81 983.787 cv
1005.08 979.15 993.204 970.964 989.133 956.161 cv
988.065 952.289 987.748 948.715 987.748 945.764 cv
989.322 933.139 990.897 920.537 992.472 907.93 cv
995.561 911.816 1000.47 917.396 1007.44 923.009 cv
1021.81 934.594 1036.4 939.456 1048.47 942.615 cv
1056.87 945.474 1064.31 947.311 1070.32 948.527 cv
1083.64 951.22 1094.91 951.888 1101.71 952.054 cv
1109.42 952.242 1109.7 951.741 1123.5 951.902 cv
1127.48 951.948 1131.06 952.031 1136.24 952.086 cv
cp
.894118 .560784 .00392157 rgb
f
1121.54 997.992 mo
1115.85 1018.64 1110.17 1039.29 1104.48 1059.94 cv
1103.76 1060.07 1103.14 1060.17 1102.63 1060.26 cv
1102.53 1060.28 1102.42 1060.29 1102.32 1060.31 cv
1086.52 1062.9 1074.26 1062.18 1067.18 1061.72 cv
1059.59 1061.22 1047.12 1060.33 1031.65 1055.5 cv
1031.1 1055.33 1030.54 1055.16 1029.96 1054.97 cv
1026.41 1047.6 1022.7 1040.14 1018.83 1032.59 cv
1013.35 1021.9 1007.82 1011.57 1002.27 1001.58 cv
999.696 996.956 997.122 992.407 994.543 987.931 cv
993.646 995.694 992.669 1003.56 991.611 1011.53 cv
990.777 1017.75 989.916 1023.91 989.023 1029.98 cv
987.784 1028.52 987.029 1027.46 986.679 1026.95 cv
985.482 1025.24 984.451 1023.54 983.558 1021.88 cv
981.605 1018.27 980.325 1014.88 979.469 1012.08 cv
982.227 989.971 984.99 967.87 987.748 945.764 cv
987.748 948.715 988.065 952.289 989.133 956.161 cv
993.204 970.964 1005.08 979.15 1011.81 983.787 cv
1020.1 989.501 1027.27 991.946 1035.06 994.607 cv
1049.49 999.534 1061.22 1000.71 1068.56 1001.4 cv
1086.22 1003.06 1100.42 1001.56 1108.04 1000.48 cv
1112.81 999.801 1117.32 998.949 1121.54 997.992 cv
cp
.894118 .247059 .00392157 rgb
f
1102.32 1060.31 mo
1101.66 1061.82 1101 1063.32 1100.34 1064.83 cv
1100.29 1064.84 1100.23 1064.85 1100.18 1064.86 cv
1091.86 1066.23 1068.56 1069.36 1040.32 1062.87 cv
1037.69 1062.26 1035.19 1061.61 1032.81 1060.93 cv
1031.87 1058.95 1030.92 1056.96 1029.96 1054.97 cv
1030.54 1055.16 1031.1 1055.33 1031.65 1055.5 cv
1047.12 1060.33 1059.59 1061.22 1067.18 1061.72 cv
1074.26 1062.18 1086.52 1062.9 1102.32 1060.31 cv
cp
.890196 .556863 0 rgb
f
1032.81 1060.93 mo
1019.37 1057.06 1009.94 1052.08 1003.03 1047.52 cv
994.723 1042.04 990.073 1037.18 987.204 1033.26 cv
985.984 1029.46 984.773 1025.67 983.558 1021.88 cv
984.451 1023.54 985.482 1025.24 986.679 1026.95 cv
987.029 1027.46 987.784 1028.52 989.023 1029.98 cv
990.819 1032.11 993.637 1035.07 997.725 1038.39 cv
998.922 1039.36 1000.23 1040.36 1001.64 1041.38 cv
1012.32 1049.04 1022.26 1052.53 1029.96 1054.97 cv
1030.92 1056.96 1031.87 1058.95 1032.81 1060.93 cv
cp
.54902 .156863 0 rgb
f
987.2 1033.25 mo
986.196 1031.87 985.409 1030.62 984.759 1029.49 cv
981.329 1023.5 979.897 1017.83 979.234 1013.95 cv
979.313 1013.32 979.391 1012.7 979.469 1012.08 cv
980.325 1014.88 981.605 1018.27 983.558 1021.88 cv
984.773 1025.67 985.984 1029.46 987.2 1033.25 cv
cp
.890196 .556863 0 rgb
f
1211.4 918.824 mo
1210.32 924.156 1208.41 931.016 1204.96 938.549 cv
1203.04 942.753 1197.83 953.278 1187.58 963.988 cv
1180.42 971.475 1173.32 976.411 1166.77 980.232 cv
1168.09 973.432 1169.43 966.673 1170.78 959.959 cv
1168.21 958.666 1165.47 957.376 1162.57 956.124 cv
1159.02 954.591 1155.61 953.269 1152.36 952.132 cv
1149.95 952.146 1146.33 952.155 1141.92 952.132 cv
1139.81 952.123 1137.94 952.109 1136.24 952.086 cv
1131.06 952.031 1127.48 951.948 1123.5 951.902 cv
1109.7 951.741 1109.42 952.242 1101.71 952.054 cv
1094.91 951.888 1083.64 951.22 1070.32 948.527 cv
1064.31 947.311 1056.87 945.474 1048.47 942.615 cv
1050.49 943.14 1052.43 943.618 1054.29 944.074 cv
1072.86 948.619 1087.6 948.619 1096.3 948.563 cv
1117.48 948.43 1133.55 944.76 1139.93 943.153 cv
1156.83 938.899 1170.67 932.789 1181.14 927.153 cv
1186.46 926.218 1192.3 924.924 1198.52 923.124 cv
1203.15 921.784 1207.45 920.325 1211.4 918.824 cv
cp
.552941 .156863 0 rgb
f
1166.77 980.232 mo
1165.52 986.674 1164.29 993.152 1163.06 999.672 cv
1160.49 1013.43 1158.03 1027.05 1155.7 1040.53 cv
1147.14 1045.95 1139.73 1048.99 1133.86 1051.36 cv
1120.83 1056.62 1109.85 1058.97 1104.48 1059.94 cv
1110.17 1039.29 1115.85 1018.64 1121.54 997.992 cv
1122.04 997.876 1122.53 997.766 1123.02 997.646 cv
1141.95 993.18 1154.67 986.734 1158.12 984.938 cv
1160.85 983.511 1163.75 981.991 1166.77 980.232 cv
cp
.737255 .109804 0 rgb
f
1029.96 1054.97 mo
1022.26 1052.53 1012.32 1049.04 1001.64 1041.38 cv
1000.23 1040.36 998.922 1039.36 997.725 1038.39 cv
998.2 1033.13 998.761 1027.76 999.415 1022.27 cv
1000.27 1015.16 1001.22 1008.26 1002.27 1001.58 cv
1007.82 1011.57 1013.35 1021.9 1018.83 1032.59 cv
1022.7 1040.14 1026.41 1047.6 1029.96 1054.97 cv
cp
.462745 .0392157 0 rgb
f
1002.27 1001.58 mo
1001.22 1008.26 1000.27 1015.16 999.415 1022.27 cv
998.761 1027.76 998.2 1033.13 997.725 1038.39 cv
993.637 1035.07 990.819 1032.11 989.023 1029.98 cv
989.916 1023.91 990.777 1017.75 991.611 1011.53 cv
992.669 1003.56 993.646 995.694 994.543 987.931 cv
997.122 992.407 999.696 996.956 1002.27 1001.58 cv
cp
.737255 .113725 0 rgb
f
1170.78 959.959 mo
1169.43 966.673 1168.09 973.432 1166.77 980.232 cv
1163.75 981.991 1160.85 983.511 1158.12 984.938 cv
1154.67 986.734 1141.95 993.18 1123.02 997.646 cv
1127.43 982.457 1131.84 967.276 1136.24 952.086 cv
1137.94 952.109 1139.81 952.123 1141.92 952.132 cv
1146.33 952.155 1149.95 952.146 1152.36 952.132 cv
1155.61 953.269 1159.02 954.591 1162.57 956.124 cv
1165.47 957.376 1168.21 958.666 1170.78 959.959 cv
cp
.796078 .368627 0 rgb
f
1133.86 1051.36 mo
1120.83 1056.62 1109.85 1058.97 1104.48 1059.94 cv
1103.76 1060.07 1103.14 1060.17 1102.63 1060.26 cv
1102.53 1060.28 1102.42 1060.29 1102.32 1060.31 cv
1101.66 1061.82 1101 1063.32 1100.34 1064.83 cv
1109.26 1063.37 1124.88 1060.6 1142.41 1051.72 cv
1141.16 1050.94 1139.92 1050.16 1138.67 1049.38 cv
1136.97 1050.1 1135.37 1050.75 1133.86 1051.36 cv
cp
f
1180.91 1018.82 mo
1172.04 1028.94 1163.57 1035.17 1159.96 1037.7 cv
1158.51 1038.71 1157.09 1039.65 1155.7 1040.53 cv
1149.33 1044.56 1143.6 1047.28 1138.67 1049.38 cv
1139.92 1050.16 1141.16 1050.94 1142.41 1051.72 cv
1146.12 1049.84 1149.91 1047.69 1153.74 1045.22 cv
1160.94 1040.57 1174.14 1031.86 1185.51 1015.44 cv
1189.08 1010.29 1191.81 1005.32 1193.92 1000.85 cv
1190.59 1006.48 1186.33 1012.63 1180.91 1018.82 cv
cp
.54902 .156863 0 rgb
f
994.889 881.685 mo
1003.18 888.362 1014.94 896.809 1030.11 904.707 cv
1052.05 916.129 1070.48 920.867 1080.88 923.47 cv
1103.77 929.203 1121.9 930.305 1128.76 930.606 cv
1140.43 931.119 1150.46 930.677 1158.23 930.031 cv
1150.43 933.287 1139.7 937.076 1126.58 939.7 cv
1116.7 941.674 1092.08 945.665 1061.77 939.815 cv
1045.76 936.726 1035.23 932.384 1028.62 929.11 cv
1023.34 926.499 1018.03 923.352 1012.62 918.98 cv
1007.59 914.919 1002.66 910.855 998.976 903.843 cv
996.405 898.95 995.394 894.435 994.947 891.469 cv
994.927 888.208 994.908 884.946 994.889 881.685 cv
cp
.894118 .247059 .00392157 rgb
f
1110.81 936.677 mo
1121.26 935.993 1128.28 934.581 1133.63 933.177 cv
1136.6 932.398 1139.23 931.578 1141.46 930.816 cv
1137.49 930.858 1133.25 930.804 1128.76 930.606 cv
1121.9 930.305 1103.77 929.203 1080.88 923.47 cv
1076.05 922.26 1069.48 920.587 1061.63 917.999 cv
1070.07 921.697 1079 925.351 1088.43 928.88 cv
1096.1 931.748 1103.56 934.331 1110.81 936.677 cv
cp
.462745 .0392157 0 rgb
f
1024.2 921.052 mo
1038.79 929.229 1051.58 931.939 1061.81 934.021 cv
1082.61 938.257 1098.66 937.364 1109.08 936.784 cv
1109.67 936.751 1110.24 936.714 1110.81 936.677 cv
1103.56 934.331 1096.1 931.748 1088.43 928.88 cv
1079 925.351 1070.07 921.697 1061.63 917.999 cv
1052.59 915.018 1041.85 910.82 1030.11 904.707 cv
1014.94 896.809 1003.18 888.362 994.889 881.685 cv
994.903 884.104 994.917 886.524 994.932 888.944 cv
996.016 892.222 997.692 896.224 1000.34 900.409 cv
1002.07 903.157 1008.02 911.98 1024.2 921.052 cv
cp
.890196 .247059 .00392157 rgb
f
1158.23 930.031 mo
1153.45 930.429 1147.81 930.748 1141.46 930.816 cv
1139.23 931.578 1136.6 932.398 1133.63 933.177 cv
1128.28 934.581 1121.26 935.993 1110.81 936.677 cv
1114.88 937.995 1118.88 939.239 1122.8 940.406 cv
1124.23 940.157 1125.49 939.916 1126.58 939.7 cv
1139.7 937.076 1150.43 933.287 1158.23 930.031 cv
cp
.552941 .160784 .00392157 rgb
f
1109.08 936.784 mo
1098.66 937.364 1082.61 938.257 1061.81 934.021 cv
1051.58 931.939 1038.79 929.229 1024.2 921.052 cv
1008.02 911.98 1002.07 903.157 1000.34 900.409 cv
997.692 896.224 996.016 892.222 994.932 888.944 cv
994.937 889.786 994.941 890.627 994.947 891.469 cv
995.394 894.435 996.405 898.95 998.976 903.843 cv
1002.66 910.855 1007.59 914.919 1012.62 918.98 cv
1018.03 923.352 1023.34 926.499 1028.62 929.11 cv
1035.23 932.384 1045.76 936.726 1061.77 939.815 cv
1088.76 945.024 1111.23 942.431 1122.8 940.406 cv
1118.88 939.239 1114.88 937.995 1110.81 936.677 cv
1110.24 936.714 1109.67 936.751 1109.08 936.784 cv
cp
.894118 .560784 .00392157 rgb
f
985.527 754.68 mo
1006.09 732.886 1064.42 671.187 1084.67 649.853 cv
1104.93 628.52 1131.87 600.356 1139.81 592.528 cv
1147.75 584.701 1163.87 585.046 1169.63 596.097 cv
1175.38 607.147 1199.21 659.062 1212.22 687.839 cv
1225.22 716.617 1255.8 782.767 1264.71 803.487 cv
1273.61 824.207 1275.14 846 1260.41 869.483 cv
1245.67 892.965 1223.01 902.076 1202.85 909.848 cv
1184.25 917.023 1146.22 922.587 1104.78 916.755 cv
1063.34 910.922 1032.95 895.114 1010.85 880.073 cv
988.75 865.032 974.937 844.312 969.565 830.806 cv
964.193 817.3 963.579 798.806 966.227 787.64 cv
968.874 776.474 977.142 763.565 985.527 754.68 cv
cp
.890196 0 0 rgb
f
1077.42 667.12 mo
1072.76 676.271 1070.8 682.602 1070.23 685.652 cv
1069.65 688.703 1071.32 692.271 1075.29 690.314 cv
1079.26 688.357 1085.71 684.041 1094.06 675.522 cv
1102.4 667.004 1095.5 680.473 1091.01 689.105 cv
1086.52 697.739 1082.37 705.566 1067.02 736.109 cv
1051.68 766.651 1038.48 795.966 1030.73 814.537 cv
1022.98 833.108 1015.66 855.917 1013.69 862.039 cv
1011.54 868.715 1009.62 874.317 1013.46 877.541 cv
1018.74 881.977 1029.42 889.742 1044.23 896.265 cv
1059.04 902.788 1067.71 904.707 1071.78 905.551 cv
1075.85 906.395 1078.84 906.548 1080.99 902.328 cv
1083.14 898.107 1088.24 884.677 1098.03 857.742 cv
1107.81 830.806 1118.4 784.647 1123.01 764.388 cv
1127.61 744.128 1136.01 704.416 1141.08 676.674 cv
1146.14 648.932 1152.13 613.651 1152.76 608.989 cv
1153.4 604.327 1152.59 603.003 1146.14 600.932 cv
1144.79 600.496 1144.88 599.838 1145.4 599.032 cv
1145.91 598.227 1147.41 595.751 1148.91 593.852 cv
1151.64 590.382 1145.98 589.397 1140.75 591.68 cv
1140.43 591.952 1140.11 592.232 1139.81 592.528 cv
1131.87 600.356 1104.93 628.52 1084.67 649.853 cv
1082.75 651.878 1080.49 654.267 1077.94 656.95 cv
1079.57 655.575 1081.62 653.846 1083.75 652.069 cv
1088.56 648.069 1082.08 657.968 1077.42 667.12 cv
cp
.929412 .772549 .772549 rgb
f
1242.38 885.445 mo
1242.91 877.08 1241.8 875.584 1235.58 851.295 cv
1229.37 827.007 1221.43 798.115 1214.17 770.949 cv
1206.92 743.783 1193.11 693.25 1186.78 670.458 cv
1180.45 647.666 1171.53 616.241 1169.68 609.622 cv
1167.84 603.003 1168.19 599.262 1165.14 595.176 cv
1162.48 591.618 1164.89 592.467 1167.45 592.936 cv
1166.63 592.006 1165.72 591.191 1164.74 590.492 cv
1160.14 590.225 1157.91 591.06 1160.42 593.91 cv
1163.18 597.056 1164.25 601.124 1165.25 608.49 cv
1166.25 615.857 1174.46 662.285 1179.68 700.809 cv
1184.9 739.332 1192.88 798.575 1195.41 830.346 cv
1197.94 862.116 1200.17 885.913 1200.71 898.184 cv
1200.86 901.714 1200.1 905.455 1199.58 907.124 cv
1195.21 909.743 1190.43 911.833 1180.45 913.973 cv
1166.4 916.985 1156.04 917.676 1135.17 918.443 cv
1130.08 918.63 1125.35 918.62 1121.11 918.5 cv
1143.36 920.142 1163.91 918.702 1180.06 915.83 cv
1195.59 912.309 1210.2 907.016 1219.89 901.56 cv
1233.24 894.04 1236.47 891.737 1242.38 885.445 cv
cp
.654902 .00392157 .00392157 rgb
f
1264.71 803.487 mo
1255.8 782.767 1225.22 716.617 1212.22 687.839 cv
1199.21 659.062 1175.38 607.147 1169.63 596.097 cv
1169.01 594.92 1168.28 593.873 1167.45 592.936 cv
1164.89 592.467 1162.48 591.618 1165.14 595.176 cv
1168.19 599.262 1167.84 603.003 1169.68 609.622 cv
1171.53 616.241 1180.45 647.666 1186.78 670.458 cv
1193.11 693.25 1206.92 743.783 1214.17 770.949 cv
1221.43 798.115 1229.37 827.007 1235.58 851.295 cv
1241.8 875.584 1242.91 877.08 1242.38 885.445 cv
1236.47 891.737 1233.24 894.04 1219.89 901.56 cv
1210.2 907.016 1195.59 912.309 1180.06 915.83 cv
1189.25 914.197 1197.01 912.103 1202.85 909.848 cv
1223.01 902.076 1245.67 892.965 1260.41 869.483 cv
1275.14 846 1273.61 824.207 1264.71 803.487 cv
cp
.305882 .00392157 .00392157 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 24.3.0
%%For: (Donets) ()
%%Title: (box_with_rockets.eps)
%%CreationDate: 12/2/2021 3:36 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bj4Nhf'e#nn*A]b+TY"C$*.ESg!cq!#RZGP"pbbH,UT4r(XH`D`pZ,nBES@Fein66a0Ni[B'*:')ftYreZ70dKDj'Wrq:I2
%O.2C_dD&!Cf>%?.p$/=7Mam00::'>IK>#9RJ#V2ZB_6U,m8gjR]31QtZbBdLW,LEDou`anX4@3_1>SsKm+O6ooBFt]AukHph;,.+
%.p4H#A%\[o?hWh8HNBbhT!-E-=jqDdhm[m`]BOe;`P^s#6X$PiN4sYdfP^EZh0QihhZ#9!f;\Si^O!H<WV[e(AN)-5r>E!b/$k5;
%qE_1Na/g9RZB+sh$Ek;M/9Y^kl)Dl2$M>bps7gN+4)>c3R0`W_W8$Q4I#][r-1U"H/^6%?j?$m<,t[LeW-f^M2#o5'RNsu)db*lm
%lMZH4/$pP$V>N"?s#^'8k\d;kY'H8^i[ft'^pmtsMb4gV@4cQO'IHCL/!?\V+$)IQ`c',Aml)bX)YM?E[li<BDL]4mQQ9HJ"G-P%
%Is>t[C33hN2uC%=RG&!t.LYXg7a#CjoR[=M]$C-(P4a%PA#8&<DY+ArgT:Pfj^uIPNq2OEmqMaH"s=bKK.M0aq^_&8Rd*:='U:'u
%m%A*urmAI4?Z@h\5$N7XN!@2bPfoEb-JgNq+m6q4$oSp6c0aZmc+t+c[>3T#jq5BujWD1Bk)TCA%/qd?C+JcI)uG90LXFi"_D/h:
%C(&4D3Oca`e)'*rH@28AOPdP%ct[Kc^E.gNDt]'@::UWfX?C@R"3l7#r9o+uo=qiDV:L4rporL:kfiL6[K$3/dAbCaHDC&2Z-dK6
%m8u:tMsI#&b?/=TQa3pFX`)iRm/(4`>.rT,]ASCOc>KE:J$iq^Fn#FS4E!10ON5`VI-]SeDiIf0F6pl[hdtZSA1-*9,rC)j4C1m_
%_j@"EiRgqm)N$?=mT8O/S$lha)"$*BbJ2[+)`piblb,rNf;e;k]3c$:<9pJ%#TW4I*?4t/Q[.af^"$k8GO(fjk!ipnHdLNHXL-`a
%_q1ONqr'6LJ(%1UH2aJF*BRKMI7#fUjb%0[EAUF;Y60KY/FV(M1`uBq^0htpr^"<(r*\dN6[#h8h_;9N[TJ-TV,id=Cil04hfGTO
%q[@u*ILONnX0"'dkF]<G55a:TmI7*]7^=-9-]PFETq+2ZN0?IHN`.k9"%VmNeS=Ghp'tHu^E1(T>OL7kJ)c1WV^lgARO\[M^"KDb
%IVX&a((>Oj<XnRmc-IqR+R$^l_B6M`"b"jVR2P$#K1jO`feSG*kpcDa5C!aFh0-gmb,00\Q^gS!q^9_M7:WA%@56(!Z4f7taA8DP
%Z\J"gQ^ig,roESk2YJ(9B7@s**.-[Xc_]Kus7,9KkM^dfj>f?df(U)LSV$>.P@lTD8#Oo*IE-mY4n,djZFA]Y?2B_K]moSmAe+\)
%KDoHF;"jnAF(f_U>*fGNZM..d_fWKuVfp0BPeDS;*9,YZR6OoIA\@(li`QQ@ISZ]WiPUl!A*u:)CaR>rB"*5'Wd8+qrm;f,I\gn/
%`IB_UJ+ER%CjZ2Ts*j<)G@@Ds]ejDO[0o+nA&GM$Iqu^lO%/;(gOpC9c"=Z^UV"=bhYtSQhYrHO4F6ZF;g:.pl:35,np@_?TA9c9
%q1Fd=d;<-WZTAJL4S`K>:N\VqUS7(c+5ZSFV5_qq>Me]Gi0NhS>)a?cs(qVp-;R_0EUe'6,$^WND\hUWQPOMblMD75S+ELr9"as;
%F81K7F3ZmCM`3k1*o@TKcC)a4`1*ARRoA=k3Rdb,]_NH*Im^k/B,5-<2a:k+Vo>.sk&F#+q&+65/`*!RKi@!Uc^;Q%ilsKi3)dKc
%.5Nt9hOHNa;rZ'JR)9g$brKi)/`-Di3Lgk'cC;^#n`FK.i=,8=S2m)TDgo\G^*VX+1Qh^;G]VP`r&s&aAOld4`LG'>_VZNn>^#bS
%=hORUC&B"2c$)qAD\6n?%?l9sG]RRar;#?sAV^7(`1-5Jo"RW+\b*')%H:)c3W>JNjI)2rroX@,R=cJO/3bu6=!Gdi,CLjFr6TCi
%9-S#.2rOL]BV7^9j/`iYs"q`tjXkgD3m^3g?h[U@DiSuhe,@WY?\p@INHA&nq6A>-"HtW33g<$]BTsahj/bNVAW7cMj.pX6ei5%Q
%M'!]&8:3C<TL4"`LIO9N+Ik=3O[S\KUE#*jB9%#RoDd/ca-ce27QKJnIqY'k<d4LHUDT9k!F2ka!2UPWfKZURn+GEH=m4WE5L=j.
%2[<clAoDUhE^n5M^"[JZ8M'nplSgG8_=G<MQ2,j=;;punD4d?O-$mcgXo0$F?u9XB9%O!_P-l^F/Ll^OK,4=nX8Li0c]\$4QZ3I<
%?1P-aX3F@#K&qH0Y;>rs)98E%rGJCEVrM!`[p#>Ka2:Qg5p#o##CTp>kYd1am#C!L)O6"g\(goUO;ITdmU<"t#Mj9-o+5BW*;+nY
%V[#rJk4U`p].6WM>f)WNHUMVWhI5pcBK\plW:/?ID7:=l`FB__=?5!rD:8DIf[r4EkK0u$XdfqdR4"m'2_=?#5'b`<>;P>!]Mdhm
%)sBNc7,I\3k>/k^^YpHns0L8>rVKrc:\NPXn*=3>VTn7/l&>RLX>9S[14-q8GR!uJ;c$WXYN)e;YNrR.YeOpu;WP@Vf!;poMaSWg
%CW"CT#a7(u++-5j,6O"lf73AYZ$lIbD84h+<#-tP4p7.qJ(p%X@Z@[-POVD3\,Q?0b,!:I%pG?;`j')\]K]'^<hnPjpk:9$J'Z?R
%G&l1e]`*iFqqCpqBuBq>5+9gVW8Deq:[Ou+%d3JYI@'sF0#GF(kQqNuqEKUUHeI#Qh\r2YoY<b@[b`sA\@ORYBE35Ng(^;hn,?HJ
%]O#jZXM*<^`m;+DUOVX<p8u5#^#(ceDmZ2s#$b?pWG]3E?[^0p)Wb)9NLaZsZeO+cHUX4AH/#@:TD>Pf-bd"bH$!T3\+X%>gUh#5
%FP0,;=mnc9hs.=r_p82,qaSVS]A7&5E]1Up?iS/be\3l@([k8&]s6>E][ShK]&*3P/9&;%fV%^hM_pf(DY0Q824%G/na8UT."6PB
%_Xf_JEa-qmYI>F:\f$hpl2U("!)hG\2uYb1Kn%#j^CU"nr9a'UV!iLnqVMXS2g][l/nh3>_okF4J)fB6/FT2gTDr1u\[V8/5G,Ug
%'<Xp1e_KrWK>qamVG1G\B>*Wu^>\jbNNKo*H+_Y[T75uGJ^,"'3r,LI5B"BQU[G\B.a+F`F-a8`BQ!9D$BZBQrF[Z6\Su84?><Ji
%rm+`o+.#@#ru_M4QuTZbd+r@`Ktop*K.t19O-msoUL2n8f'4VVVYK,l$u_I.O\5`.Z/04fh'&dY('dP6r#-u5mZ7@DqRusISELq$
%W6s+BQrUSBA:1.VWUKSNQ$TK6n"%i\37b?_cu1f9)jOaEgYP*)!2ld`aW%M?BK`BiBA4B6X,ZQFCem9fI<uJ$5&G5f>6q8WH6;U\
%!i*i`Q^i04nONU`1Hp20YMS"c42ol\B05e2bp,LH*IF@NWI\mo#CDVu0XT5FFU.AfJuE[qe#XQABPP7:FjP&.?IX>14jC_[B<3J^
%$t,mZm'Xr*;->7P<J^c>+@Jf^b4e]V(R9<U^YZ,;2_,h>_%B\YLJ!RX:#km#>siu3+Xg^mg?ie<nD]Br8M.(Ka+/V_CAu%8X#3]i
%^+p6G=%L+'e\+3GlH@KGq"PYK52(YQ=LUJ3,FuChJ;le\IEg#/n'"]Y.c-iJC[N4M9#$P4D:5ZurPki)m^G,uZ/om#S,t'h9mrA>
%NF&B<5DT?GdMUKcS#p:PE&YWbG4FNB#$X8ihuBh8><Z4epl0(;)8*]^>GKq=%=AaGfP!-([R>f&5AY,EEV2;;Un#J^-b9BLM;Pt^
%EP:5/mr(%sFXQQk*9s*^VocJ63pggW90^tmR=+e*0j+5`]P4,NQ.&@R;0d+?]QUMd3Mlj>7%PCQ6DM#2GRM3'`DK6lZQ<42k]cC7
%/q.?8(T6Eh[(a;'5h;!mG3AAID_]69k4$VO[\bhUXPH,:HQ4BSd3-ia+A:Pa<jU>T*'=/Al/pne;p-ugo.HTAGAYJPFL>;Sc5dTl
%O/LU0DslJAB."K;'t576YBKA.05iEN5E0SEX&cj56$4Guo]#kp`V]V.q-`1[?Z,DY_9R[qLJL!]rUj7"3qd9r>.oB%W*13i4CkX<
%l-m2^^Q/;u@B.`Rmdp8$5$[@CF_*'&YhcSq=.e5S6giq*rPh2hUQHQXV"\5EpbHG'Y$KN.\PF19O84)p?`.CXlQ0CLIHQm))`RT(
%Ts%D_H/,Y8UI2]lp68eX]Od_TmdPA<L3\$G2KcpO>c63#MhbAXT>gNg`\S[.Rq_Rs-Ma[@VR*ZH'0Z4H&aIsQ1QCf=^:r[o`8%9&
%?Ujif\%dfB3nda*lDn8d@<9W?]qZ&JB!snYq($f]F`uou=+[+N[q?5KC@Tc"fAl,;M5@2:0>4Csk,,=P[bmi%k16`kHoJZ[mEsJ;
%-O903m@*`)[b'gJ`i"Ql443DB]F`=oH$;(>oI>7Yf3]bn/)C)*p:.Z(X\?BQ)pMA1VC-T]mZ%h'`#e)k3bXQCj]6Y[f6?-K`acbi
%l.YP6&$aaHCMMpMCO^.n^%UN^[I6!YSVM*'7#PjSbP[9n$0MAYl0$7a>l=S(/UTPVk3\)+(Rt.gVWT:]'?t3t[f,=Jq!?hm4*)Y6
%f@M*>^X#)<n(uj4EW=4Ok4CBa3dU0;nA^rYD8GAUm['odp@c=TgCNE_Zg>fRX-r+@7lSKO(7p9T^YISba60$XGa?<M%Q==_CNB1>
%PNqr!IQ&p(C&d_JWT>)npLfrLRi(5W^%Z_dZ]3hTI.$CQKB`7lT7,ReI'PW$jEp@4QXA!MiRWDFdGir-E8t?kad_6@43u75dhB^l
%GI-n1o@N>Oe#iMLGe0/H?-i,ahGubhh3\_nGDcu:PbI9$D="1fWTActcM7$:[.SAflqWMsT=MBojX+_0ZWe+3j4W[NKtC\6CjDb)
%$(1am%Zc;We`"W0^$<u,UX.KUltU"FgRY<Emlg(pe"Q?J`iae.WfB5hrM=i=AoV+lmSDHGPdbl/"5ehTN4*$]=110;)Sb/KgNNKO
%!K^AQW^A!QDH;O2bW`(6M8n/J=*)!m,BjpFP?#;>1O*"B^"7R3*Lg8N=0Fj!<ND-E+.B@hGkLT,FlNATkA"j^@]VW$h7QYqp6M:O
%_d;2u`l%a*ebJ'6<_Z)%5H\TWL-J`1E33>epD;h(nK<*V^%nu1Z$L1Qp@RX@Ok%*jp[7(\lFg8C[]B/s_t!$ac0M^dR<QPae[^h1
%Q0O!u0DDN.Y'/Z'k8-4teL)"8;q7f=X)$6upVt7R9-`,;p%eG`Zar96OAoQkY?t=;*IJp.^2DhqX1hlOZbnKc?bagc+.p%!=$Ng_
%2lc2I?7]/:?[&YP[l3\=XmWR^rT`fAn>NpBo?EV:Ha3:KqIO109=96oH8JTlY9+/^GGZ127](r2L.6An^Dn/a\JGZKoWEW]$5Vp9
%L>m/\c\<<05MpiNjITWr*P-B7s8C=#C\?FLpUb@X%*e.O=<;eXnOYJms'`W!o^r*W`M(8qKk0C9lhUP,bPnQ-Tf7P9kl"IrBP;7n
%\i-q0B1$UnRZE2l0C8pi_jq<*SL$5@0`>c?Zf.V>mZlanjPJ2O=EAn5G[`[[1`XMRgi,:eNt4<^P)!t*]!XDCs2F01_m@Z10+L3M
%%NZ$C?/<1M]_)2K1;*2RcG]4AiN[19+,\@jE.+_B*H#[HmgXc,Sp[tTLA,'!ljWVXVREZ:/`,6nEp^ljp6G0/%sP/Z\"7u]P#brX
%>q+X6ICXCm8Z-lGAi@;Fj\\,tEFiR+28/S?7dnWfe_89'=5H`e>.RVH3W/<ff#!WA/%_F"#?NtbLUF25>6f@gR&_I8T09kKIW4]Q
%eaQ^is(^,W)S^UqfuW!Me%sW+eV?64GHNP\\MJDO3Nq8RqIZ]+qWc,Pm['uDT:=NacYK/=Y'.63p-u'Oojm.;mcO,'g;mT5,ftgZ
%NSIbGhi6E0:6!s],7h+^:IZ++n*Z7<N81p!o(MmsooXRI9LcH0l+<)Vg""ft_8P!k[?9>2`3kHAjQgU'Wt2UR\";K'Ir5$R41R8a
%\@d*(l2BFbf2eB9SSK;XFr%5tAT,Slm6."I]@PlQIh-@?mI$P1BPjep4dm,=c-\VF?%6ta_6)=a$\flr=8%tN7c1taDiAQtmQ;M,
%9aB?bJ,7:6fX9t``n9@rpsN:Do]b2:HQRUBZ%l[uHXf^Vh9E4VO(VM65..Fe`gV*Q(hW,-bGEgoc@-YG?5n/KHp.?\qrR[f8'12l
%8+Dkap#dReqXlf7`lIE2Xnqq\]?LlTY4p[dn&EDf[Qf^@Y.Z`Bld=)Uq!=ndC])kFg",r`_X$W7IAh@4r:>N@NVA37OQPrMkh>Ou
%NTe4VZQ$A$g@&q'oc>r./8k*7DnPnM']7R<'[PUf>Mi_W(tr?MSX?p5GC1UL3AEBGp$Ble`08bQHfA'%5+_QAIW](.\+X9DiaDY#
%:`H$U[nt7;em#QZ3us'T4aAor>'or7p6Ah[aid2^f&Q_[jNur^p>j/M([I9&F#]_\3I(19Eq*a+Sp^G+n]+3'a)pmqd`;#gFEHek
%&AK4A%IU(c#JoI"dW"\jHZh8KIibN(^'u&gSKE8p_h@!TZ,uL\o%6\s?OmphQgHmBf>F#"\Gp7,<HRn,F"3(8>T8al[c^iAPF7JM
%U=\"4&#7ChEZTXS3d`M#RpFm3ZXiE$4Hk5?))(+#O5gbiQ2C+7VqWgA>$WBe?8C3+),K\Uc:=&<DoRQqf@R4uPK'(B]qcHOl)!FP
%fDB9eRLc5*B4e<D0..RVdZ'+N+T6?@HCeEW5(,)*iMT3!KB^M>CurY,>.39+D.R(32^A.kpIUYeA"+"%E">/sH(D^])sudWh=gNS
%[gB<B=Bp!X+$Jo!-Ss5.H[GM<1Y7"ps)Tp-GX![P`fm6.HK8)(GWrTX]D0mc@Q33#^2`ajo?Hlr2]iH.%=R&ZGk4X>VfT2TEbEsX
%\TR"*X*lLdH2-=Km-M.:Xd.QM:N(*Q5/)3@?Op1U#G]3$mJA]3S%"`-2Wer0h>=J3?aeg?\he?pc-2`jf/Lb<4KIpegf\uHjiO(=
%j#"Jsj5H3ih)ht/+7;=>EddrTg=lcri,5IG)7_[\0sc5qm^)>:H]+Gm9D@]^DTpu'G3['Fai0%!pS[TWgAU-\X4@*:Hb5iJlGjFI
%;fVbAF)#Uac1]ZPp?L5YkA0a]l"dbP5>N*A&,)lmFFrrQa6AAse",pH\.(5mHZhQDR>RTmSQYCT+4"c*5C>>8jn6IPCqf\G2u@j)
%<h'&l\hc4uq6[@g2`Yof3B-?.O3P@c?_*X$?Jg,$i7dJZhLf$r42lhbNSTp3eee4sLXhl(G93Upmc24\Z"FL:nAEe9Knj$Ta1@=`
%ilTE>fqn-)UXqSKG9?3XDf*hX=F"q2IVN]coDHdU)`.)XMhg-/@gCDfa*/K?j,]O.G!8%FH.BG%A9@?In&_-0+(%/cH)<:Vg$CpD
%FknuPn#Ss&2a(H\2Keu_cDu/](WO>WX+e11l'[6jQd'4&oCT0MZgiEikLifmp[6^L3rJ?thX1'DMm\6D[h`U@#1;GBTn=;B?flO8
%/O_boiMH?smgk`8qB,U\Wunb[T">6pU$%?QkZ&Saq:9dKp0r,a.<ohcrg^`JjX0H0fR*>_na^4#jQ5sMaVX9d*uDsY/(L?fj"#$/
%hX-T)S"kllg\n8IQe+0&%DSE^pZ1J[\'+N<^[/,Yg3o68]G&"_fX\W`C27AJoBP!#120!TVma'@Y.f$[LK;#kGNW:FO$7r?]f83%
%lh0u>_T&)8:KR*GZQEMV^\R@OEc8#Ok18:V4&>=Y?+Fs]rH<*sm-2-$X*=NuPBcub]?QE&GMeJ;fr2WW\_;H.rr%0+mYC(_g5$40
%iRY?)lQ9Fs?[hjF^!b%f-M;3Mj'q]Kf#MBOrT.5Mjib3Bq9^m'gN^Cfrb3pO5PR(A+7=USpo_A/^G<S'^4,PMX4@($qb,-*KDDA,
%laL1O/ZleAI'p?<]tXJT_`d>#Z=,YWHf;Srp65=KAp.\]oB,Y(TY%c/lJ5PeGoWW>V)rUn)m,N40=Kk1?T,>.='m%cm;Ca@\)Sm.
%hd0P/=khg#[AuCZoDMlT99X_+G$;N6DDQQ&G,tH:jir"orF\o79L!/_)tT\ghiI5SmVL5,fe#ZsS%Gk9Vt/[#k>&^5Hg\F[]f??;
%HUG"2mdAoG]tCiK0m`>6s4V.+D1CtWpjR^&1:YfIOk9Hsa,f61p<NNjgRT`p*:>@0YC5]Ca/b8<QnRmVh=SnUI!qqtNGFOArS!$.
%h6lSE_qs%rXlBAmH`/8Q9<t+Rb4h]@@sPiG=l$>iQT+33,7W>bmp@S;l$lme&I$3EC];^pfje6G6Z(lJd:U#`hiC5gp86sJDiKI'
%<km=%25X!r;"'mW=_RhIDcuB`[ZujEU4/YZJ*0cYmFB^6AHiUg9W=_2n[4,6QnB3r,YHuDPe]eI(k&m?fPDVq*E-^#(d"F.d4j`t
%=>&$-%(%7C7s:.h1aPf$&(VfOHi;L73XK91dMJM*Rs!HS4ZT]Qq!ODbF)Rc/h>LMeF]Ml(\]].rrnZgbpG.0=F,SNAf;b[RqG+L<
%ND6e[QgXe2R"=eehCJ!=V>F$2qL",5nWRkYn"/DqTs*90Fhbk1(C(;ioD;#L?1->=2sn>MIiOT+LjGt?3.]JB*<YC18TjnlNQPk$
%d(3;U%^,`De(CkrlJ03JID7PpC)r7YK,D>>m;>AVWSZ[U1:uW6K0t'*Xn&cq(Ydh1s4iGIs4KT7FB\BOHbX#KOC'gRs3g:\F2-/Y
%pWmR;EmPa?)u/n+qmN&\I[_-j1b-ba4]87\>'9l#T4j^2`NA9W='YH<BX\;on'<n<c0bJ)QhccenI.5aCtA!UUBrf)Q%T$@]Zt<5
%YesUjCiA1o2ESsdUSI:<c+e;C<W0#NCp[DX9]7]7F(A?4$Wn1uqsBB6DL8QAC\.-M=Jo-*k<Y22nm]1.8p1uoi(IqA\3DVIXTQ!0
%Z";5V':l+H]EZ,rBM-IsZeok--$jS4I^G;&@5Bn34rAsq)r-4@?=KaB9O_LCk?r4V^YWf"/qp\B@3-H6PNMif$:lg<[-&EC'RaIA
%c[&c_\#7g3^CBlk]BIoKZ*==j:\d'nH[\dUFq@MsiK0k$5AA16p.9AlJ,T\"HLe?0gsVAsJ(K_OkkB#Z=&47jIe)]HD!+q\jOb`A
%F#TA>ce4ZVDX>c\BCF-VbQV(Wd=lLA3V$G]C7O7ll2,u]>!;;FPb%QeimsFC`!81lj1BbYGB]*&.GsmX$+Ajj*e!Q#ch<1`$-snB
%b6R>qf\Z)3J6H:=!(s,5jd:&`Ea88t0=0P!L]'++4);g%[8.,WSGe&_=@BoDEPBmur709ZHDb"W`3UIa^+n7Dc6ASumSb(\p3OF@
%b?/#$W@/X@q>Cb4$>_dV_bEP>W6"sVhNQsIcPbbS/;K8T`%r48CP/OF6/;:^I"Pf&Nb<3S0M$s1p0H"gDq__GX_+>TWMdr'^->DJ
%`RljCT$861S>R?-_QYf)Zs6c3g0<Q=%gg:S3a=48q_t,p<M/mld6(%:?2bc%O%K0>4%md.O8HHR[uWX:O;PL:m@GdqS9h#=?odf#
%d?Vi&YIDUuOi]BBI/3upH?q=/kUhh0>/O_@bpVYbr+u\I9BmodgO$Oi]Ch_9_+_O+\(CN%Id<6Eaf1<d#f,i0X]kIpm!eZd4^pf4
%*o.&5E=FRI@J<m"lNR3<qO:1&Afc0F^;Sb%a#+=`fN+*hqY<_tFmKr$e\"/"ZI.L0[Cb2$hp-KbI;CL+STab2$bH!h3j"B+0/MP3
%3G@*\Bk+o%hC6pQImWokS(.>%eQ\$ec8ff!.'2Z2[u\?lFC*#\d`_F@=)LW3:d;kTl1CQ(WEj[EcVCBBP=OJTSQak'?@29+Ld#'4
%]slkbn(#_d3aR#do@Bn?G!Y:#&`>i:TY5Db+L=&im!C't.S/D`^W?(]?(g6,rp7#2a'NjNerM90ij1]=Cq/@@Xio&Y,/gjrhlgn*
%3o-q30nOW^eGaXenW/dP=e[=J'WjEg41/Y'b6dU,5(4Zq?n<nX>*Pptcd@d63#4Vt;!V%0&^NNslfA_%fuYOKc+1]>CY0;?,\LUo
%ld\Dgr!KgV#+<Ip%[NS#i\pu><kWPoWLi#;4Nq@!Z/=3:@un/#[!F'QS]@&jqQ7R\GJ*j#md6fsfl-lnDftK+4.@&$['L)&[#Vim
%6lM(YlScL@KSP_ca\\ALM",(grQiW&f=&!^NH'K(A+Kc;MWfH'=[+O,EtRC>*p?oO./W0H*]CaH>N[-J$a5/3g"3b*,)53RCX[nU
%oTbg%gI,PT2XmnfpNI+`ngs?I?%L)gbo=^[\$>\jJ6\*-?9Fa\bg4OE@?G+7;(_\]XRZ(*52[Ai*5d8=^Snctm@?XIkObhDn$e?0
%lL_fkf0C,?S]:a*Sd5-3(\KeFcd(855<=O"3mt20^11Wt+Zt4/R`=3hJ&82_XAR]Bc%Cq#Cn.D+;NG/E]H-A6rOZJ3XI%anY<%,"
%O$qkGWf`mR7=gX.2e6=k>#+s0"Xi[PBA7=*>ISsVRd-uWgS_W3ULVER?(fn3lKFL'(N_O6iVZPM?e%rpgYYCDLJ$D2(gG>6T!e!E
%OP0Ja9%K17fD7qEhNP--kVWR!ggdVRAbZT>KrMnPQ",q\s,$Zu2F'%`rUV`Xr<DdO-<4kh,VsN]W7DkZ7X.5NhJTZ0d_`QWm3=?]
%e[f^kLpP.bGgQob?TF=?h!2rIFhA)3h[#?+WA[p?I4:c=Hi8N-b5CVr><%FhnN)qjh>/I]?)>9M=_`o1#0^SeAan2J7\pG<:FW%&
%4N6sOI(t"^s4AVe]6+>9*QpkE<=19L!hZIn/G63mCDItlZCD_r0QNF,:$kSGldPNVs(bTI.n68*mctM<oZg'9n8a!//qrc-B"e-d
%#?5hpH$Cl6FH+4Ob/!`IpOE5/J9ah2c:RDHkr`gs3dFWVZ]FtPe:.bHO27eKqRH4#<?4f"l.(A:Mj(5O+-N^%*U+\dKbEMcB,[XM
%EQ/6LO<eft%YMEWk/NSH=iLl60WHF=&6I:2X+b8M<T:Zi'lajedaYj>Fp^-trFEs3-;c@9Bi<XZpV6'_>*4L3@$K2HSE6"a95B(d
%X]oI[8iabeW+DCqPSA*hF=sZ=fTO^VQ:ER0,RG"8;PMCcEgLF(,UdCn'NH=nf!6Jm.^?>5V3(t@MSs+AYE./6(<&^IM1_m1KJqjM
%[#$,`4uenIrWQ^GC8+j1/+S:Lk0,.XmB&Z+A":o^Ri?PmgP6nEmBH2`QGoi`_'B;%6'1/m0M/C]M^qAde3]XD(^7=cri%/?<(i.b
%!&dA_[Zm9c-It=5@d@Y'&E]+W/!"JkhI8&so83sXdoqn>eG6O1n891!9d<kkaFHQ.c#%6u+V!fng\2t4'M!@jE\=>EWT178a0I\e
%39*VE7i2t!?Buoq^RE5eb.;4S=GuOuD8gKHB1hl&cCABk8*KN4.r74kB\SX&3+9X`\u_(L!We_9%PT+bTWKl.i`_T"reH2%e)k5T
%;?IKA\]g\Y*H3SY,$JdrFUi\5Mm4/P?Gm&XPs!?-@2(J6B*TC=f&A[V9FES8gs7_bCIr'p(trS4H"cZTj0S?dH&&gX5X-ol9r,WL
%Q<WS^Otp[BmG2qW_MY[j:K(J-RbN2uMO[D]?>7b_nGZZgfp$;q#4YPB&#6YofQ]K38sJ'GkOofUgGCT\1RPPOE!Gm5iGO26;M2Hq
%DM:eC1/OqRm!M+(qkPoBaT^BV8f.\I=(:b2J\"/_i,)-S:&o`oF4Oej(mqPLU6<`7H3R0R5q3Qj!8k3c[`p^fD6s0R"KEC_f_(-h
%j^DuP(PfR`@@STd$1+V-gdXnPUl]A&^H98ZRcO1n`$SX>&e$p+GKu=`PJT67!6d'Wh:&ah.-t*kGe;ohE6&2:Uh%QdTIJ$n$AM)f
%J#npg"DjaeT`W<[=DM<Z7g47(f`\TW9m.:'UBl!qTj?&Ll3s\%g\l`iC1H#3Z\9?EZ3PE=*&(caMc8AU!]t\W:nE4i\0BtM5uCO4
%UWfCdmWrL:$Ns;7Ha0,V@Yc;R;U(TK0THQ)"U6],aJ0Y<GLg<*brHi6E\L!mGMKDmm[po)b&-GXIP"G_)bA*\AL)Gqo>8DRJSAe%
%Q6ZX7nMAI-$?k2/-Q,K7du9KJ5mR+bXX;@<mS:TDgY?TSL>u/plI\qF_nr^5/%B[*VGV)YOr?10fl>%A@i1"/o)q@VRr$]AX-=uH
%[C[K$K)mQN>A>rdCpRe1<+NUL0^JXH!I)RM&<+I?lqs@[:`cq`G=fgP_7,7u-uFl>&q?p3S[3C[%#O8\)FW5#O)7LDH0s8"8?#8K
%lj[A@_M69ZpeO0n#-i?3#(GJZee_n#,h1p"TK1,8]<g9=g\\pNUS\GP2P;km@5K/1g?kPL<e_n05)g'*f#OMC[VN5Q"u/5So/9i]
%'?KQ;*P9M60bdFimH%.n,@iOY%Et1Wc-gZi*L2bW$JSB:Rtcn+KZ;SPPft#G'n`E*>Bk%tS#<Nh=/db]U6u`#]-;#.35kMS1PBP1
%f,BSXKf4'3_GGsS95M\`0Q^MR,\cT,3U:Q!d9>mC)g/Rn]%bf?d3[l,hATY;p2WNgG(Kp'^hdE1_G1s=D/au^F-ntC?TE-HT3?NI
%2SZouA85gmC2N+pMcXsIq6'n^S;e`q=/D@F%--loBOB$iB/D+a*Neiom)\E%n22Xo^Ao.)/-0QtN(jZ@![*1BNU#/BN7Wos=[p:P
%gKXpbOU+RBJad-"R:0mc8C4Y*DgTBu1^[qFe6k-b+:Z=5,fV1a6%X&AT-`_\fF*:9*!-9"n,fuSSr.4`b;o!sJHdK59m3gV/2D*f
%NJe,7$fXh4GIpg,LB3240V<1hb_;2#Ea7X[6mRs5I%Y+>%M&VO7iWf4TZHVT&Ij(&'Q*1J9m4pA,k]J1G4g8R]/ajCWM:t#L_2P,
%h2,d&>$=fL"qd7\@VO.XR3+?g8AiLKdZ@a4^()D&)^*fC-jJ_c6//_RA4+\2Si,d?^LMI71HIdZh5$-J?1JHdYd&-UXgtbSqBfFU
%28RH^^*sLS9#qDo]5[6jB?O/Kj>^c?;J9tS<fOZ`M34.#J6dd#)>`qDAbatu&qn/_/IRP5)LAZ8";IfV:=u#nTaVog'1>HJCOj5Q
%;lda+%:\(e@o6/+s2CM&PjJUWj]V$I:kLTu(RpCi8D&m>=<PWeXN<1s4!5c$0f"r]`/!rc?/[bs4srf]1RhL#T:p1P\OG^:4mZe%
%CCS^F(X`TO<NS`>%*9_*)![-S#fca.LCB:^=uDhdqZ1rm%7b`U2+nMtCqE'Hg0>V-B'hro*FM<h`^F'Jd0?&T*dBSaTKPjI3@uro
%T/@IqMfjsj-B_1Q9<0Wso;sJ&cbL5]Q2;mq&&,#nU)>X'rJ`t,Bg>pDYd>=d;@(r:nOG=H>ER?Ecp1'MnP`lU#r$TBppX<!7jFk]
%dAXU9/<6-U:$P\Vq(-;lb2e.'!jKCU<#DP_i#FN^Rt`Z8)R:t(@JWJ';qg'''sa5p%NNui(:u+(1H*[Nq7X*jZ&NjS[3c^BBttr3
%NBrHG%*/i-YjHUE.Elu?1(/YtfJ&X^1eblUJt1S45RT<Q2\]RHJtOI$W*geR$Y34C!2KQOnYZX3-BfADAZd.mPL#2b(hGT.BK-+,
%)oJc?U;'07N,c.m@')\Kc,0Z$`4"#OfbkY.c/C^RHJ,:[??@l0-ce[W'"65-S2"rdMn[.GNpL0J0o4@j2onh07MUS"6GYA=`go]f
%0Ti7%aOo1ja:6T4aNfMROa'<LD'dOL)?KYa+cQ(LS.@[".N5O,[X)F(J3rCf"l`F#!)7)KJfV'gL-ni[7>s)l#J3m<EPe2gb'#3=
%qjRgqs4Ha`j9;W<CBNGOm/=91,G_o<`g&g^oW7#"_`H^Nj7!MmUcLkfFLC26Mm+qU`?`1>QnL,BKc+C=re1q$.hBILOn29r0U2m[
%+;/5P^*;L>>([g4GVk0+ce'Qi;Ig0(,2h$q*CQiY8;q.,+I2N?`CQTOWWRr66:aTp8l,bc6)#fa?jpFWN3FW-=dCC&Br%CM;VeMb
%fauSb&g[3Q/nL5\&lW(&IftEA!eee/Z6L!qE2!^E=JEkm02KOhS7ogoA/QX=RsrBTOSZK=7]-\$D+eS8+GJBW<#^Ke/iV-CE`YNc
%-;)tQ:INsqP?aiQZ=Pb%]?>@^r;ddRO1c#(\6s0D7Y9t>_@T-UJN-d<YCVVV/^6FLV<,rU.V@arlP%;mhFKA[B%XGaMlfF`5c1CU
%%<HCWVBd;%HS?uVnp-Hk!Wo</_<k^-,%E#LN;<"B_HMrb%"2o'kAD:`&;`HRNHY&;'+@2l'g(P7Nh*q5+;=E(p+.tj,L?.MCRZQV
%(i_@C$7UjHd;jnsF7q=V$>.H_Y""GQ*3sd3e-;W12=g=HL?rB<QcRFf*$L("gb^o'\gsn:mt\-.:.5L$Zs<Ui'ke!QgX'?\O@B`h
%j(T9P4#gtf3uuA?PIM[RQ?iF`(tZj4+[J_B6IKVRNK0"J3CLPWe)I`d[!WR*$ZVUu8l.c6W'C?8#$dSgbhHCEa[usr:0c+sg5uG(
%kXD#qn'7#M0uYS9[Tt$HZ7.ld`3Z,B>j$$e@*GWnbd^H1fZ`c"OROf;[C(:!ZE*?4jj$K[PSRX\"5X+LS?R\YTu7]f<XQ$!Tueo_
%&dVL-DCeUP-0V4(W47CRV#WDp<(b.Cg&[G!)B]5t19B#<Cm21%AN0tX_5%,H+%_/]=X9Cme-,u_'aW4"-'[2D^88'AAccDnXT4sC
%\/aN/MiscU-HKt%"'FSH&"14`B;()X=C,HSC4QeU6J)lOltr.4Qec^lj\St0*qO2F5V*S$;?M\N9aTJ!RNepVd'uR/*:+L^1b&X1
%/bd?2n3WA)4((!-nn_aY2JT/4q1m$L!Ql=h1j-Z3B_1S:</LhK*AC,'X73XS(gj(!)Ip8iqS@W=7C>htO`:_a?4i)7%2h(q_hObQ
%L.JSDPAG:@i@p:qU_1@E7tX0]!JD(^.EJ]sh2j<-TbmhLs0R6ZOH;))UsY]%Pno?uh1-d+&kV,"2,)m@AR/3RYW!@bjrpH1Rh:IJ
%-&(O;m9Zb$V1As5"u!757sgdL)FinT;PESo?ro%(Or7AMSuAb>2+so.#j9`SJ\dEG7opof/hqOG!!"e5FP@)]g2h&8lR(_uJQN0c
%c5r^I$R!>9$3X<["ftu4$]=)d:o,1Z%e3)dK<q[24E"99@,Ys6QPH)F7<+16K4l^XT80(j5g0Gb.YGd"^%*U;!),d@Uc1Y##XBn<
%J`h"P.E";u$D@&IEC=&7;(=qCXr@YM5iF?g]%tg<h*D>G1*fFiiCsh0E'"bP?E"gZoB;:O<^g,H!<h+aE?&5;%b"15D0-MlfeUK1
%WKV-oEs]S##h^9'cXLE.h%$:fe/<:l`<n>j']laBcJXV2+)lRmjf)>9(?-rD5"/-m6Agp/-6>8?<*?l2nS"?J[O_X\,D6h@'!uBX
%d;Z'Gp/'g366c."2lni5,WoV8k>5oK(go+5EDrZBZuaf!^fLLPp'ILXIiP#%.e(^0rj.5S-?6-VctCD!$\UDe'p;9SC=hL#.#\uF
%>-R&n7Zn^\YY9rR0?L%cYZi^`+3"cb>!6`)&Z2<7m>esD;%+ZkQD/?^h\\XR,N0=N18WhjM@b$C-#e<.@SnD9Sa[Lu$a%(L8a&\8
%/!*cE?Hu$GAdP\T5=<[8`MQaWpmiVU^0u*ce\hJ.F/c`0.Tfk9p`qgS>_G.6l5eCG+\Dk+;]LJP,$[t0_GQ8iJ_#`!OF(CI6!f]Y
%*+pBcbo!uJ$2&(cI-.=JUXDd]=i;LJ9J;-A*f.I,)]Q@V`E@H=gE8!rT8*23V%=:'U_tQg-+W0ZTj"\fS+62eZ`B^Egr)#q!JaeK
%>i?u01`hfZ&U-kK'u<HE_pG9SaE$PcL-u*,EpYa.!kj#tI@#VLU\D'0CNh_\]poY1K>HO'q)pGd.AUfPA6(rp6m^h\H*eD@3B5]G
%?Jf8Z]0oW]!RntcTEHf!/ga";;5DM/!^Z%4,F3p(.kM&3-O!U("6UIu'*5qrfF2&]O9G<qn9s^b*]MH0@suV,[>#Os!bh\OgU9TA
%g=ufSr!Y7[Kqp+Gj.Nc0GXH)^^F.MYR?@Vk!esQN&.fTlP=;uEGg=0DC$Oo<;Ggh@LJ1Gi>hQi'\X-(YTOL,CO)9E0&C+?<rXcjL
%`-(hVG.JTl"\)ptnjngo;WG,`3[BK8+2]Wadu00$;FHY(`nnuS@Q'*!:TuedOH"li9=!">KA'2N[ZPeNC#]a],,$jsq]HNZ\#i/-
%_[/bF=tr=q#s!8$_CJ3!o_U\W(laN>Y'IQMiLjGE$,`QAU@U7ln%eOLjH22#O9Kqt-Z^;EGZ'c<2,m+E8&GlRZMVLRBY+=MYKJ39
%fo.`'=Wh9N1jBuH0U1f4a[M(TFSSH[7RujgVLeLFA1/!]O@dnuJsQLr<3:>)C*48L_sU.>/[2oF[O+O-8B1K`0Z4RDH"k2_jdrcR
%!8C3pIN:^-7'+=q=UL2Q@RG$W+Oao]mrTn:$?B^fg%^-.'Nu-e7^,`uOlftFEj3'X>:+Xjj$gg?4DKg,.tC%7,2-4n!gQ*7-Bf5'
%D$$mrec7EJfd<$94FcA/$Ao;=;4&2EK#NUk6T^45"@nlG&d/G79K#R^0:)iF_DtcqA9SKfpnH](j74+_1c!QWKN]eYN8"I.5=;ui
%A@<pUIEr=l_7%0JGsnS6iMdgTjZId-)sq$<Ng:]YOD,mmoRVRs#e_Bc/:7g#FX]4\cZ?!$HE;tPQ.&'_6J7J8%8Al?5[8c*DVI:/
%!?q2@#8u`($$K2Rjf%TMK&PTpYf"=-=RTX@ng$lA'Om:Ii>3pgQ*T/1^`M[+WFE'BodDZ7\=[Fc!&n@?d-Y7*E1T9"?sl?)cn_s=
%6<;am_&^tV7X<)qbCGosXVMW[nYIW@K/j#rCnBbaJ5IIXR<ShL6>UUoo%5'3%E/A018j7LYY\XUaK="/NC4Ku.H.V__%IW*OI[qU
%0nr<9*EV0nU;E2=L!:(T:tF&=QQ[;M`>C0s*9Jln.u.P/%714\>-9Rs`gs^K+&!s.g'g!9a\H\iM)RUDn6[&*HPC_]DMoJHJkFDN
%-_Ut%TK="l&8fB+V80]o%^-.rP'>n2%J4MB[bGu91TtE5nI#mY-Q8SLO#;*q@dG]Dl8KSrNWD5DkcnS/DYOTDGD^m'<"BfnmC6t;
%oS]Qs9W\m2C*OXjFLgToNJkkggWme;dSulheLXA0VJJ,77ERJK&c"-_=i[<cP+\mTQ?<T\Vd4B"!M`<hH8%OY?9AZBKP,<t1/KLo
%WaKSP)2'<p`^r]61(72,B-#V=R9!b=]HDF0amTop5IP$??T-8aL9(H3X&L9;!mbV#:r+Fbmk4Vgl:8Ld*;8is<1'D"MO8?2'gO$r
%Qc_lE0B0gC%TnQ;7c*[$.1L7i]/:H;7$p?[5rn@ZKQnR!8\&$Bc%.H0_A&B1#Dp8ffL+T+1DJpoL@.0[n\N(MkdB7+F]/UBKad1L
%hDWnLbTp.o^s,hiCr9K#(m@i-8Sg>-J2tnb>W(Z/U>VgrQ6`>'.2jmX!Bt"V^Q;"!L)QeNH_Z/N6/akpN2"`$-VgN+L\oVsKp+-l
%!fb@n=HYF/hu\T=j<2>[Bi@8o>jBNA]>0qeGADHi)(C*85rAtVZ)d&<:X!1MEo*q>0PQ3F$LEJ0%7M!U4Pi^T'^2bVgmM![H!S)#
%@YY$;&?CYaO^VmYO'N;T%URs7V$AD5A/k4L@VgKRa;X-"McUDW+Gi"2nMJnEEMr?&T_(X6Wg/p,7n!-r.n4Cn"u3?tT2-LD`W[Ou
%@sdcsM@)@1Q]+R?.LgEOE+/o>0Y6g9$VPmni*t]#Ih8e4qFAukjb]5[%Ue;W,IAuX/mu-qn1\0-)JJMJ"D0b,ZWL6_,LNci)P`tP
%q5e$l3.<.H+?gIk)_a_7k2mLW9KoiT`ajp5NNk5R`1I+51<t(E4GTFP@h5,uN-Q:c_$EA81^jmB!>pu^9<\X*3`8<Y\/Q\7!?`dM
%(aJN[;.SPD0>V%Z8G/"*cV?>P+Hn<@@S"dK>iG6ud-,n/p"M+3TaU`4KinGEZ7WkO1RFLi_ka+6p"@H`W(?Q0kNs*?W+iCM@pj:*
%PPr$k;t>B?kR7;>9E`.%OFaFZ1ZgH)J6I5Lm+S/bF?r5><$@\tL?0G/YEi#sisP/ipj.Q7Rj_eeS7789)UB!?WF1H6MuZgT=[![a
%25;=MRc;_I3Q2hQbnJfFHcPH_"Y%q8N/p&%MKLo$6mE.CCd??8iU<lc#1+2#`@3M6QdAsoZ"Tf"8?maoL;0J$>=d00(3m7'e/<:`
%[Bg2')H"a=:tnJBJc`\"\-(bK]pTsS$r\&LlpC*$TqEA^+RN?=GT(/;G6J_-RX+`:KlAGd!+OtBlp86AL;kt,3ijI/4PWieDqUXi
%DcVa,IhFOP;$eLk\;dBBs2is1)RMh,0m+Z\)C)<'cl3^%DqG8(P[`V:+HZgD0+o3Vn/f-N</I$5,np*D@_,uK3O!#f.Lf!k8Lc@t
%fJ'qbQnAf+]uL?D7:7KV3"8Be9EuAT8b(-N0boP`_`^"ZjZu`b"aH:;?"lYq]5Lf@fg00,;A'ZtL#"MrhdWhJcVlYG"aC?.)MqAU
%&cj,l,+m#5_8\(rN/G9.-^>l$7r9=+^7'pt_i.lo!=.f(G82eNBMLAIY6HOm.S4'sOA3rlJr:WZ<58uM!Z&rh"GmF:-;J<7B])]X
%Tb>-Y-X)\h*V%I1Q*Bc3A4'Ua&il4dZmd9\Vm;qf)@:F0J%3>qNsDXhNKm"T+i"k52&*u?.ikDs=(&ZBAD"e[nd>_bG'1;OM<hr;
%)D\*5J[W?,K[P^m`^6LG0*TP0*%<e-nMq:UnQsL3gHjc2]MSWI+XMIj4.;$njRABefZ_Z_<F\g)$pBiY=p<tnJ;Wm1[qu2tliZVZ
%>)A:[OMakG8g&Wqi<m"p[_b?Nm@j7_K%70GF7I_:G;MYV&0O6Sh!!s`$Nr-e7KAuuJLKi.+.]'h:U8H&EfgdR:!@"uSSrWOEX<Y`
%_KWq9DRTX`QR#Nfjb<GG_tcMf""E<YneT:T#i)EO%G8i;Vn8,82(QI%;kd0S`_q6i.+2LX&9ePV33PVe\9"Q]ETEl78@@ooO2T@*
%LLg^SC5.KP5"1mU7j1CCn;+;W%n\Tq?HD2<NNi\s/I=RV1g[68TtFWA[kQl,R,DWDFr5Nl;m8'jX^kT]R`VF<pGe)ljBAbip2VFm
%dOBaD9Dg@%5T"a$.@8.`>P`h%@fhi.CYc3+KjSALh@T\86t;a#EoEl(RF=&,mPp#E[hI-"/om8'mg[2]VotIF7km(>+u9*"TGb\k
%1P!j0M_DgFoG<&W@f^]7hu?mYpV4E[mr\s/I4QYf50_EV`Q?j06"("N(bfda5T:nSkiA.J5`KCrr()urA08rTLspBR&5MCNK8g*.
%_rE+uj=TA`$m<)_Z4e1e_^:&`FHl97*dI19>;#@4%WB;f[m^]BS@]0B:D2AQoURD'@b;#m#)ir[J,k?I_)-s?[Nn<sM;f3*$96%T
%/iT.GE\u5nFb"s.YqQb/kND:I=t_Fh1o;rW5b<@MBo-=(jSTS9BF.oX%p3tpD*jSY@@KgLXWU`^*<u2JFBXR)$:6S:Smu8AEek$0
%blT:SbS8X'+N>9bl6ZR`Uck#k&9uJ%h3OR:FK[EC$;JUZ35E;/&6"U1R\2`RWrd:<TU8Qac@@;Lj8(:*pFAnLg)Nnh'VFV\7edDf
%`5a-r^Bt@0@0.O_PBr"6VT]P8@Y"K77h]MMKO,7QMZ&MYYM"-)ikbuj#Z>U6:43DgfdIVaZ>^C2Dd<'>%jtX1kS]KkGqG03:C+RO
%jeI\e.?+`R!X!@61U3:>:AfDP-R'3TPKSAFS6Qh7;6Dh/N3Rk&=rQ6[\/p1=jnC,K8tL>t6V9=m]YFW6/GuYqN`8aL<5@^,4,3gO
%kXL\9)CQ.lRWmO7A4)S?%rO&[R`.3tZB@ks+2hIl#k0?F:qf%)_Q[tmC/H7trh(=N\O?EG[X^4)0FT]aGQeRaXs;T;&sKkZMri?I
%`+utS+$$Rg*j'&lY;3dU7n!NS:U/&]R0s>NVsqRL@8bM687r[qg5\-,@,V>+jo:c>MR,"^1^%BXct&KKU1cSMaF#ZFS@#atfqerg
%,YDPr&"#W)$7H.aH>%('4MXF>#fVMlcB&i4<d8gE,aToX8%]6iVaPN1WM^@@WXhL5P?_UIH/1_<MS2NZ2<"UR2dXX>fq5h&-3e$"
%2,F.0k+oY'$Y8A)iW4WXMWPXl_bD>)p#Y*:2K7M8Q)6ab:"UR:IJa/c@RXV'b!KO"9R^?Zcp<hQgVDo"o<N?cT5@PcJRMbEMaZjs
%0U)TuE0;'_3rD6peJ31fQGs3WJKuFTKjS5SE>=`0=s+&AT`_[^g&emd"\O0a<N^FWT[f`96t;fMD1O6oTOG3"ng!1JE2OSt3R6.e
%G<JniTJ2^HK&C\*/g<>4^Kt`Qrd$#Jb2;HFbFe*V$pnK-7.%&Xa.+Oc-90drNfeWnVYc;<RK_R+?t@+LVEjuQ(mI#+4ZY7s/p02u
%.q_sDM+A<b*uBdNU&5L3&KTn7m$8A/jH@?tC6**8O/=+b[Rn9'GS5b>.<W/%U&i?sLuu`G71j+-o,LjB:K0H;EV@Re\0tm:Fh6.$
%j@XieG.Q&f:Jj#X.?'p!_E\CEZoD;05U<n$*s9'05/I_?OgrIL-e(K/$1q'<3J(RpJI6r56gXGC8n5,c,-OgpeV65/Gi'Jj+2n7+
%?GR!G)%h-kJE`_KWP"lm"D'_bk&s;1@\<1G.NoW-_g?\AUas-#<X+\CUgbJ`,u<Tc^tisD<e:l6./IQf8K]/t5HGL_n[E%E:SFVW
%K/$a4qd2d'FKG&efZ`O!4s.rV:bmY8)H2`/$;kgbZU.04<#N]lXJH9^/Bmr2)$CL"P";;J*+l3U![n'W:dktkgU;/iko3'7M(q"@
%U_IZ`J5s]\"ke1inHee9rdQmS_P(Ln1?PO='VJn'cXa_?C'F0;pF9LN_E#VO;-4qI[<cWoNU8bmELENo->((/ZI8#G1=/%5,2I4H
%dXqR"THL0SpToeqGBfkaMB8#bUAi0g'CT+0<D]mZCaYuL/knA>,)_:$"[T,+:Pk!O;U?jH/<^GXNf.9b*;X*dE6#cM2"k7e\g^aK
%U%&UV,SNZPhi1qQ3f!\t(XnA1>#7[,&]og_*fZl'V#kSGXE7`:ds('_O6#\8Vu+7"FT2hZ282=X*D!3M5Ec/e-r#R7(<*(:/3U/&
%b\b\tYEY6$>l`'kQK/1am?M-r/j2VdI5PQ%.M)dF1`/^AIH(m9=eWcF>T#0k@@ZTW!*rtl+k-Z4Q5_qS/A_jK`!?RLks,uHJ`_k]
%538Bh%Z'F''X!;]!/<M[OG?"JGK,iJ/.MRR-+L&JTM$NU[tfctVjI1"8B:Pe,/g`NnZ$&#%o+AZc;kZm6kk#%M(kVsF9p3;nWJ7U
%[MHqJ9outRRntkKROMddcHE8?osmo?^\>#jeec"g>&fQ1Q$?7.UQ'+o9PK7TJ63\ei(@pM`JFTl16rPCkSM?78@G59.6^'^b7ql]
%gn;.>&ET40`c>TuS1J]*oHI>ONFFOI`_hPf,(sFOj5u5#oeCFni6(.#U.@3l\M=>o,_X6H;pM+*d,briXn3sY-=hh39=cgqWhl,3
%+F$BG3^,MNbl!(od$lO<c$%)ji"&M/>UDrRQL*Z?)(Fi$..9GSHP:t1Ka_Dn&*!)Iqs[P#-[,6CE$W*+-(8cI+J`+OASDV[f#ie2
%_*JCl.46APa*:E,L<[TU&L@\u(mV@=UZKF#Qg5b?:D$-Q#_T-,'.[&e0&\CbLtW\g6K+\"@20q9!Qp)582uI26"s4e&VR/O]"/aU
%3SmK?)`dh<854W!O@j4$f=X8,\_)&GjLM';XVkeRL/?lSobcnG;<53RLF%r']U9hg/0uJE.#p%TU4,ok+":KPDNVZ/9N%)f?5o?K
%K9]W'(Lg?W)iToj!"3h0jE?b9KX?tZS1J)ZmSP/JeA8B7j8d&VNg%l%d&Y:(DK+rB?_YQF*/k5p(X^/VNf:NB'ONhSP!K'Q$;XPs
%L<1E+1gbbp%A$fbR5L5SJk.qm]H"X%fTXdYZo0-aE<VS8$-5DIQH9o5%L2dZW+M,^W69Ur;e\rVE1H(B(f\aL7Q=]N,TE.IQOjn[
%''&TPG=L!?Lj(6ZjVj1M[+qm]CEWZpq`#dfZqjhmg]5kb*Yb<@031saH`'r*(Ka8NFq>g@B*rr:b&Db;]8@B5X,;t-1(g0kZJ0mX
%@N,qgm^KmlE[?8IhNEXsTd\7hO^+;X,5h:n[3M%H,B\\!0otD^jh+;m`mRh366[rm=LT#YVM%Bk"iRQC&ou0I_Q.U";!N#DicqS,
%LjbW[JY5CY`rS#ffL6'I0$8E<r2Oes=?nJB@3L;o7\C^i</.:t*Y&ZGbUElX.JFNmCUf9^)t$HF_Z9+p#pI/OVS!WMl4f$6;!qVE
%dHhTYYAsd(F&:Zbb[B2FoN5$A&//u@`=mCgOt=`lD_4KM_sn>pXG#S0k3V/rb`*c1/:fX5d\&LQ/7Akc9>jT1GW7codQ'bBNqh^C
%V!]%uqaKe!Oh+nqmMDl"hb*25%couu8`]u=a'<6ESA6)fgj(L[O\n$Si$Ze)JWue3dC[?[(!Xf3`DTPYjb3!gGo,+d'Jj&eUf9Xu
%?l?\$jH(O4&+)WB?QK,kfg$Wap^h8.'-/)^*c#19FE1_Be;k)(,'B*eT.M_@McdW5OmJ`;bQK*:H0f$FKMh9-,UucU]O>Lb87\9r
%=hutg`l4Sb*+_R[]Ve,u'G_NUo0[`//;q.s@t9G()$+2XSA5i1G[iAR1ie7E$_MJnp$!G_--gHIW<%ioc95kPM8mB"0p1@9K\`]Q
%jFjeQLf5U/#pLO/16CTCCC,B[';8R[O@qZ6hAuF-A?""NJ/l['U?n^KB7`_]%ndJ)iint4:+JIDTo,8%8$n8R,aY;C-1?iPEHu?r
%`-imk_m<mNbU<jm,I`djDoC;1_-T`f#P#ff1a.QH/koSK4rF(,6^!EKLR84J'/X](]"Hg^,R"<3$k7nd,f;3pM"i2k$7-`'P]gHF
%/o+..)*elt@^n\5Z&]AhAJ[t!WL\"W:6kW?R8>E362SEl48KKC%)5/R6nVFob6W!)5hRCT.9V;=i)/L-ck-8<B01'hb::*O#X4>K
%.IHGgU(jMg'?-E61F*Bga<,Za6r=^Th'Jd3R)Fn<irT/3,Vp[,^a\@MN^P'Q,^hH1(cP=_[c3#A*QbWC)CZ@oP0h8^C-^jp@U-i#
%Z[k`t":@Ko:"E"W#&bo/,fG,d&.C#\'K6)IEmEi18JEfr8"kuU"n6P6L<^G[D</l3#d>q="V4I8',h+RU)Zc+G9Kn@7M6MKQjam[
%\9:a[.E,5[YRi4Fm<n&\3'qo1m.GDm/MdjW.ip?nV_ij2)3<s>(DY=Sk/!=Ng[Nt>+YH>a#$qo.$HYTfa<I600(h\%U,<9"7Z6:Y
%j-&mZE`j8L)`f(c7kA5SB\ZQiE)WBYZgdcLiE:1m9VfYu:O7\`Ma]:.7@E,^S9fA!-Y:6#RrYnO\PQm*;s\B9aVBhlCup&`AdLL6
%eh<8_"[8.#JFg\,@7,Um.06-A>l?Kf_Qo%mmS/BDb?-6"/66%?=(1o<LgsqrOFf5k&;E(:55U%`);.YR5*5VGIUs(`c^bfoi#2EV
%0;uD@85TPq!k[RE'8tDc]UsgOVbiJ&.!AZuloH.2,h8,/U)5kPg`Zp#5mS.G$616&#8$dF?Vl_MEe<?ZV*MlE5op;G>_Y`^Bh^k(
%ZMk"7_MsdVR:%u,3L&$V#Z"to0u69r<$#J;MA0V<,Z3oL'P'2A")0cH1!5h`@!tr4bJ@B(XeleTa9IB2;P1QQactYJ<6%bj&7c%;
%+We(krkdZJOX%]*?n55^;F&T''LX,V12:4VG9iE(84A*e-$$g)6u*EOQgk*Z/4=MQ6=h!hS\t6aI"XnNqnO9l"*c`43>(]&WFf.%
%'OjLS'm^OM$:>m2.oR#4$9a-6L.hg.8$8Q(SiDSe"TSPmL355(a+KC692]Zg3FL8YE%#rEdoE2ghlg7//jgIP,Rbl(JAM@X,`Wl-
%KU>i7Dr>q-lkEXKK*`Eu#_Z+JV*U/@,!C=BY^+&J4/-VX"u+$J0.7KE#;@q,+Lue4R>,d!J@UhI8$EdiU6N&^/@pniQ.CWDVTR]8
%6k(6,@-GO]jG64`^HesE8sOWFJIE+Cg+-^E,&XSN&sn8n7V(c+Q1ml_9]@\/dMG)%GGp2+R9+_H2+EKKZinX56S!89$m'/RIM'Y.
%"S*@[r'_`X&]e;^neZj>5p61;4]V7t&K*g1W^7dM:WPpa4qi3#.lE7-4.s.BVuU`rSLFAPiT!<(jWW".!uE(%9&$B,ZDjp!?:dF@
%!><(E%4!:*JkFie5(#lJV`6i7":gZoZOd>a("X?9-\T*snctgl:NEX!E`>%BHNqT)j'9l0pd$4*lHgq';j/F$<T6Y.,^r,oLi`#!
%7uUq.[i6-,V:m,SkinZ63LUGOfH_8$47AlT7k6PLoL`G^mY)>n0j6@\<2)KRkeY@pR:C1cX7CpCmg7ZHdP#7,;Mp\#S%JdSKJ93T
%kcKg\$:V7QZn/Kp/)_DKkf#@X.&II8'R++J'*XJ^Q@eJ".HdXBU#<-fgh[cTWs'(W`5H-PahsjsA8XdZQ4oil3^&sA<5V*=.cZ6S
%3S1J[i^X`Z9'6tBdr@"Xqg4DSM*qG@N_Q`&\`^X=+$gDH/sHU#<8iOqQf9Ic1'%_Z-^hV[ZSE+D=hoG:TAc+R+&sW]G&5^&2//qX
%Z8"%ee=(qaR\pcE\T`HT$D.D76UTdsVJ/nlM6TmCa_Nht6)Z3<rOLS8_o*fNI83TeH4@Jl:hCanW*cN?ci]&k\/?h!;(B&i8BJ*@
%Tk-Qs#oBpApnH+mLLlJ;2BoTdope'.j;cIn1*K\S;$<YOd[8:D$&B:\7=`%G((K\HgoaaobH+NPe5Wm[]qpT5A0p]5pdAM#(6/K6
%C8%`LKoDn.&rOV`$`OQ=A.A/c%a'8KP:2iK?)k8R\9['@b-Rc`(OH:N4#12U8Ps)g+haZ[Stld85,WnhZeaaV*gAZ:<*GM[F*>Jr
%M/1,%N^n.g0P@Q4kDFT;OmPIT#l,8\.#h.sX/O5Q-.@l&@$rlE'c^]"0HCbi\Z-12](\DoU&6]0[["Z`p5r2h$-?8TVe-Pi.#JA3
%XgGh'RS/kc%psLPs-_(m8ZnL,9')M-)04)E#D;f4R$8#*AY/dD&i^Z0[IQh"4uU[]qGs1.ATV:N9Nh4_c`C8WO"hM+pW707kq:3p
%:P$cClkLG0#Z$/POWZ&K;Gj!'+A`$Qa51Np/<7nI!eYU32CEZ3/ecaRR.$:)1J)uD&>i'Q[53!o:_<Z7XZq)8rsn`S\?q=fpNsh.
%B<-q*X>nia!<?80A*lUaJ0&PE&V6(_T?Ke>BbOJq,#F<*^gf'E`]bW%I-"?f#L6T]9o\\`gohEn)+M?Y#CNH6+E(8EqJ'taG!:0a
%b(i=AUG>&2<p#NEE_Y7Up\j-J&M+Wr6mS:P4S=h+2BuF/imZ8G>5E`dqXiZ5RnCu0m)g#V;MN^b>_>qH7aG8'I6!JA-Ipe(8>msY
%</%V]W<rpZS`b-\5X3Yk3LZ2NV]O&lNBpSY=*ddKn;3iL*Ue^-$]@>/5@C!P@gqCcLrBeEl@qDk"d)JI!GpOpR48uEVa;9iaZuu`
%?;BYD`$Z`8I-lI.HTrq/8Ptf$b4@o^;G*06:7h;/:<Bk#.O"StcZQ%o;&pf.CQ0%<ROGLU)?(ruKP2lO,!?XN(Jeu?c[d;o9dY^)
%,u#+clDSN]#ZbtDJ0#4[bnZcXXMEQeqi,GP,"1*5[?s83?CCI^$,J@Za+[=(7s$IW-kVW,2c[^&!9m=A'M2W:-Y-eo&b-?ed#0<-
%?@r2!_L@[D%+(\DUb;t9_ul(+ntDh#`8$2XVW;)f-u10oLQr&Be<GI6G5b!d?R>6gSWE%]\[.ut4`Ri<drHP7)5LSS#:loI9IQ6+
%=\X-"V/hQ\29SWqo&#Oh%-;T4;CM=NfuXN?0dL!KPpKlZA.$FdA_L^!'6N#QgM4li9M6-\TD;%:J>"X`@OFe)f"dQk-T)4U#R"M3
%MEus<=#jA,/`g[^AkFM/4-!9mLRD=3njp)ZC)_l@5%Lab)R4%VAj-62b_8FlG(XF-`YN]WjE%.4L3$)s76^tH/!*4U+fpMU'eVRA
%[Yj2fIo.tT7F3(9p*`l8:)*@RpLR]POp!gWfI2RWe]/<nO#nPI6`#N:)Jsk)a<mio.1[7gb=*>P!Lu7".#64P85lT(NBs_G)7$,4
%n"$C^6L'J'PW@Cca2*Banq!?g6l%5rF%,K:MHk@jZU!i42u<c&^YnOp$?pt%o,8AD2;P#6fgK\W\1]JoTi9l^8;1!?&:.<!5*n+k
%HT20tY+o&BQ"#]'W$#OGi3Fbt7BF_b8s]dATpuGq?,s?Q3U&Ol-,)k+=QV6V8N=L9PA!!'H'/#sUTu</0WUs7-6c,gqT(?2(u0r<
%P9V0@hGTWsb[%#bm7Y.'%C;Z`RCrPRM(fegm<UfnNqW;@nH>%;Ic3(C.:7Bhl5)STMkZH)ctqWBMO/csf!F>@j#]l5VQfPiC)$8p
%Bf=+,K9#6>&1&fI5Tj>;apB'+8=CR"iZbhM'IM6Wmphai=E]q'6Cln:<A+uaf*d<UZb<H'JV5t`&u_nKP*J9k929dQ)=u?b-`ID>
%?)KrU*cT=tW>4icA%P]lTj^e.a[6;'<NM"HlkMgS=rR?ZL3&hWb(M]0AYNe47Vr0gRN_JI'(gloEJDrDe7(`hBW1O4XGN,*emU*R
%Q2rLm.PiRp[nI#H@\A\M]*"MM\BG#U`9BUf<2NYJ$/tuC8Ej5qbUeZc"f+"$ks/2d-$)(L&sI)B@m!fQlYf4&&>XtR;#&i8A@,D^
%pae(<$'i<3_rLrGV!4&21.f[-nt[g$ldl"sme6r4V,3H?Z4umMV.W]0h2j*)B"h*4A%sSF'VmpT0+Nh)3@06k1.d4s`YTg75ss;L
%1f/$0:C-kYUh%kS;/05(65b0o3ZBJKEtfH`B-EZ\bB"LLFTmO7/$gm:)#4j^R2]8)3BL-_P2db3i^5d_CS1l<k]O[5&F1"n)#mj0
%QBfQ/qA17(j]9Vj"%1iV>ab=m\e&gZ*0bc:<5h:oEi9>8cD-R_QPh&=%54duJti<pl>.JU:*U+_3pGA91)GC+\:eq/Fc1:'DluJ^
%Bpn929Osk&GMq'@CM,'G.uqhVWLB0$iS\%`jXg;u&O)<tdZo+`r+n_\=-0RP\_'m)2V%I*S;S!rTk0OHP^!KL&L#[aofaflT,&Ke
%:iJ#\.)q:U,h^8.AF.koKYA^Bj;#Yd\l?79L>#U0:*Zr3pUY5+Qm3^KSLHG+o*(n/V+lBG7M\YAS&<GqI^*!o"[6sX=$]5b@2Ph?
%aeK5^6:b!#59ncSBh2$a(QKbT@VpKa>d0^u=mVePS#f\&`MtUOWlq*Af;*Z5!qDm4-qY.:&h9K+Va3eT)t$ZDQ_eSUL/H>Pkc@_J
%/BU1f<5O8)a'^`(Z&552;XC5W=;JNhf-SU5j?l1%W(O+$L*m_)(pc$dr-qp*rhH"-G:7]8-j2,tP0d,*Ok9[(Gm5+cE'_&>$C%Tm
%X=?K78;!/*TaY+EkbBokPX:6FX3;8<FaV#cguic;'UGb"Y]FAN`45<I@l(<paV9\rAd$V>Yp(DH<!4sN!I7p&I)bQ`%/V9C+a9*T
%>,9Z2f7$%=LeL"m"M!BJ&X.Y]c"uZd81:L!>3rsa?n1WHfZ=]$U7^k4(+GEf#8JbSF%5qXgm(Er-#45$7K-MZC0Rp=hA1d-/#>KT
%lVA+6aRpUQBY:MO815Tpf<SL)L=<ru#,a;gOdm$C:gl;fG>t82L2q;Sq@?E]7B,$]4M]L(MARV%_>oAS6P_'UMc@LeA&W"n-YuM&
%=_eeB;2Xd(;%aGi2"2:A<MNroj%Rt>n]&_bk%jq;fS&FOP-L?^*U%nrPr^(;;^HC"l-qEu8pr^+)QCr+KbtV@SPY\M1mG;tGcMFB
%'M2dR*r<_#(jjRHWlOu?lC<tTOl#_tCqUNhn]\6Fa/K>"ja6Ph:2*90^IV`M,_BRl9#f3WIJ.go+Xk:(:j3,#Ndr^l_%HVn8%ul%
%`P/ib$"gUokDc9\Dt!kFGTj7J;F3gPSJljB%ok7-]AhnoWM1:?e3X.o61i(uReZ/HNN2sfnfhYj$uYuq0PA<uO\B++WCk_cBi%7D
%W@3"oA0Ye7<`#-d*/BM9^oC-5Z;bseaef^8i'W4e!FI2&B,.N3Bj(D)JB38j<\[H!jD;YeNd)2K_L$Hgf-Tp;-H7`-^(_o-gDK3H
%O_?5070$5WW4]eV@tfg</?!b>Gp#fke'5hPUX[YQLn*GB7AcSCBjWP,T0d=KC6;j?mha"@L%0V#]`/d%hVY#gF-j3[s01iAcUff9
%>2C+>0M_V@UfQ#k.=a1O?q0<XS7S^O(<FA\%o^Su\HLEOUPP*hRXkKacuG^pY2L),4P94h*aCQ(I84Dn1DKu/Nre>rfVkI3)9TW@
%O;k(@Q9I8k+[P+B+464C)!$nP.t2Q")A^HtN%#Z$Vosp$a8[\=0+aR:glQL2bt&)!nM8&S%X<&n=)\M(8K'2a<T]F0AJ)1$%a/tO
%9%\[n4MhsVB.'4hW6>fMi?RqSST@CRij9\V+_$/CEc$b3;;0+qb2JH@LeL)U6@rL24Mu=D""WdKZ0u9V\6h]n=G1ZsQNW@@*3BGp
%5&u7t3OFU,G]FNE!?N^$8dsfp,P"r.$Z$<(;JaDgb=AX_pfKN@8u#0Zm3e0^K`%#&'H:<tX(mVip(42uS)&Nk?&D6)kGt:V3@g7f
%*^;l#a[HLQHRC@ip1FNE.uZY-A14Q<ap?MX>Z]Z86@opbS,2*r(Yn?'Mie'/(^"l6Sg7/QJ^RW[0oZ9VR5c7@UjOQtB$\WjGQhM$
%armn3TMB(KND0CWVd@-);sk3`#1S44WON(D5,!HQ.s'XDSs(Q_;-jdSb"+(V,T>+?@cX0t-GdN<,_+pkQe=Y<(m_S'SaoHA\6\>Q
%WLCt7YY;;ZC$#!crGOYcr"he7pl.[uD=D=4^#p')]MP^PPk65"FYV]]0l^`QEN4CTSe3gJM(]d,Oh4F"OdrXi=<jY2L)guCQ?p0S
%j,QZ+=.[&]93a=83QK7taV05MGOig?`6aMZk[TEg#\'E3P#1Ls:`4YLF-oTJ(Cl^GU?FJ7YsLK"@K_3^k=<J?V'u,#F<-L)]k.W"
%W#+=YPbFBg%n2/^@0S)s[$H!7@.Q@?W\F*GK$ghNb.p9>)#+qJ+tCcP@d\=$hhZMJ_D5(7+G[)Kn@f#0g$!FH<)('Q,;o^=a[&Gn
%0DQQL_cD%i]FVL_j1s5s9/bIVK$l%ZP#;Hf"=[>uXjn!_DCcnES<AN'gm8A%G3$pR,k*@@1rgBIL:c6-?<6!q;hRb<@V7\iq[=8h
%YgUsY6EBe<p_9'YqMkl-O0LGU1/#uY_qL88-Huep`0_=QT6fLhO@OG`W]XF7"cCpj;Q$LU=#q4DD%jEHH.5ptM+f?j(@!)`6V1CE
%2&90t225`P#(E_*[K/-`UC14XF]RuZ`]Er7S>mtTWUsC9HZ"&&1fhV$$^Jt;"iS2H`^Hiq-WR8u\5Sn/mA8"s6i2jBR8BM4;sir,
%q(cpaO1>NX(DoBUb=Er"F3h@sY[Kec*6:i?`NKi1W4@8$j6Lq?\gJa--6AC/"Q@OfQ_ZboP6V[m<M*Ujg+1>"04/'gc*EimAJJ[Z
%cD&)%9?+6Z.MY>[k*87[)W_FkD#KLm>9ej4Y8&>e2X4>Uh(d8"9gh20");SCAW!iO.@^KsC!j'C?`qW&MJ*PrMW>2&E]HidnUcGK
%W]-MX/^J";P,B8PFPp6:>nR!I'VM?V6X16t:e&:2$pfD$P'$RL=p[kjQ`h1T^83Z2i`u;P$83=86B2StOBMpZ!c/l;Xa%B$o>C*-
%H;#R0<@BNmR7`uA:2jEg2pC!=lJr@LcCqm]ap;=llpq9g)'(+FXX%)$=H]D!)QOrp%XoT!?O6ZJ_Z,>ZIj+aioa(Td:n6U5<LgQi
%%_?AA'T$(<9btahPgj\@Z^jp_A<Bh?;'J,q(s5Ckj9m8^$]sP.ToA*G7P3!>Qfb+1Z(e.*C1X.:VRV<^7,tY]XTFSd]rBX)X2G>L
%l!1&9.E.4R/.Z<cNA8[J.*Y\/jt0PU/X5hOQQO)0"g%i>[?.BA&=UEc%Kq#UVe)lZ5f%Ij0s;Ds*sE5!j!g"9p964nIiA^8\PG3q
%^u,KG\YDG6jHtU@7R)_A^srDg2Q?N=VT6F/)4'-d]]_*3N:<[$Lr.D8"WEPe6#.T86.U#Nr7`hlJ@m&;6dpO:7PI/'(s-b'*snnr
%;.Jc:&0dCVZY5H[!+O"RTfc"JY8O0F&s/n"G=qM&MH<_F\3u1WJcQ?/Q5[^b#o=6Cr#GROlo6*,3-P+(-uWK2ihSu?<'QFLibR0l
%EmC>fGCmnr<Y:7:.)!#DONCe6N-Ph35:WNq05@2ZXMG^'',%.\`7*oa)#epYs5g^r=8"dM;/gL0B/%Y3GFgM9#Sp./5Ii/JN-f0d
%%lg9?@El=Nck%VMJ<E?O5#osUO&jP/,R=jO@=)RQ9?!Ago(FJP-.,\^]eue77%#]j]H&ta7Nmds`7'V[j-C?MDlEeNPhSs_KYkoF
%JlV?Ugn-'N-s-u,8.?3.?30FVca[&@n]hO2a[d\XP!4V6p&oE9SP.sB75opN$b!-'Fkop6k=JgaL=0hHbslq,.Bo"$Cf27/k!hf!
%94nrZ8re^qn4=Ek2knF;!YqH-P+E@f7!]'k&uWm-hCqITWUm50ee6C2`'387R[c%SK.\\e>=T[T5^b$H!"M;3)W?C:WMU4]+>=EG
%'df18PEZd4<%&1`$9Zg\`'@ELF.orG>%5-96E)BD9,PS[Dqon^b^GXN-+?=lXQ[-T=<jnV7A/Qd]WrCj=1^H]O].DBYr%$M']`:c
%PLP4a@kZooV/Rc'Le<LTJ"R'J.OYr5o<[GVD*'2f;>;E479DGO;C)DR&P+Y#"!:2e7BS0,_hA43qa/g'TV>pGj]bhQ_43uPq2+3!
%ldaOq'BP+m;'eLfS-3'9+='JMWj0<mW]!I_Z-OiYj(4*e:kQ.EBhd'^S>cl%d7Hpc)4-W],.ngOVCH2(N\-SE*LfnM%-CMW4]WD;
%P,[q+QJ8'k+B$lD++1"$Yp9oR'03aiRjM(RaOlud<.Q_1#23tYFBJCoPB@#iCn:c@O[E,jB$7$W=7NuBH./Qe8,F)pH6I/4#<Q:G
%%*(3D3_/a>b'Y14<p%]LUX3Y+[+<<"]Mh=->VT3tTNk3j>ke@5A]IYo3,YmP-5>=VkF&26BL]7Ie6j)[O8p'*c_ALT!B@Vl'srgC
%:<UT15_RobS^M,Mgik4`3#TM07(R#/,c'Ld,nX%NU6M&QANBH7kPCt1<^FLkifG0>-,5ItRc#>_Mp4GJK47/:Akkgli=#'=*0^[q
%4<e,%AE"`8"D.qi`[6s<OQ\tM'laL)R<2\oLfk`F2^L[7LI-T+P25&cS1*JHBU&-R1;B-B"Y34-mBs0ej9eU\Yr7qc4<j>H=26pF
%&JX_R5sW*B>][*?=1/6*-q&b&X.C"N"jtl;:5^hfLuX%\25).qP)bW)<uF10AUoYdO9IOBfojOoE1nJa%Gj&V9DngrpFa"B,h\=I
%#WN&25skUD[Wf(L)F^=Q%^6])/-;@?ZR)>hh;d4t-t[]8Gea[u"?\Qe\]6n6q^Ymh,U\bAVf&bQrecSt1-2Y\EB$P?7S"HmU8Oe4
%"nX'IA3a3*#tPpVC1iLC>n<&@F[=Ckr#BIq8j3O="5OsnI2_S1)YGa*IFq#%)kGeO[Nga4+G`DW>!l`4VGF\(fD2u\h@;<Or^.TS
%,%d-#.J+PNZ4IZb^UeN1qa'^D?>W8\OP5EH#0R]Uf1K-.+F^/)[DW*!_odVFqHR5b'^piGVBG8,ofP9n<oT;Lbisr\/djJW<`Y>?
%EE\*A_lsQJ\)i&e]eX(\ok4RW9uR\kF8A:V%Sj@Q67ZrWU<RQg@h^2>M7IP*Oe5NMcC5KN%ha!*=,>n6)G*ei@LZuaOqV_BS18+%
%,+6)TcD@ZMg*/KaiSu^XqJ0P.M8@fehbB7Z#V*PZdLZ<t!k^$I]qQ"r\u'HMiE/8hQ\p%=-'61m3sZuMS6S/WStQT8)DtX+;DeZ9
%#3"5%87M:5aQ=q8ChrEXTOs>%hrktA#:Cc+g5V2sAoGVmEL<o<pbi8n?mra5mEB@`*V%/[3nffDQA?M=@:.]hTGQ$RK5JQ6P"m"+
%1D3s'YNaoRXtH7d/O-PA-aSp]DJD/6XHgp_LZj!kW%NL#%\2M?U2F]a[0G)G8ra=EMC>H7b9NY^[>2e;XorV^8-\c^H]rNL;BD#Z
%V5/IXHV2&b=B&2HZK[=n9CW?'$Fnne[>t7R:-o\R&6Z1a&K[UV?1Y.A]=+N!fJ^m'i9q<`*\+s_:bq`W&6>K3QM+1UTM%p<%:jj]
%0T%=F]L('6+s7Vq'$>qI;eEl\N$/VP3mq8PgPEomjY`.o<+>Z4OrubdDK^3*D<X^2ZJP5IT&`BZYZV0E<Jl*o3[i"=>QJ^-dYX8V
%Z[l(WE&csi4'mFdKJB;TGpo3u6mHAA4mE8oBTV"lKgA_'c<l1@iZg"Sm-_0u'mh?e8ddkGIW!!)]7@/0U>RGV>H4,\V)%QI(<mi*
%rQq#ZYe83Gp4a8QdUht,$\2Og?9dYuXsLUgo1oHZ=2:@mS3n+s/)KVJGu1r#c5WdHWaYtfcfd=Oa7mra_Xg4p&!Y*W:nf"S^%Z&K
%h1h1la`p^MqIW$)D*Q"o'?Lh!XsR2^,"@#Qf?t^:=[Lbr6^^ZqP\_p5SEBX7I#%0L-h1IC^iUl]aWHqtlXI;7Otnab+n6@3$o^8)
%&e$HBMB_Z=BRgVrp6-PrW;=r9$68UY#"_fdMJE3V>%5)-esAuIpam+3&<R[,25WrnZO,3e`)7hBcu/(%=3JX#c*Ls&c8SrV8]>AY
%IS[XnXH7)_R2S'=l'`(.aM)C.E/RZaGG3RW@/1FOW,LCc\:n4#&adPK?^Id.$%`daGo)hdE?06D!9/pr10\/OjX(&$nFR^ZW<(E"
%Ua+_">gt]&[_Qp,-7m*f(e7<2g^9#0L1Q:5$W/q6Cm*S*V8Xmm]g)Kn2&3r4?W$%)\;I];Z_KjQ<mr_kVT4htk1/R8lQej4TI!Uk
%,[noUkaQX>HEk9;KhaAlSro'CSah4-ah#e@;cNRC9Ml/>]PgO\@>,bDkDZ1X3?1$HAf)lQ['KP%_mrYj9?D\mK@%r\*leN3;k7M&
%2*sJ3UepM@JRi?b5aiPLSg)bdjsHT-dpNf)c@E8-8KUS@+ATeU@Lgn.)/</D-p7sG8c(p4e5mjB2G\t1d7+l.L*Gtq7pbl*1O`pd
%R_BiECs-o4k/9"!;<OVIT<&lTKpLOfL&C)PI`I3BZT![MH"[WgS+1)q*`a\n<T0p'*l$Wp^7=?DfKW'IMZluXB0-p/Uu]%%2%Hgd
%C7DCiRhUir*;kIrf*c`72uuSa9<M*/djm6G<Ii';V0d6QFTRM=73*`JLpO-in/8F+C;*:[/CgO'!ZTfQ\B8J7[M)M;4=sK8KsnI.
%@PA6]>qJi:OlgZEDm$NkV&lU3QWR?nnmIQ^>,`ldAU8tmHi"))L5,Sg89=mdI6QK[\TA@ZP1-F0/<\[@c)VsB6@&X/T#IHTq9AX=
%PqI&B1V<@9^t:\X"=/?haoY9eM3(%jdERrUOgjWp#Cp[f+kPS]NaY"H.'H%8=fI;fe*FPCM9%UfKgJcK][<DiV"?bSP525ciIE3m
%1"I\WipPO]#)8--Rc76s_O9/+O*9:t"/oVX!TSf6&0ES%<TK"PD5SeSWRm0l%Z_=<\h6g?''Wq/Q&r&k@((h]!\&h%Bi`"23i9Vs
%Jr\^5._]+IrnOOH%PSLLh7[.6q^%YuE>40gA?)Qe2R4TGc@l2i@%a#`LW+5u;k<.Ne3m]d;`X5;U-5H4rSC0(ku4W4bLB(\!%4*#
%3B\sni*'^?K#S@42MCL.M\QU,-%+CROfgW\@OZ,i62s:Rn>\sQ\$V9i,%<^Sr@KiV6]<?`K/L*)CkKRh<m)p,2e<_'0.:/lMMK2T
%-@E73qSA)J9tuS49KB_'?m8^Q9t^Uu1RN^N+FF=lPL:j&e>al&a;aatU&OFb6%,*uqqrP(;g;Y)\q=8M]2Kfj"#A5TfaJ<[QYJ=J
%Ua/(&FTG2h<IEAO_*-jO"_N9.+[<D3(,38I#QVBO;nu,7h+n]X=NjE;c]n+`T=9DUL`G,fGaCkkNK7pjT5@3W-BEaif5L`r=l'Up
%&,aIl-Q@<jLWb]`HP?QE,DA+Q#\&i;6A\'t.->eE7\N819Q+=3@nSFQX6qa<&\/\Ee#pt,jnhC9CWPD5KKp!AS[@%6n&8.AKn53O
%%c)&$_:*lC%KtZ+r):&UlV8jB_kG9WU\c%o8M,5'a%$(%OW!oY9]O8:M_jC8fh7rtO$iF^2&8KE:<1htI!6_/fan>L.^j,D!=[1_
%Cen'cP<"a^Uk5+c#\FFN.00."Hhpd@Ca`_^G9lFUV'n0\%X@S)&Ln10j0;PeT4'2A]?m>N*-9_W-cmpQ%@Xfm$",D4_C4VB1Xi)h
%cVlXf8hoP:9&#r18WHQR9'J"g[X)s[<6D#WD.,4hHaa-G-pA)7GqZn'hE%gJ.730]VpeRt2S\N^2X+]0i$gsK=&.["%!uO"#]_d%
%cWPBWM.[S0,-./ePUB`cGj&Z[lSpsG.[GOBeJ2HS1Q/2(1;Umij*?qWaH/#N`o;T8jln]P">3G5h\F,d[B4/Y%5!QepT:VHio`^Z
%;`SdthpI4/"@,.DbVI`JlEibP[_Vp^N\^+&J_pnWZua*\WA\e6NNKs:_L_n83FSb1rVN,S`E>X<i01j1m7Lc9![AFaZY:$mrP:5,
%?U$^@BN%&6@a+,_WTq:t%PdMe!Fo.3hYks3-c@ZZ<e;>-D8k[m%K1>*^&ob_DFC[I6]?bda&],>RhfQS72Y2nrMVOO<*j,/dkm5>
%#*bla$nnDOZ='r8K[QFX$N!?]83K@_,V7JV7D5kP?r9F*>I'G2pn$bUUT[3ON'=V]3e37$g/1dR[]nB$db+"h0<05]ri-5T0u(g_
%:[GCIe/,*CX)0;15j^>A:kQu$ZX9(ZIC#W4:k!akbc,u6g$I1Vf/?1J7I4@G`91L0!'+7FNb#(t`"S6>#psp@M(5A4Oo?c[1p7X*
%f26&`)V,MIa<8gmkMDYlEE-3s"pL3+DX&jSIAJ8-9L9XO-sI\&YesKk4;9?u=pO/`ncHR!S7"":;#okKgD*Rj'h;]85CM6'58a]\
%\n)j(1jM"i+/;4i62A-b^o,%j:n<Wi+Btq<qOj_1f3L^?HOmhaD:*GJE"mZJ1mCJ=-BbDlFip$DZ5fNAKDY$1BR>Nti,MqpLDN,8
%i*F8S/UG%F*XF\tV\(-AJkQb&!AI2^7:/\n\euF?:P'onl!=-u3H_)::t/nB***(,9Yl9A[2E'\S$ZFXoKFi?dRaYO/r!D*4c6Zo
%#o!Q40F?<7aoC$5#W`62X!-[u"J(IT`M*7T`,*WBe#"[.C6JR)RpT%:;RLVq,h5,ZTF(1?*r,.^]Ob_W6RWj$0HZrdP\CKsi0nKb
%I%jFXBU5YU]9[_(_'LcTWsej%r)S$<LB]``9e$h"+%k3?256C9g8PGrln;L\(@AT(_c0.!V%\TBS3\auirl4EX\s=C`^*k.<[l#V
%IZig6o`c:(OI*ll9`9bAMm\r9;,3D@:5?8jYC(Z5^YZ]gk^k*\#;h*OZGWi.\Z.\oV=L8U@:U"<&<OT&=L2`H5Rs-;Y>JtpVQF>j
%!;cW(CKkEnF[9lV:5cB6^c`1A&2K/$mm*%R1LuhH,r&5Z0IjdWS*0SS:>sB9Sc96&?f>VM>?AJfiFHY&Sb0sdqVC1MY&DOt*/8ET
%rT3Q.395A_:RKIP032a4;0GSh^El/n$:W2F8>_D->IYt9$Lbf>(2MGE3![cF(]L\&k1@"+==#CV7YC=bC?#SqJTd4Q3,g-/]*MRg
%UkNb5=c@LV6Q(UDZ:O&:7k>:3B#pXtT_rbb.-q[o542hr%1AJZi6K<%#+HQb-G:qZ,]Em]r!#C0bXT[QOlU+i1g^in*24.!JW)1b
%6#qAEbTZTPl4WtQbReS/csT4UJ)in`nqSi.WclmQ@,"aYY8`+`"Xhf8.KitRm*a63H/@m@pVhb_h03L*T5/aMjY+of#2de-6kcK.
%1K%F))[9\373amY$q#VTh)JeP;h;\37>FmGVu"kFjJ'c"Xnur@ZY<)G@(b%_!.ijumO+$cl)\tOp%7tAK6Qs8POU/9.Y$WFd8g8"
%//>tuf1i1\PM\("!LPcsgd]rO!5ogBI:Gt?3`nR)&1I++/p"!1:C7De8[!IjLS/Iq:N8khj6fEf2keAS,qOMFnX>o)9=SE42lI!P
%V;knk-\=2>]-0V8e#=JQMPJcl/Z0U6Tt!J+PbE+g#RZV-<ap]ED,f-s/&4HMpfUCQlcqeI3[eKn=nT,"'U53+&lhcN$4:*ZALo7'
%"bjCp+r?O4Jc];L`<PREO;(4<F-(!ha`s&XCQFN+2A`Y01#6M]=!SJ2\8_08]OJs2+=#3)k]a4rhG.uam1Si&gD\GAS*_dB%s.Fe
%Z[XJ+"SL>Y;>+/*rP^70OJ73uC66Vfc?N\pj3LPR(i\u_,s:)n!Qa6%;=h":J[Kc!WZTo<OJ>=fr#J86iQ"_rYK&;-]2*Fb@934b
%Ned_=:MenjrYL.hT3/rXhCs[1dWn*EnbSW+)HiK$LA=cY(Dfi1G_MFLep;OIXr'eSd:k)kTr)fjP!.Fs.W8.;!7LAT4i@>W!(dd\
%/`$Mjoh*(i8V8:-F(QPJnd?Z;6Y%WbnD>5rc72Hl.L!%![F_DO?_OKiPWVEV8jb$'k/Fug)d"D%3f4dn'_-F"dg7&,)L]Z07Vn$X
%fDtOsWWPRn<97j&`'\IHECCFh4N!C;T)$?Q=,N0^+E-D?Y<Z"-#AcosB82^#%>hD2GVhhAX/SgEn^pJSgPpKfDiVB/7_""Dcl7Pn
%R(DE<p##)$Ifacq9^`Yiqh,2=+iFu@=GHJ%%p&a*P2$bX<Uh)n)/Je\+XG9r%1_eYUu:r)S;g@0+a_H)1RUB.VX+(WPE`XO#,!\b
%[-iba?I>)s%tQXdrj=\bGkO]e7K/!c``.1rAhPJNW06Wn;34f*">"Qdn"o!CBG*gVmS'W7U&^V?e0o_0,,NYui;toN':?/iXX/+D
%>:F9ZKE@*eUSc/3GqoY1-p?3*>o>]f8%>"m.WIC`.Y53WXKI@8)`9CF`TLR>NHW!APOt5M9\6-nOAXn6#pR.%"rq*PT56am_#3WN
%!3$jo3@!Hp!76.gGU'G2!"'4/__K1+!C[LVas!iHJ3QOHl*s1s'U'RQVmnJsQ*>j,='Q?49(!R'\FY9]o)$<B2h7iB1Vim-*NCpE
%],>hP]@Z0--En;S2N;gE`q6rQDKsid5.MRo4r?$Mh:_GO@&U$[.^@gU'RPe.VYJ]2iuu^,[;bdQAih6.M6SEXCrs@u^aFf,4D*<C
%?Ndega_?9+/HSFVBrh*TP(5(Mn5X^)>D8nfDEk6]$G'C]SlQq]*'bn:"C<#3/[BIH8(fMPpbO8VaQ\kO3e&'4r=G6ZH@Xb0rB.#*
%21$K/0tV<9Uc+8<S@4&n]:;o"D8^-@?&Zs6$Mlm/Q:T%h]J:r[4+Ma14pMqh&4uhR>lQ9gSUhYgU6.o-,O(f)fgkaKOEqPoefdbK
%D3bE\`K6$p\-T+D\<7XXh?jPq]>P$*%r'?3%-r`4jSWJ\g;g&WD!dp*`rFt3IuXZCD`D#ME#18,D>"!kTKBk3Q6Q.g5IKUEK1ANt
%JdJ::(fNE^'[/uL_c-)e<A9CIc>5q=kdfH"4W/1p@$a*=6@<<qZh6;-cXZh%j"NidTW6ZIY8*<''fD(P7]5oj!:i,u),*t`;jY=B
%k&Z23*q_p"#n]]7N[>H13lS#Y+_^"1<LATNBXjC]*WL:>*Wp>AZ+,%-maq&hhhQe2c1hu-5,68FbjF,ckj7_rKQU<dN99rD!<+qO
%T@,g@<9liG0bb,OImLh7%@nTr&jCr%6nG)E*?gW\<!PU+Ar*=r[$hi$+,2iX5@RIdH>WUlCABmFr"sqoVPJiAlK>["30ddCF+`3R
%fbXWioFEFra$nAn]&^A.'/XhQD4dI]"H@RG@Uqp]=1sG?V4(;a)#l@o%NAZ\0V(c8)Nb#am'$Q-+Wgs\T-F8I:(X94Nst':KnRRj
%T1<g>E5XD_q'#>okUkJ%H@o,'-SnegLS[IjqDJNi(*S9-78VEW<^*8Ca>9T=-D$:R1sB>LM=)T)%^VNFfm+o4ESg=YYF[1FS>fLd
%h(>Z^8KCoI+r&8N\6mo0Sg4jkMWd8:7>-%$!U[ghRNc:H@-dq00I29LT;K=&$Rb3I^cnj\+[,t-NPh4+\XUm5GKhF0a^aj7\(IC`
%H:oi6a'%>(NnnI+lIS.e@Y<:$Ko[#94^We8rp?$[\,e5jeW_G2bELs4k(7=%>`f@:#$hM'e$UY9_)P>l$X9W.lSWA&^9eR*WJg@6
%eJJSRr69<hG8a';3jFY-:;3.m]JQIiZkTl=R%,%/7[IsU(<C&TFYEArlTTVWJmr*tap#j"+G_^/i!+bW^:'l:g=Lo%K<6YEEL4"D
%$^Ur7<NEhI=Um"aB0jQ_-GOhFj?u*k&`M$-26ap'qsOIZkD/t_&b5aE[Y^WYjKR_coVS5im'+n9CktSeo9]/sLjBQ8d4pIRJ[Q%C
%fb&Hj7!X96K"jRj1[0C583Yc5G2$Km;DH;)P-%;/P(i39\(cIX&"c)m/!Y7B%f/a]1ikF+V%[lbF%ljn:+=\LXU%CAGP7s)hTC<o
%<2[VdI]^dkrSu`LE`i.5c3bCk>2niMOd3]n^9K`H/J:fo_*iS%PR70E0Wc]VQIh<;*807XLDD!d'p1e=/C1L0O?DFUpNrZaHH"3i
%n,`WOT]-JEGmlfb!n7;dq]">h!R?$7pgU%+J-ZQkK+YaMJ0@Bi`>I/#6pCkeaU%,I,6FL9_$F?AGoS`4R#ORNK,NJ-Ui&0>)c-Gs
%k(DOqM'&F7&<8sWRNV*F7Rp;e'nfbOBIo+q$AaKfH1Ri1_ntWac_ra$htYS#*jq)H/Z**+n@-@fDZLk`a;ak]Q]#SASpYZV;S*b9
%4-><a#g.BQaRWqn//\*CfW5>?5B%7?2[S9bdlGBRlrORrO&F&CGFa60$hU5)$5nSi6pshVU6*jf_0kl#7sZUJ4j(6p!cM0FVRQg8
%+'c-p),R/]`tgsC.PFb;:WBgjX'8-op>h$Vo#Ntmk%6XGd4uob,Kri;/]`M9*ob>jUB's<;T6&FB?BI:'anbhVcbDl?P"?&/+c:I
%]k&#Ng&ua,Sd@BI.XLu<b3g!n*khAuL6Ol]kWB)qhI/kgQ9hY@Q<_&G@WM_j<;SLNf6/AH3He#U?d8V^gfB(-'tjW>(X;hT3jjg3
%3`[dc\erRu'OV.o6t)Bb0u7Tp'Q@_(nCHX[=1QU*q?2]HW]$X&#j\UYP.4.k#*"4kV!$N21uIq`Xbg[Ln%1Z4O1&EB*/qLc*NJfh
%CU<]aMGl!Zb>1AG-ku"s>TPHqh4,1\VR"P5ASHmD!gC3E_XrBgJe;sF6!64'_cd_8(E9h0qS.&!NgDfKoP-;ol6a(a6!9CB6ZpLF
%idE/rVt;DjA<Bc'WC`%(Ah8<b)b0IT0i'""%2p)aL;"P0TgQJ`+[X)PC=MqSl2cRamEqS`qU03ig9T&eD:ms`pDQZr[LuXAFPKd!
%iml:do\m'DGMO?n&]YO5n[7(p20s5QV(P?g""4kX<D/MgceSs[l\pHt!!bm*<auqVU(a67cq8uR,W%QeFaB],"&.eaP4@-p^`FIA
%4N)co,bR8FiC8*UW!$'M0:XQoH-;E2-0Bdc3+JPu1,/l*6rih([#(2h,)VnP81-`f"gG<\3%[V)iH9!'0eUP>!*_:V']?MJ]((k(
%4Q$e^fZ%E)npnLQ8TOf4iIV*$Cbmcl;rn0o!MPfd:_U].;5kUL5H:KR!s1UBCRs-W(:N/,,10Q$]eV]4WHA7DSrfpA0b!3sk@lim
%NG/)FhD[.tC7CBt=?#eb$2A'&oXLL]^6?Tk5Ai*&##l<*bKae;*#e\?4l=a2Ho5_k"Usa.`,cM%@Ka%UdF1%u4;ChkW?]re>0iK%
%5U*.`pT4G#h-Jic5LKJ*$6*B:^)J:BKhbW!MhE5Brm`fFT_Rc19/j8KEOaL.FrBbPA"h5";jQW^47uBDlmj4Spt=%*kU];0Vg4P_
%Y8&);b;"5#QFB]QM4=qB<?Vq>(L:T+-iDdCMU1n4c_9Bc#kJpk"p+$_A;a;9gHSSMWHH.tL-,bWEn"B$A/kU#/Q$%`jpsg3<1Sl7
%BjNU!U)D=*fJRtt$\64(c_B\F">nd66+$H$0Y\$!#/ep+Lik\8ID<9B`"^-14`J*ERe&h[GGRHQ0TIJTrB]Nb7&L<06t'mClpail
%&3`T=G.`CDNW)$K_4bQclOVpXi-)ZBlPW_&BVG)3.u$I?,(T_caM])sG!Chs@g;ES`kiDX'<8BJN[Rr\,-MkLO=CA>7?i(FCm[,n
%)$oG\Nr3X40cE5S-?bHDr?VF>4r+#5$@Y_[^J,P0:<E)UKdVn\a#Ms]4Mf=DmY;,sEIM5Y?Gln'maYM>_.7nC+\/s/c*djP+E/&M
%hDH,b%gL0`k,JC4n!/;brr">J3iQV5QB$Bg`:;ZQEsXs_8SSZ1257H(%u`/-Ym%,?0iVt^H#q>!%=E::`r`V.X$t\<3UVM)M8]-*
%k?sX(W;('[*hAnE9jgY<RE(GIJ<Zh#Q?"C>`r&*3B'$r:1)7r%dY'1F(S+`C]9i4e9.HZ0#1**_g]&)q`d$<u.PenA(EthWn1-,g
%Q0TV<UK76R'GPMc32\g"in&dJ"_08i,;g_tAXukYWjg^D1gEO,4lfWO"J%!X`\]=4+C(.^q6'(4=s`6I?.9]Q)lg%Y8OoXGlh(rc
%`GjeP('%["DUD^W]"X.<O(K^'*Ne\'"0V)Z2kh[WEF$an$FP=[lrofl/$L"=Ko0"`j-9AldSm4,E)6#111GWMKDH[3lA%b7Z$+r\
%LnbOfe%Vp);D?'WXsaK#DJ^k;IP.0-P_:Y5mAT#^_c7t-<_DW':>\ugA7GG'8RVL.J#!o<*[(b+cJhCm\h(d_'Y7b?3DYc+MeW3u
%WmH\gUf^d>PZ)gs]5P0=lJH7Fmkae6RJd*-RJ\.g]$1-Q,'A/=n=<B-.8mcq0q12!:,Al>.B$ePJhl8R-D5oNf]s<iCX("J[$(1*
%#DF^B(A;IN.[emWlnUFa9GTJY3R.3HmUV@K*%,q:J4@XF;<FP[d&2?"F'A#+L7M-U+]I\i,]")mV"V17f%M:ZT0B"p+%u[Po\urb
%JeO69$[\%Cj.K[:\?/ue'_[BKAUVpJ02[=&NGMR<P,9oYD""OT+`&T(^/?>Q@<HeI1J4!;S?V4&0Ti!0l(BG(%V))494Rd0Yq/ma
%_.`k+V.BqHWSP2jHWcdARoMBOU>_!:4W["(;[3N&9Yhu1+so*:>cle7frB2OfC`r27C4m%G))#Yr@?AeS+HE0,T3AtT(r-uWX8Y"
%aZWh2l%XpEo4)KSS4Io+,[dG`28ufii3'I5]fI3(@aBLG5H'#V&/ESt%XV>Ro!U8hWmM)<VdCQ`3(9'0AB08":WZ?6JJ)muP(i&U
%rV[K22%L<2+UP*e&3sWO`XmUp4b4['Y'h;dcAoUj:Tb%WHO9oq/sZti`I":N4.Ph):ai?,PQOhZjrq&TR^?N(n!6,M*4Q=ui4Kn'
%'@in'>fo?6TB%>7W!1&)\n8C2pKjc';-S+UF8`tc?VWU5+u1"##+7kYGmlQ*HX>t^:sO#!=hFi*>.aStc6WQ_et$&8Z>3M(qU9aE
%Zk]Si'9cRLn,V:`8#54PLn:k[(o`"ViLajO)Jf]0,#ea.4B3khaZgmH[pO[>2hHa/Wo7#9@*/NF:h6'!;dVqW.Pu(T/L$ki,Qq6n
%)IiF+<)kHq&\U^h3Rg"+?a+BV[i=R!bWIdNa?Ld140LSiQ!A<uLO1:`TE42%H1Yor!B&h=\VnNOM0-_dk&=9!FD6"\ec_>.>nCBB
%/gbMj!F.PJFA=l,7Gl=YEc%@V4'?5S^u]rL_!l2+Er%),G[KoAqX4[dQTs.&90i-.G1M.=f_ZIMRn7(pIQ6`e(nIRh0;jXL>,-7"
%YQiGlobAAGk@ssq@<[#@GJAmB6X<iL*_r>??sD.1dEjl/&RFU7-07/T<f#rX'MG@QiD;i:EP[-as7h(Q7H[l74d@9Vi%&guMBB$`
%3*C90hR#E)6kMlD^Sp8L"[Z-DRV7/>Q3ob9:pKB0j3S/L6DYB51D!j/[LA!NCT/I*ll6QVk`D,7X\:$>7bkXnNJSD[d=8U_Vg\'V
%f`0F)Q&ub+$+9o^L<O>s7It@5Cq8Wf:oYC+n]_0X,+/X_F6+!$MLB3Kq;,!B2)OOG)?&hla58!%IsQ3WcZQg/Q%g3ET:-L;,M83p
%4<Nc/<rr?rjn#A"%j66JqtQt/P7\k_bn#W[^S9^>R`'Ia!E"f*pZhEa%rG=AYJel^BMOJ/84[#Ze`gj1oNk]8V0Ng,XYtZ(Zc9Cc
%2=InO"VS#3Za82_=RA`S&X]bZK\JW^eAe$H'bP.oBbOer#,M7krpBhjQQ*;8oUhTE!_D>*.%WA-8ShM>Tt#5#9W]'^$8elG;2]"^
%\fo$j;.A'&pN9iJTSrXhZTZoPeWL[Z>KTABR\n>()St\9-BSg7J3o@?pK,/Kj<E1VmZt?)]sL+!SY]=lS[eeO)QI&c&q#QIDSVLl
%rW_J4"aCJ06<:4b]<]nYOAa>Xe]+T9?)r6<"%9^=9b<5Ir<j^4-o'o8iN'N_g\!fLTG:t,Xr/uLQA2sPNBqD&]36P>?3EL0+YD,W
%D=hDL'I:bZrH^#CF,S+LaBF9oP;$$S.;jMg[7l+MWlMM!^fVF(g*o!=miNH8J<`*gSY2@H_T?8KH3-f17J1t?H//1Fes&+F\#==-
%5d+kO<#SZM?j9K=TH=n8TC.U:co;i]ZNA,HInp(oCQtRq8'uOa-U6kY6"4pVoC`3A?XfJ&`2R4ej%gKF9@rcJlH9>*Z[%D`D4nBe
%`E:!t:(uQ-qXV0`73YD+@l;1Xf+P%-,<`ETGdBS)GQDE0FB'2DKo(O=8=$D;W_YLM-2K70Bm*,Q3=UbPiQ#59@&hkQV6Y1lbfi!:
%?u(X&ZOYS-dk)T3K.XZa0PM4K)1Pb%fj.5R97>YA(0SVc.d6gdjl<@e.^Z:W`9\qLEJ>tA)N$u@>UN@i9tC6+4ff9K!'h9Z'QHlf
%L:e]Wdo.n6>O6G\U+l)T;IZM,Q+!fG'$:3YCSB*E!S?(XHX*I,W+f##At"T`GS)XM!iD>>S>"qJ5NH=4#R(M2f!pub-%D[Fl5$&u
%)bH[e1@9i)KS6iU4D/9,F']j=1o:Wj7uXLPi^b"1PUX@Sm"Y57d^G0Xno^ATa<*uX//q)1i*(>;OnQC<Llh:E^sU/c+ZA[:CZ8Pq
%!!bY7=3$.X/jnG#kEc%ZL2jA3a0)'6)f9h$K!>UW:u,eSiA-*,3.oG"g#X(*FP;PT9R4bqX5)i"f@OGlCmkmleTnB<G<`_V3OCaZ
%NX)RNla'co]?9a@8\qL^lpd&NAak;uK=g7;mlPZ!E:*23e.dh,V3)h$S5/A?=hXcN/Z3&CH!$\3o)LX+:uoF8s(GO4*<H'Y!W3r=
%r#Gh9*<H'Y!W3r=r;S5Jpn)5\[XY,:atT9Oe6C'errB`DDY;J$.X/j[p`CRLVARJl^[<&c@Mac1EHKD4?iUiQ/@CKE75!J7drLn.
%L$EP;>kHPC*4#p'iIUK)r#5fUA+K[Z_m?X7WLZL+!sIWY`b>"?Gt21H5Q+4q]3sm(S#"eW'ZpfG..GB6^_2GR"2O)_<;FJaQSXIl
%B?SNY'.3t+Pd4>ud=?LlL.eE^0@/poM)Nl]?"n[#2;:0/'CC*JF@Q.@17;CLR+8RCcaeqY;&/TI6WZtQH)"-`GC`FFE<dL,d>J*J
%]M.G\;PKI!/:I38Pt.Q.*dojfXL),1:P>0K2:#OdqgGht5Ob(L"u..7:>m$X9lg,mXtB7AKOB)8;[1A+_3[obO"]dB!J8<jD/n:7
%19g"r;^89Q>`o1S"^+M]p!^r$842'0#teDYLsH\pVS:`8q=:^e!F9TL@5L5.0[(a+HZ""*'P47d\*O6G)7Si\Y!g\VKG?mJ6`P\3
%k"Rt`P'08?8h_5fIrMasn4?<D1k6HDQC12_;bASm9u%R-D2_tE6"\d4BV("F]:tMSTdL,KRT?G\e0G_jmg%F1D5[np^i_A+-m@,R
%2<]YVB/U]NZpTW*5/L\2P0,;p'uVP-p2EtWb!`@dV'I[Fb;L#Kpo=BmFQ,S[K3Pml*25AYD31[,ic:-kNQnuX?IBtDO?,iUnq5>V
%V;cRt*j_\M"Y]t]PcL=0T:tr,j(YY:'=W%oZBhMigfYPIg#*!Gc/nriAHNYL02eO@%lRi_Lu8pd:Kioe@.T\FGC-Wpg]Z$?&W=>t
%4&&9dFKP&"jNJ.'97Kab1FA:)&iWk1+k"kW"(C$e%$OL17aTIVKYND2aQdB9RVt*,o!Lk"6u"P)f0Ge0a73gkj>tHq)Zs4ckjs5N
%/2;//;rp-;eF',iM+OuXYYTSZ/]3gjFYLn$p!$2&^l&t6O+Gsn8-W_3jWc)!Ll3%ML34nFC\k'L.gW$,STtiM@osHB.A#\&/,'.0
%&^A%=/+'+ROSFCuh*1*aMhR7I[R]rZ#Fc5XYgNA(,+3/(&&5kBjTUCL[?EgM7q&(OLQ@U<(XNaS(?AK(Yn%tkFerB<j>aT)>kPY%
%IQ\`C<<4G&E"d2UFFi&Ugf7A+ZIF5oXWB'G!Ad&D"Last(nO");P&MXgK!K,4i=,(LhYkYk@Wr_r,1U>%<YpG%Q)'jTRrY=6+MB]
%8PFC*G1kK$AgK;;R:SF(kj"Esj,(MX'QX.PEdVJV.OH_RT$ZYucJ:W;I3]9i6$K),-M_4/["]9ppXB#QhY.VAcn5J4R;!IAW'NR'
%^dX$#a[j)uC6EpYOd1)CD*:s3]R&ths7LIN(C"<D@ZkL*36"4A]`fH]fqQK7%)&BRIF:_i'K(7e!2Ho!@"D_4<uA'55t2]He1duj
%ScbuRX7`Aj@#bO%X>\/mgo:Q;X#c"%KllaK`St,9in3MAjgsm,O.[Mdfp&q'ge'bX/'h4]Y$h1GQAtI$7S)Xefef#r4dSi!7$XNF
%NhF3Q`5ni=&Efi:s*8>7NVs%J`O-%%Zj7n,ZZ0_Z118`M+U=7R0;HJ<_[/X5%FuV39!k)B@N"<b0EI8Fjc:%AXR*(_,;ZFjaMDG'
%g'Mqj#n*ci2lJZ!Q&.j''YI#_%@P/o.4`478#OapZ&^EJCl^;@,j>6W\g_<,ndj@<W#+QpR*HA5`(qGrd<uJUiND!Zb#$j`<QCZ<
%Y'Q?md(mqL+Al++XuDYPF_fHH"$"FUia4"0"K?cKU/Q;1[Fb5T9A3P>X/A471D6[5'06t3#cq665$2Ji"&W!lT][V#HQE"#`)2T9
%J`0%Rm4,>a/'EJ%DEH-\;.WA.o:!AG$</.;(epO^9nW,(dAA8/Pq#SBm-UscX>TH&BreIt=quC/'1f3J0p4:dVf?b-N1,Z!hi+^A
%>p%;-0fIF7G6RK#;/-^d!5k\/Q\Zj2i;[j5\Ppc-W)P=f<r2QL2gl:X])3hJS%$E4Q5DcUSBRQ8ChN8.cI2JiZ?H@RSEs\jdC;A;
%OF7^#=ZMY15b'\H##)f2S$Z9f(4%#jC'N2"`8T%H3HJ4&.nib%c>4Hpbl`lL-o%DLaTI1/H0>Hc4(SPP^hW%b?)_T]YlO><RI\0-
%(<2q#7HIe4?3&&6<5":;<uc_Zq9;_If6GC!79saaH,mGRRd2s*oIQh]6i3j?.GdNC$P4olX4%@[(!<6?9T"DM.r1Y)/226W#=ZnF
%of1RU#6G(Mq9.6(IJZZBko3meJ%bgFo=YE2nUH"P+b6R';Of#7LPgl,BJiBlf5=BQ3;t<mPT.(0UDWMSTIm%^%MZdt)-W%s$X;K=
%%.L*X.EQd>ZUR:ko&NscY/.7@XD[_i$[H:i/J4AMm"nic/@$c[-;\c9&p@leUuZ7WLbrtK][^^)aO)`\'Pf_D8t#F2c,?Ye7:/Ks
%\!t`RPEma)%ZSlCl`8AGY&R'^=85q4ln)+Sdl1S>O=D:q/B_<eQV@<W;86$u/N;QpU<`bQY@#raE/SC9<3'"%:ZDE9-HYo[rV@@C
%R2Xuf)+59R9/*]"=Y70g_&o-Xj'<i#Q,]!u/<NVKKSVR\4?,+q)"RAgSQcaUh'BM`r94N_!lksj80\'.?tn(WTl?p!!4Y'gePB.e
%"sCqOe46u[(eXgbdu3ZAeaST,I";`QM(DVp&a8;l&\AlJ=8)m@=])q=h\E9edWaq(8c*K^kGjZ<1gCBYGe:)nNh`..,/i&*_\"ls
%%jGFY;@XYEQ1+8ifX6a"KcP)5^nI`=HnfulVkYZ1*Of#"\-JCN3]MG*_qO%5&s=Hom2^>U`mF5/+qYR9%F`D3H+2`\&JJrEeTcm:
%E3caOG;i&BpS?fAcVY]9CiN;e9(ibs6Sbi`Hkg"*W_kKM(4FQj*EaRiloo`)l>1'r+>j*LcEJB"66Y8Foo17m+/U^tA@OUGX=WQ!
%!13R"8b>'4(4]h3h,9i+5B^mH&uKQ`7T.n(4bN4THuXbA9Cut<:CVA.1.m8#dMBgY/\/*?pF82@(+C8OG+o6fhOcigZohM-qk&Gg
%&1l+A^'K-^,,2&0nSs?g/SVg_W0i?b!i;U9&qa=d<VW`@RWs-54tqXqVY2*HW[>BDaU<MqK[8I64L;P33Z)a)&TPsT<&+;;J@Qti
%MQ"<)D#kgmfDA_n?Pf>haFH4b:'f]W=blH%_02]R2oufn3eD\%YD<TblJp53J?e.Nj>kMoRaAPJHhm!PEH/r<E\$g'[et9n$;-]f
%mhnTd7/8Beq1%FT"MZ!_@sBfU]8drXqfAPG]l(Xql2JZ14#6E"rP=j#jFZUfp$S:u,/Rig^\%F&N[&7OPXsT6,`d;>MULL=$c,HM
%_7]H9;MIQYJPH%c]K!3,C(XZ&;/BMZZt)<RWY4Wr&Pf]Yrog3X@aOU$@!].T3u8aOkb9aafm7q#LGhl$fI[dIEe4.(_dHs_/u1hY
%,kS1(FsH9,"f'q&-=LPjLN<>6=FJf#*],6CHQ:T?'l(^=9>#4t.;,Ta;JFo!ABB$!@$nZ.X50hD<VRQAj:Oj@CK<MiT()lb;*VcV
%k;YVfabthu^5i(g/1&Z:qpc\7RT>m<RV<7lHcT0tg0<PdlC`t;]>'j3^aFf,,B>Mi07#UZaKM-D[nN"<P6Au!ccbI.G3GipFq]W.
%][\([j1ABZ`?GPT6hXA+HA"j6QS;a[]7<\[ios6F*RA@/(&>,UiV>KMlK$au6Fud3:D5hV#aO,,jZj\lLAp2]j+)DY6a>7/U]dk<
%SCk)"_1JuX/.O$@;<tVXo,=MmUc?gPPphMh+>#M!C=&,$*j-op2rShn0fdC0RNe@PC/R_hho4!L3^(s7mp8#Tg(6fX&5PElq0jBk
%[\S6j;uW$@c[nS;8L$Z&IHeYYI/8Via3uC)49FOTR$cMA7@#d7\$9@j>4B>Q`stDbX,<:JTOKUh/SPOm2/&.i)W7*#>5.rLnoL@<
%\r!G+dKZ19!)CLb'm^D5+[!N];XqgP#srYkD2:,^8=lVk<#<,^_P,?GH:)%86s@`7VCj>;LBk%0;Dj!rl7G,Cg;`UUl8Z3*2J&)A
%)_acUofCDMc"\:\kVi=CNI]9r?-Oeee=pt>c=B<-;Hc)<-5*#,"B80JC;uYD+Y6<",EI6W\#ISiAAcSMF5+*ISnTE(eD87&0"c(V
%&#G"G^GA`0K*o)XriAS5q,,P\UdHAj-rM5<ZM$8!ZBL;-)CZGecf30rDo,qZ1ed1loOm)/hU:,.YFSPNNLkpePMtoalStL<Fl9Q'
%6%u19:J!N54L^u4>8Tc-O?k-ugj*OTFZC#4LVSk,0C.1&e"B<q05G<>,BUYhM3>:a4V]$"O=?S;$oU-=?nY03-$3CCLC=%<Mo,rc
%CZ'[e7stHs>%ED'f;ssTpoZt=dGZHF.]>[>oLDC8H*!T-00Z/Y@=FgCcn_7fjKUg)8N7EsM=*\Y<L:(F15VSB[:ZhELGY3p6uKK,
%8JSH25a0j17p[>-'e`<.n32DaMOiG6pKE8o%eaYI4QkLtK?>'WX!f\?WGB5EfQRqb>BN;VC^I/i8LVPN[@7s?*MthrkV(G,M#E^1
%=+>q+]$:L##G4L&Um*s8K@%p2f-\O+pLfjo5fD.=O%jT&a/kW2U:_og>f!dlDS+^-HH@^3Cs`DVo99;-cAaHlG?/E,c=S0*:q0V5
%9i,hT_/9Kj[j^fH8/8t/Kr^R0#NO1&Ab\Sm])`E<+<B9ljiTMB>!#)hX""hQii)bZW$0c<ZRDHDPhTeR#<u:RTDYEf\s@Vq-b\+X
%;@R>K;"OqlZ06PXLh?3u>0qY^U15u@0\mVre/76['0W((I=DQpdgs?8*I6*G2T:>;Yh.i3`Mc+F-bjmf_k12k"?($Ta:uge24C<@
%1!V6_BO<*+#s%(_IU%nD$Ii"3)e8c$R.ETL3rQkq!g'6%[7^Fge-G3J$>rB:NCo5G>*(Z`rnJRk=WH6[?X:kb#FGA]K1C$Tr/_jT
%"o>h+^=H$Cp:HF#R9K3n8,,8BrO:<==!.rd2t+^c=VWSCmoE".[btWC%DfuubkorJm2!,q/cgG0hh[^:8RqAb[ANOHrWFOAQUCmk
%(1DXsPE')k&Z&m\W%e^+dc\l(qrQIE!S(t#drPE11eimbD?WXTD6'NbdA(HcTQ5o3S?V[Bca6RiE@O(:ZqU9[8Pc,Z5jr!D4@U<T
%'YS@VBVR_6A%6BB1*L(q5is6SKC:]1&?$=_0!l:X$=m->a9Df"VHXelcu(HaDX[Y/<:'[c(.m8tH2p2G6G42IQmKaYr<TVCfdbu5
%<Lg)=16AAd<hd-e5!VC!;+\N"edj9;3#i;Ll=CMDglLYZim<s-OA=;?;cPBOWg7'[9*\23Ync)3?k(ZKX"AHfP8\AJ<>Fr:Eh'R+
%..gef",/7VQ4mbqN?P-DRZ0O75Rh8@Gq>@Rb"Z\l:KKR\!!\'=op:r%6uAZt")'2t(!Z-[h#r#O5<oT_JMY(B28*Gb"Y`20S:sLI
%88s^F.Wi\`#SG)6#0=><@ZThF2hhGW!=8],*U2-,\$E.r0F`0A_<jJq]Hl2gQBsWjE%,%\fh8lfL3W)7\;7RHO9#tpN3[1T=K"fq
%1n-O8Jh.b^Z]I`Cg,Cd&LnPHD*e`)uoAbuTNS<&+lXEaqDIbRk/+@T2/mad275`!2f]o#iI>WL^<$L.<I93_JffaELqt8dIIQO8r
%K<K;39.P6p2bA1U#/]%>9,]*Jk3Ou,>q-qW\,5QZ6BgTmqsN"m3IcJqnOq(*&9tho0uT9E0Op.79rZ,bi@XcVH>Qb;FYSjuB&b6*
%,2.(!!siDTXA+7NNFnNS*.Gi2]Pq%^i]JDu/[tt9.07"_R/k$)d:aCpXO8JM;?IWog%0i&*&>&02hUsm^,d0PAb"Ns##-5+d^'EA
%JXak#D7o,t(5/J:6bpr!$2lQ&dYi/M1gi1YE35:'UIu!!fJlf3pi):aPq(I!:egU"71mFO-ARdV#G%aMRN>\,A4+at^q[HIb3hDq
%0\>Pr78oMJd_\W0#c8"OKYJj^).b41GsXm1;<&K.SE-KeQ-'PYU?tR(o'KZb#:MQDnTfL'gu*F4G/,SIBk5oCF?M*0V".oJK;Z?9
%GWd\k7_b_a=i+6TcKQ\/j)i'qc2<ZYF^S9SB"m,>NY6$?Ga9\5WrmX7+A<+'LFsRXMSq[q.ZdY?/ql4Zjpa*pDlP0?)#MZi:hiF9
%X!(`)ORQ"X:h=f+oe3ca[juQg@A$%sT_s]^-UBcdZ;3d&W7i\b,p6V1JHfL6q828F"\(ek?dS&V,7@+V>!JJcq1hCD+LJmrUonPN
%4QC@p?H<ms4BY1a1*WDYV1=-Am<NL3C:mAPDHm^Xj:k3=UJ(@gRp[ajc*++fKJIjWWZEk5Ptqot&G;B7Gttt=XgY6Y9.*JK?5cZ$
%D[@8]]?/L&oe&^-U4DQ"Y_:"&F?+jS16HO:ZGZ>f].jLGT+\%G3q,&UOAe3bP&NujO^l$V^aH'`"7j5Z4#k+Ipd6h=9f:K'W=g_^
%+*>F>VpdacXf)1YZZ6.?;(BB>YHm9NZC3p+*4i=!$q^+Z-+Hj^>PGbFW)-ZB][C_J3[]53fY=%Ao=5MVo]tP3fsA7*eDT=q>u]>^
%C4C5c0W6<&292p\q(,tZQ-Q<N)UqK6lKV"Sp2d>oW9D6the.d*W$B=dkGU07/76/W\KCM6TP>OW*fJPO04RM;KS*(/h:KIb=.&,/
%UQVaL3J#tf[YkFFS/N)RQ:(N)=nPVmJ`66,ji,mW?9.Z6Tp$"]JLG,d@Z+k-&k"3h6k_sP6%&;;83K+=i9t-iq"120Q]9hkdqo?(
%4UqOF4>b,[_lPaeIY/%h:8NT5435X`'L'V2T+upeF:ct>JkEsSV+hTYcDEF<1F^E1ng[2olc1?9NliZ(7e/,aMNcZt1!h)*>DP%n
%S$oA-gtmpYcYD[MA/^e8K,SQ&WI65[5&7o!KfCWG7]"UI\b/gcrT:D%nP<+5%q^5D.qR$8);qf'8t+N9F1Ce_f:'(Rf3*g&Ftm[,
%fdiA3eeR618;Xb(%?OpiPrS_2L@E$=BGO.P@&\g3ApY^EjU"b9;@!CI#dZc5@'q:+YBk'9WM\3Fi!MlGpd*R^cPs>IL$31eUunL(
%lH/>58tnVEL"oBFYdHnO5E'\*h@]>7i[*S075lq$00necnU)MLmk:XI"^Cr;bt27$<6`[?<YtghGJk;)<3!6k+=joZaV("m#.Fko
%_.6C.PdEJ>WL%OI/[6r0]GWt=T#^nO]%mt:O$UH>Qggc*@r^GKVaTCD(UZuJTGf/p^&=$d%q6i5YaR;<Thn.qQ\H1EQetNA:B4#@
%Y$qHfX,l/?Sdc6.k&s>gr&O>=g&88+67l4b8[;c<Q)$4mgS)&a.4Hpu'$[>X[R@H3`7-VP3-lmY(_to$m72F*DK\U5B#_uJA,%>O
%@\#U,j*$\nQQ9%j>5#A0I,!6[V-qc?!s$':4n3!Xn%+kCA/<h=m6U$!kdb-SO]t'@-2<NEnaTk^LC=r3??^juia5q+6'[)UACWB!
%561u5D<!@%rF%h#>=8XU:SLXSYh:5M@c6BX.Uh0l7\\4%;Gm$fP<n"#Ar/j<'c=BP0bnf7So(XW;uA*nj-_NK5B+A5I@-s;'6Q@Q
%QH6CN'),H/6s"p9MQPX^$jO^,[]5JcI2_A&R#<8(SgVL%$7VePWb?i/`cGIliuj<kEpYh6&!HZ0`K+a7Ii@D;m&.*g,je@ZS-l#r
%Qg#YR*Y9;r913N;GQ:'h9hBo0BtUoo:O:*N,SA20k;rO][)HO.o`Kph!4ATiTC0D#SA`son:@ogNWcY$WaH?o<8Ac!G$WG6_KT'+
%5BS*C5/g/^j4X56qBKFJ4flai.edq>5AC?)rIQ`$HR=5>MAYN>6.-XHVQ]LB(h`_2is)aD-b_N)!PcF("'fhr4cUZ-:HV-tqM=)R
%:DcZR22OUJjG$"!6X;C-N*i%7eC7H]J:Y#L$*-N2,JePVYR(-e>aY:[C_dXm2'D*g/<\/bDTfAQ(3J?Kf%bcQi^ci2]qVOjZZc1G
%A,TYjN@MA&))/!)4q!6FeaZM+I$?;E+t$(gh$861RN=4O`pUW?H4;4@^AV7q=;Hjf4bqNNO0\_^k@:eWg\#5L[3aZB02.1lnE/VE
%J)DRR<t\t%Slh%$*otT?4i>P5``INt97u0q--CX*_a2BA(0aSZjC`1F&g6btOt*_Y0c3K-RA7ZN1l&FHpib!a8-pktFhja`#J&/_
%3/Es^coR!!UI[P(kYE/!N+'9PEg0c\K9b6s'+@(>[D<o4e*hJ]bfhJ-6Ea\M'gZ9'&G`%N#6BcsfGYPc?1D6[p@!9WK2]_q#\Z%R
%W(;Oi<abW$A,>D?oM['0_BR!MR[iE?7bQFa":X*blA>AMIKl..ehagrDpg<S9G%D;?[gQIW"c*m4Tf$*RsqS5_)$$CkTtM>\qT@h
%.]Sc@&%$s,cku*]TgAhIa:$)MM+.e*.kfhHB<*fOB1>V+W-e8Tn\qWGW+Ynl/A>).T0;k?o,`)=K2-mFmuMDg_7g77?ar\4@jZN(
%OBs?qSM$tIdU=7Ah^q9M9GJVKjBom9D1rQu4hrJC2s[+;3_LCt.U]irX=h(C7<dDHLmYG^b0!Z]WsY*nQPAfHYCF!A(-jT6'*2\i
%5^('WO8pg%"I-QP6B@3WLoXh`Y]NDY7JE&!f0c?)g#!eY0"ooC^ubfT0a+(1nL4Kp,so6A#A'aXa?kFj*sfdjV\n/5l!I.Lq$AFQ
%C4,+aFQs!')BeKXl9^qr:;eTBR@K,/U<J'!\P4(Qgu#hpD8KH<G:QitrTY@Feqrmhd]0sg3AcPebG-/)mIqDJA,r&,TTp)lo@-`D
%3UhW(&#T+_bd7h.'%)]s"d:::;kR,a3!,tEi,:*C?s6A#!j`h<0H-&i@%S`ER8<G71:Oi]c6G'<"h)54+T=1pSU^W0UpI9VfD\k%
%eQ97as*Z).aZs5+ZRkt/-.PNa1p4+gjk-5DqlK5*A`-(h32e:@'VD!TlCa.Xp3*$%TP(1dV5*\L4?^;TYB]RBYWRH.8"f;^*?JV0
%_t+H[V!,<Wa&5ht+q&tc$2E#G))]^48ATksA.R-oHeYu8iQS^c$#l>k/%,!8SiciJ'Kf/"Wt[5+o1;1<H5')7Y]peCWb3-*3omSK
%@QQVu`bR-oGn6^DSTioDHE64!L&[f/&@N1&G!jW@Lq4D;)T'PRCChRU;+)+8"Aq`)]>QuF](b<f_QZ\3RZa&sadSOp>0(/OBWVYs
%$83<nl.Ce8)CSIigQFsB.eI?aVtUh*5D/eTnp^tJhP?ZtHKPpAnJ)b>gPVarJ7\3A%LBVJBUKk7P7*i):uu(t[h./U,*c+.+GW7E
%DGo\`D.oZ=.gEjd)&9iMC<@kiT$%se7mX/nJ0[-fRJA[s=rW`(eM'_:QHia4W%#]i$",_%okm:ONsn!q.D:7PB]a,p6F)Fp4pZ!D
%a<k18Op])k!aYctLAhQbaRRX_'pDonKhE7$F0!e2$^Hk=,[l"W<9Ch@)m3m:1sc.)O71gTF7K""r?$9ks0A)$rGRjOj!SFTY.[0O
%3'8-<`AG_R=>o<NI6Kl_jjDAUCes`JI^gW+eH3Eeq2&I:RtjmG<L9P$*e!DCfiKrAXl1Tu8o,ZcBhO9rpjU8!Vpf1.l5)LMq`PrG
%$[RmsccqKEbQbahJ`mJDg_upG*O+jt/rdOeP[Uo&,hn-jas;\Ne*@tQjWa:eLH9[Sa8-`0)#D>P&:bq;a!/(/penY48nl%oO6a9I
%Ln4N50FF5Eq1p3P*Z",'\!&k0Co9nXc7epp"A;q+Qc8,d_ic?X)23`f7K(fUM:CNM[jm'nSCr0ZN4D#p^tajB12e[qC/kRoJ#P+Q
%r(is^.e-74m"RK_ZS>J@An_<U%rUQRg4a.=SG)&0lFmpIjjZ4aj's.jGmWA8YBDXbX!:CFO/^l`3X)nMVk*t^c<A2/k_\7Vl,*GK
%nOQG>]HVJO$8.[p/hq(1SM/;^qIo#62-P7l)XR05n&a"tG60X>MN+6GP=AP2QSXns_cDHV=6Z$agjmsn'FlsDN!337*'NJd,q3Vs
%)'!GG[iE,dT%"`fMTe[b4(iFZq(Epq<^3Im/Bu#@+qN@=8uG[MAkW/(g%fK-cYD9"D9'd_n)Q]_II)KjYN?Y0GG3pnh%6/15$p`Q
%<1afn^Z`'U[N'PRo0n.Wh%UW,>!D.1HWr'Z'DJbLM[0/UA%e2lS5i2o\?edATt2:CLL?(%$ifq`MbB,sq#5Ta\?Ap+?,4S$X3mCG
%G/6C+k+Ehl3`1UI9#:.g%Jo0k.4[Wck`=c95F1TI9K>#rE'jPSMTi]hn7UfbY;GhmAopQ4Vq\1*Z`fBEXKdr?R8Aah[`FPNf7*;&
%.IR4uiC2C6YY7#D-e9(\k!f)]MS>9H1I=H_h+OV*34M=-h!HgtkYO?ACQO"rP8+tK1J,#h,>B;t[!/]LSS$SA04"$[nf*J5X%Lg,
%*S$G%n1%G7gaX62+h;f\hrAjKEr7EnJU!^q4n1]F@.]s)h^)Z&C,&"RIYBuOk5$bP!`Cq>^&_g%Kp1uH0QS2kanq57hZohLc.i@5
%BRoAlU5L1l#OscF7KQ,=GTKfh<e>*%#FHRt2#T,IH0cRm>?UlD!6G:)*"r-!$U1Z76;B%8lU!:$<=HJC]"4>)9*hVqRLGZi;4X<K
%5`9pd'ZNuFQu3V=?;78*N$D;sb4RS7/P5rq:<nqL\UpN3!(D#a]^;sO,SfBMZ;50PFZjGfQGY$&:kd8.3'UU21X:Y]Q`>h*gj;+i
%UcGK?P8OTHj%Sda<^ef;A`<4ep^u-XI5_'g)h4K>:M8]p:<^k14#+?VA4QWt43RdZ+bg`&j`,A%<c=]>\k[98;BsVmc:b(ZU?"S.
%<K!D_5f>3-KTW_:Uht-8Sh-8(G*,7<>\p9d,F*,oW=B@uc_=$/>gb42KdS34cNh[?4\%A,GBN3]cM]7Ojt3.t2=hbtb:r$[Y,!8/
%BDYL/qGs^j7+^#ufV0Z1%\jec8rO]o#IX>Tp=&>o*h6DnFFrbfr\WPj_N/<GY$F(F-:YdU)<"K0i&]66&sA"T++2X3emUj\KGjpf
%IC?qKRWE,s$#g;m2!,@7#iW,D;?@#DSHS8nI%XE_k=7"k**cGVK<Z9hY6Y*"L:kcZkIZ^u>dZaEp.5[(*L_r8pDqu!a`SJ+;`HX#
%3@Qpha_L79ZbmjqSlB-#07ZE"_+1/Wb_(m<cH$;>.mXn5[^:e7KAX#Eql?\EHPW/4F;ehB/6bYCY0.ga=1CbM]-I>er7(CikkHF&
%*%gK$X;b)\j?#Pi4j6n^#aDMc)X7VEGA(q_@XfIfTND,jZ?B5aMU:#8:p=L+&qj+s[<@[5(KIM%7@J1B:;K#M]h/M3WpYl[_/\dg
%IWKhFWKLSgJ8<pX=V;_7F.:2LA6qi<hWUl%AZJO66)oEj9\-f@WRC>=;!QsHP]EU/PgM3!1$5rtOAYW2it3gC=id*<fo=!iO9_M>
%!JUI.a"^ngRRH/@<!>bW)KW>n@_]?A"m3iNR.LA3S$>f/0sgt%=c)F;b('[Cke/aYF/=FZ4_Lg+e*Nc#b%D^/S"3Gh[FMYfs)]DP
%g8Gj4B$GX"pR!Q:UPEke!%qg+dJd!H"gGQfh]C#NqmnNJVNM-:,>luUSgN#Tj+>RZ1i[Z`.:d/lW13naCgj5a^ReDAl(idZeEkgZ
%B1p7JFHP!V/lJ<nr1SW4:4QAkFWuA-A,Afl$!!o'ncrBbL[/JoBBq/B)bAg!D3=kj*mK"L33#A4Q%Q<sCPR+cgleL?NkJWZY_):A
%[bI3HCEbFP\e&UuM4Z]PQ43j&V*Rq[4@+c!g:1r.KP]Cbe,&VE`+k6-%Xn(k,/69]^;!WWi:7dXjaTtHAJ13Ti`%ElZJFM)0IS=A
%#)lRY(XkeInjbE!?7"o<"'b]Kg$MW`'@k9VSTu]DW!qnT#Xd[c'HeT0X3/:\I@Zc+WtR`NRK`2VeYYZF'<kV)I'=V@oMD@JkM()X
%KE:BqoTCBplh"KZp$FO3JW)4eH>2t3e@QJV?;po$kh&cg!SH6U2:%:$-s4uhWp5u*$Xi`l7P0#bPfH$A7+2[8[HJNAm-6+`Ff#[+
%$d78jj]jk&?4\2aPbf9ifSht`V7oGU<`!D@$VS'2[EP$pMqQVJb_kC9d_+t]RlS"5]N+5=p-R5\R2T]Yl?"1&67hduWX@Zg=Nc9r
%>$3QN*t]@;I($a@R;D:&adsXf%l=a)cd1DL/eT(a("Mr\Mb4U+gkaKlKL.eX;05Ed(-7!0Te2QFLfT:AP_IG[PPN:;hSas0e`SN#
%2<'>W*i7(b,qUGHk<<6C%r.&qK)mc/(2pu%%;;2N9+Xfd1+Kj63mPU-INh7T4rIbQo9@.hLN1"bHDUZnr,"E_\7p_?CY72^?\GI_
%rKJDP7FrHk6-G<^BA1t/61tif3'Ho8aebjUqMG1$n'%1mbPM9p(,V'JHI;5]Sd:P2*6CmoikFM`,[2f1dKin6guYY]G,pLS`A#1Y
%iFugYB(_)_/lN"J;B?UR!$U-FDEY6D/46m(Q,C/jALFPA+GpN(o>AH#ARe-G0kOKtBn#2t1pu<(A*H4?'5/XZ"-1UDR"8@Uo2S0\
%=l=X*1<UeW8Z%B^?B$Y?;4$iE#$)iI_^)>RH.q@D]pV?kJ@.3ARR,KZRV;9B"K?#c8KJS6NHXH-7?J`\U=Wsfn/k?u=mGKW/pU^u
%f=s`Ak5RF'gbaNQk_cr&^Pb"j%;B+N`p7&b,OTmBB_W:gjPR@=>!_e8OASmD"aoj*l17d+!J5^)[Unf%qpD(n2gl^"r`D(jIK<no
%OInuP7]d*$aVkZ:XIaJ:+F&pQ4J]'uZsL$O!.1MmFY:@Ls$]>MjuF;i?OZ>fOq,q:>._)9DMQW^=fMP/G3M]Gq;^3J-m?DX9(D["
%aTuWu.m4<4gKir:>;Q/H8u4[emR!B(U;%XTO+6qA0V0]i/iN6!cHC_ZPs'gjPN5W\*\mk&OJc&TJgn_qrAjA^`[qH]^4H7GDE`hj
%;#(i,Af#La8dB$9Z^qH%Z4d6*F*]8BQ&UgG;BTm],E^.337P%"8PZ;@mujno8aKC**n+@BQ@)%VdM"S[cQj1HT?PL&)rapJjA/r#
%RP98ii<4!qf[2e]<?Sh_e<9\iQTbRbj2M7O(*XgPNu\gal=VL]<2ALeZ6@84QR>$l<kVPr*R%=iGD[M9\?W1mSJ`2A8HPU0e_Ac3
%>:Fgjf<Y['=PH_R8%PkH)/%?+WVFDa]7V!3HFYcur;(o*Zn)TWag#GpIFb9q";9<ZrOd4"'_RLbIW_3cTRUb[V'aR,A.^V>FcY+!
%m-(AT`M;F"f8h_#^QegE4-huJMZ_Lj_cASeH1!d"KaJeXPre\`&j2E"ASLR8cqSA#g2"gWFMAsp@^\$tX9$H]b-=(bCcpY><]cqc
%V'dR:d5<)ekr4eCKErgY5p3ZdHg9:$b`o_^s#SkKb*DksJKY^tQA/)X[Tpe1"Y_G$Ylhb>l[0`MTV2qrC2"G_+\\iti[l>"G+Xqe
%`4Yg39Mce0AfWdWP80Z+M^T(^.fJJH-M2X@ESI(#B6U`rWF]Ia:?E\UJ=eS%Q.^VQ3P9]jaS81no#73+724-*TI],5eqQi@PMNYG
%^iW"G0!L)X"*o06_'=DS)rZ^5??!On:dS!<7JVVs6hH,FG9V9/D=/2f(q[tH=+0VROfOLIqR[Q5ASEM(q;&<o^,O>-\+Xi]5Zo(o
%WPHNH8dA#99pJ5H*\[oh$e2*h9[X^9g3,um)j2&\fsr4"UjDn[nk<&*)G,J9!hKbH:*hJ:[Jks\4Ri9p!$R@K5SMj`14YP-)&4[n
%Ui=3prZeIB67GY]5`+QO<AlFkrH(%VdR4P5-E4r,e-"8>-b2P"Uhe8I.o4.UnMGNU'LM6I+aj86(6S/gYPglQnE["WhO+sF6K>X"
%au6h+Re3Uh"n1d_BOsM0`aJXW9>f^e$spI7hC[7:kC7_(ZuV0peOq]G:6a),MY*f$QR!c*7`j;!6fKX@EMbN:RK1q8&ZZ_A_%[:_
%@Np.^p^=76R_?/1`qb0Y[;jb55[?Mc%_%2d/*0:OQ!mFdo$*-j/kqRl#@0nBH-d*3OI`*P"se32(6NuZU=CT9fW)3Qm/b9d%I;$e
%jHC``k8%'\Al$J>?tB"2!nD[d-iRLNnQd\=fe"@!2pGc33;'-(`S.Ef?)DMNLrXT:qSP,eadSA`'*RZgl?^8aHp@:iE=-fl:2<P1
%0SQP9FqMud>QE%k@DkSWC[Afj9Xg%gi[,&=8Ql`76)Un^Q#OM[>)PXpI%P/uFD")id^drA\JWnsgJ@2^*f+HR)KA824,LPAK&3Ab
%VUJl^WU]EJ<2#Hm6k6q'N@0530tkaB2D:$+>#q)F]Xl011-HfCQp9u(G1'Z2Y?[]?F'1B"A>0*:[u9K$L`;\eq3?t5K[^&)!7.sP
%Fa,NB]#S#9D$F^SiDYYIA*D6P_b*R.j6b&i=Y@$A?.UXD4@!W<\oiIu%B&/knMlA*%e7!9oSA5Lm*-3Vep4lPf::.m5Z<1@]mFnT
%3"*6[I/ldPX$([uL4RP^2Xl<q!d6ag[tQ+4q8r84ZJb?1,kKX8M:9Wb/i*3(-WNL3Z`>^Fg8'2I?'&F"T-'urjhC)Wi?gVgkuQ5#
%(K1CuPu"DCbB_#'nTmLkCGq1"CE7NtPM.ZoRRFeEC,K]eAJ(``LI++c-gVpZ7\AD&``U<KQ?qr",n],dLJ%Hr#rn[_h;b\V'<%j=
%k%4k]>"0tT-*+,^#s)=Zd;lW=LQqi:99$Msn_IR\U>i;)]L#H7.^DaI(4U?Uh)W`64jUU@a0ncj2YZq*a*YPdrDgHs0O$C<f=Yh5
%T%<*YLjh@#8]+8IgM:^JO/9tb2-i'+RMTD748L8ieGPo*%YS^B:q^2uqQNjrGQtgbG`-]PReD2CMM@.np?#8AeX9PiD?"R"Z88$R
%UH4nNHa'1]l#aOTpiTiFbp)++LB+>b(OTAoke\2)F.Y<-5+$bokcQcENN_O29r>7tG^GVS:$#0AYn?X0?K)L84U'TiEq;fkcjJ1-
%2U:#[$D(DdjZ^IZIRpgP<I.aAK)*L!p2VRC*)TC`pgEJZ>9CSj-oC64Js3_P#jh8,I(;[u89o:@3kBQ;dglODeGrW$fmSOqK?!.9
%A6&549q0%:9qn.VW3MV6!_fTGG\t'C"boHTR0972T>XW8N3DF1WB(-QVgs=!afD&AWkk)n+(KfqeZ*V/;V5R8=/[)e'HQK7B5_:\
%%C9*u0`a8)jBH@?2OCO$I1j#W6l6i4QZ!tJmsi"Z)*H%0B/t;%c^47o*eRN8D2jlf'Q(?nA%q<gQgOc7(,%$`M"QCbi%9;+<CeDL
%Q5/!s$)n9327&u[cYh<Rhd+]Ke]UtX<BSOSeE`f$2/g,$ZA#(0r]CqC!W(>koi]W<IM\;6=8np$@9cG6X,]JgnthEceNBV\kXuf$
%.-b^URSZ\!-OSr2!Qo+_bGXPpqs]tnV6PFjd)+Gf&^uVN7#+=;q2,HI]X!BP^7?090n``'P'e_kmJ(ECKCfC?l-+cF?omaS":WQ;
%>+gh#RNEEocT[bLnsuidTE7E:P,mBa*Qk@%Wj#\Z!8+K=1-PTa(9Pc5Z>6*-ljD+cY>_i.9<9lG+osbBrK?*+,T6$?B&Qtt-j1t!
%(sl:8ADTT5*lVTNCu]Xb'U!B_/)o:g]l6s3>_EiL<%(1$V5uPRO4#pfrTLA6*7^L1RWMNBee+q6NpD9<jWt>l[DdsUPeZ+>U7_I*
%:=,aoqu&'=DjID$<>)>;SGK3AXaCq3l]=EM]%lt_WS**f=fr<Mqtu_Zcus(DFM1afUEXSXm!Yi@#:8H0e/VMcs1D\P+g]UO"9[^'
%-`j*F.[klncR^-]=D^.);^$+mVLVOL)!-u8fk6DF7LAHdmMi"EEB5+PhTm0)9''ECrh)@bPnDk&%RG(Y.Un&K`_/'",qUeG%AYqO
%n*>ugggNCQ1*S+]Dq>,)XrSaUbPZpl\WVL2j^a\&lg&\-TT@#F(]?>[@qm_AGe`Ai?D0Ja"LJa1XBmSOi9Vn@U$E1>kL4nY.p<=M
%TMnu-qr?C'2CDCVf9$iLNbDQ=MU:/kh<!`>(DNN2V;4KKAE-o*J$cd_[@WF[:!.XpX]6PS],jg@'u$*?qKelh-,F1Z3p#qo)AFCr
%*uqu^5Nl#L*Nc"'p!P"ARV>XJ/agqRXh:UmpX1!+44j)F49AeLAUpoG"rFbGTNGE&#g5P\]'lgigug^]DVRH/3;a)U*<cR!r?F\>
%]V_>Bf0)oRaKN:J`pXB%]GYgXkuYN_Sm;El(kRLZZgSH,]ApbQ<'YrZFWXb+S32RP2E5#g+h]0Jq%M3UHd.7^S:W:$[=C)0HTi#g
%AsWdj^_?\nd32G>,"$OOQ<h>DCFAY(90[9*TO,K'F%:*'*->YfeO))pl"bc$m,U;KIP8C&TT'VmHc"'iGLFbq=pX8r5OccZJLmDT
%jSN)/>+Wf%7JlrC#Xh0/4B2Odfm]j![2@$jo8PNt-47]Z[I$33]=W;0B6q^FFMP3,f3-k!4%m*GeJ,`"c,dI[%C'6XA^!(&+Al_c
%=I4MfiVMQOB/KPJc+>@nJ%UZr?dJJ-2^CL2,cpUOSmL/+c*!,32NfR5E;/0o]<+qgAW&_6*V;;R^>jhd0of1>,2+1/%GaA35lsgq
%^59bJ>*C#^fTk<pp[lL,r\5\@9`=Lc_7',fQCg8&\^UOc;q@oX3!j72V%^+c0rUP_QtK?(8c#mobi?WG"obr//)g;T.8Jo^I*!uj
%Q2-!j<(1jhk)e<DomBcRj?;JU$M;W]j\&(goAOkE%cN<W8gBnY#V+DV:e,r4=Lr!=k?1![_g##q_0nc(Sec_%?`2F_LkC@4MR?eL
%oKbZOe+qd38FEr#n8q6SBX:<'*=%!(ClHWb5M3^?:6/.<GaP7Is"Ftg+ZX2GLul`K\7n@sq?J/?,X)2SPFp0AYR/%94nRM_c[GI)
%D8_"I1Osb1Fi;#A$#CP.Ja6!QNnHH\f+N#9GurPUq%`9sRbDSZVQgHr8^EPFEj/SnLJ;C-BqF%leR.HA'pr#pI@]BC<-QRW0Bmjg
%7'9nC\%C]E-oY-P`iQ<14qRM_^AhU48*;-W:G53k4Jfl&NfLg#,COmVO%N)DK\,e2O_BVPEXAB<iKTafOuhBoXf7o_?(sr&dYC0:
%Nn9m?3gh=$*+G`W^nRuO#4rjF$jr2cHnqCP=MKQ;kU,L,0ocXtjN^nM)Br;,a0g!VodZC04<TaJ`4TsWYgcTu/,.f#\Xi:/bup+-
%12a.=4_oi#Od@[DZ.I-*N4&Qlac*Ko0.>-o)DmKBU-LC@(us7(#XbA+oe!HY@c/Y6IZ(5<a,&MX<>Al0'350rdRD;Cf=r3Pb!12b
%lEZu.>flK6oUchd;K`rC!.lX[l=R98P^8\BK9&KOo'P&($]T&f[<!-Aq4>jH\8<'>(o'R]9@#A.DanTjQ]>e0>^^>'55S-ZXf?#,
%.rKgt;^:u=OUEZ9^7S8`/USF#!`djuS<?@c/?#Pq*L]^I*LF7lHdnpRgA*Cmrr=;UJI,Y%#>]k:KOTc-%M:NAKM]=S/Y9J2#eoh`
%oS>aU0mFt^R08V9#eKS]EescN!H9B?f[OnqH6EGdo/pL2Nl$C<X[Eg)ao^d0Les#GC_?(e_T0>Tl,4aF_DHPWfZ+R#V6NLd9D+HV
%2I)j2*r#.9lj^HNN2@qQ,i^d+dZe]Y0*Y'5AsZcn@&D7GP<3DQi68+?1dnW"5()jd8Xj$3WCImq/uX]%ER@CBL#C^+?r^^<\fI"L
%RX%GZio#k>?Xa@C8R?Oi7$Ujd@$TN'D!Nm7q=a!6[6\.qGqr?o__]<gKC\6gD)H$53+#iVel7EEB^WK\KJc+0%H<#(SRI1fIgkC@
%)`3ISTq0=`UFbToKW+b;0$q7'DA$VGoCPD?=9MV[hb='HXh3^b8)pJfY+u^,BTdi]WEPFBKE,T@<.a@rF(kA'T-5;^`d-Or</9sL
%.'q5RL5U5-'ABldffUa^9X&8&ZY=fI#,>ei&>kRh.*nillji:C^A!-&eTC<WqU3_><@UWb;E>mg3+kQXD'IAlkAp<,V3c;5>FHi^
%TOj89+_"F$!?*tBC0F'Sn[,Tt#;?[h=jQ-Xm#p]\n$6\(`6I4Ib4#DkRMS766LA<.LkU+tS%1h]2.UsoKU`<rNDoYQb?K$iR-WM+
%-bDsmT`2H6@T;];f2`<aY?fSLT,P+C?TPQmWHccRT,%]JX5/GMP"sQ]<kj[&G2l6fj6gcb#N4[-9Z&+NHKE]!WNgA9"3%2)/CA#T
%H()4/&M?+1ap0ZjSt>"OMMmraeQ'pB,\oQe1[oLDNgM*:U]W)5c5$o)IQK3(A[ApECG.<coR+"/<pa;7BsT:9CA5t/W6MUNNc[kT
%S*0+[3LP;dU1+LRbdS+)H/:#\?2K/rJq$>6.fCc44oaJhpro/@hoelCrQN-rHp($fK*oCeWSgWP#V$@g22Z(K.iSG6R1tR6b2VBd
%n,Pmi/NApPiJl-.C_*8"&9!tMB>&3"jp[gi61?MXVKjp.5$#pd.Rt,eKsfF4IBITs1XhMS:[;:30rTh5O&@rp.:%e/5Ss*X'O5/<
%hSQ"UH="fMdm<SJGl(^!k=-.:WO;;#B7G(X(od;c]m(`$^>F(r#H/pK^V&K8,"PE2]m2p.7"Cj7q"'(LMVplGlmTe""[JpjnFVHp
%MEGP4@:,OEi3jm!rXoM+ZqR)f-V`c';XDD4^s=A-@hJb^J3sC2+-60u54]*eW0Zn:dhDrJlOd@;-W5Sure6<pEF2PjT-cJ$i]^]k
%gL]#J70ej;X3bT,.5TD5",sajgsZ\SOOB)2]_$?9Z4[6PM"q:I4+^m(d97]rla0e-<nX"]khj(^=anRP"`_<eA;ER,.("5U6CtY,
%4e@ufM,?)#.2/-glm(0--FUd?8@@J0N-If3;.T59`'j,j'Gj1]P`[7:R0<=@nPtP(l,jF?WFDD,eJenc0oOV48rj$g'*e[*]/;6K
%O&,iX63a$+Uu_%N%A9Y$'_R\sgJ:1B,A7[5Z6OqKh,JOld!j\E`H<_:AEe=0CE4^G,*+?7KHc,0FJ,I'aAMB<BTA+\P4im478eue
%`VNQ0JHAipeeg4*<[59YX,DH*K`L8O'D$J8+78!NP*jKPA%2Brg5!A_X)Si![5S+Q])>pF_n3r&]u.Hpq]g!BKH1ebRB!i@r2h(>
%0J1jV`%oUoG!QmeZU7lij_8icOWpbD=@?169J56:`S)uK,C4Fi)h-HKdCtJ2=0r]Zm&j,4Ve\6)b2rGQ\09&%Rf#0Cc[VIonq_n3
%hdQ->J11i,hIEdaDPf7b2!3#S4OOE[*<O\K!hbW*8=W$EdSHB"TBM(,H*I0Z^^uM7pqO1:/.B2$[T3?8=%""k\]nGBI*YVD$7Vb6
%o47Acr`RA?O:NS<RcYQ:?nRI0F-GuO@I!sM?l1gBg5Y5g[G1n=X.j=`ro@B`9r[jp"thAhr*7(B%r5p\5+FI'%EmDt`'Y?"RF3!V
%WXHYq0oaV]=`sM(&d'=e5HU1(c.58;,AGL3^f;\-2*Fp5j*#;].k-_K"`iWt"`e@MF5I-q<0I9S*Z@]q8(5W>@.Q$UbbQl&pt;l$
%H/6q*NFFZ(KIBj^Gi<Qm0h'CKSj3AbOM/#5\WOH/kbrO'c=T85hCW&<euC&U?JfAeikt^,m3La+/`P>(0[M@Z<?\dGD2u3Qr5hjg
%PeYj14)P.Cb,jD`?<g#Pfab+3!0B4+no30O5sD!5\/8Ui<=2q$*O_F[8f^&@jJqjiF_=AWr/^13.8WOQ$j+IN'p4cYVAW"W9.*u/
%;-d$&8>;ke-qs)-^rf02C7&8P&@AcKfi9fg3d9n$?9aW*I-*&E!_E8N4[a"kj&LtYW%^L$h"]A25le:[qo4am/1PN^&tSofhR6pr
%OpglVI-e>W/=(X#7N844gIBpZ]X!ln#]B@t\O94IHI21D@;gu.V!MZDDP>Y9ODp_o(*7:=E36Z.\'?BSqPngSj2)&JFlmA>(QUm,
%5;Mom%^bEbBi1_dj[N9tNi_!GS;$8%oH,(5a,,j.6XW:\U<k,EVY:Y@k5u`qq\KnX>*Hbe]XbV0I3E3:#RMLQmY?<:if-VUkRn*5
%`45&&#tE/u,eC$Ho:!4h[?`)1a/m6$X8*:OSprSSQNfRPl:fnmP)8,ud\eV7';r_HAG>]<^.2Z>O0%aSF1s+S8N7=L]UnPr_utrd
%:VF*fl9,<5:N;8??c3d7gmFi!SXjc@]S$'$F^93#Kb[t1)R$8a7="t5rkL5.2Z0nXO'P*54[Le83@#W?laF?0ie+&pi>%l^:bcYF
%kVR^Dm+`&?r,]gNHm'R6m[rBBoT%h;6aUpo*>\%]LlETdX`tI`I/UMj.ZD[U;uci87YPs/C@K'Me<Z??TfsoN?*@5$Biq*mI!c/c
%IM/&Rno*9p]@_KU/h(0G*hg3B:9!JW\<HQ1FB0iFRfmb<OXq9_1,sZ+-1M'->Kh<[H@?f.bGlCWUYndLX</p%en4[.'u&s/U7O6&
%k93]/@e>?QJ#m^sL+'MkJSgk?o&[4^#;\EViE?1/Z7X&"9;qhc7CMohZP3,<mrrAO,K_RWp)H"SI6@d[*5O2_;M/Tp&`jpL*\_W#
%O].8;n!SAKe;>[Lc[P"^Y5b!+Q^eTL?%VeEpTseaPfFg;T_TZ%l/R6l9C"f/#m=pn(Z7T4;$`g'D[$#_meJjbrAmRL`*UG#bn/1r
%"F`PnTeA[Z#]^g`;r8_!!SB9H`(%P+(o%^P=l*O>&OIfEdY*^ON#&I=f(c]:2VD8<h2,m*@s^^MKYWNP^_($=,$7AE+,Q(+^H/Um
%X>fA@NaXY5'`tDT0f315;:I'MME0Q+<"[\2Jn2Po/#'mM;ud4s,r^6ncA00F$Kd<nK*D6"1@h)Vr[F:c]"7>X^3Y+EVt5k\CugXE
%^]!0OT<UWq0uSHEdF`UrhAoAB^'rsi_n,ACD_qM8NXENp'bfo=q.1;(kQjJ*LgYt8;5B-B+T'J,iQ:S\]?K&8GBb;XN!a(S('jY>
%F:ng6c[[C#NW)aQq>.LqA%Lo,hn?_VDR%Fmg@!/Q3=ho`T_Xe&<UD7uChg9l!gC(X[>FTT#O..'?Uf\2S6!/A,LKMjVB"6U22V!J
%ohSHZAP(!c-]Y%t^VO_#@<=H>ZX">fK1lk2@aHfBlb()&GVN1Ari#2)M@B9ba[s4<R(`q#4h@kr#CJ$WM1LhHWGJa7baM3o:MTDB
%o^0c1+22i[=)2+`'7-')4ppn[WY*&DL[_bD3aW?="W?We@Ekd.AG$&$QHUFS,!Zsl6BTnkB5RV*gej!%X$^cO$(7:;4YqWHG#?Qg
%*nI=!]4AML*?0)$Ig/,$!:^VfJ;)87?-0<B.`BC6/cu.OSECF*%@LLTTo>W>+_EDb^hr1Vgsi6W?=5KaN\]fp#X_loQPA_]j1*I(
%ak,itqa8eP@KfX[6IUNuD%bS)SW(j&0^]rI=^;OI\MNlST'$";l5/7s3s36^`bATiIf_UjJ*WjoQ7pjVK`(\O-A@iQQi?sX+&uX?
%E`Xh_9SQEMUr]kB[:pP*lu3*X+'ls0"??f[L1qc,e*IZOWC]Od4>e,%]gM"'j2s0*6e,G@AC]KI9cJtMC/24(@^8q'8^qAKr\6sj
%e.tCnkd""MbCSkmR-a[CWPF^N7XP/=PD-_DIbAIR\k^AOBl0Iscpbf.^B@Ttl`E&>[mg,IUASk*rjF5)Kgkg('cQ[n>G2Ya7T/P3
%01l;q&$K'?S_JNiW'_t3Z.%q]=$o9Wh71^aY#(]FN$M%0nns-0J4$aA#Gn<W'F]-4AV8L]#Mh>5S8<!5\#*c9@8/]Z\eIf8\4nMD
%h/)2!]&0aA>D0ou/1"MrEeDEk[`2$PIV<KBm'!mn;Q\'*l[Q,R\[nNW'Q2@^LdHWReA7,oqb)$9B_FKPk(RV,&B_MjX-M9(]%KRU
%\0<)F;km=>h&!.2mB4pec[l0q&6K!)CK:JM%=rZLjI9@Sm5h.Ld"Omo&'.[F'Ol<<bGEQ6.R/H9QUAUA%De`\jKLu#H4W;8[GM+'
%`u89mT)mqsct121L`C:?QUOJ;GWrJ8-WmKh#N0#:^a^M=D%p!=fW2iqW?K=CIi=/3S<ke[0I@&r"M:?[0nj6n_q=-f:%F"]ei0'C
%*h[:1AL_LrPK5BEG0<F@lPWJ],]'SjDu<4s)SO,9dA+7Ugs?b7In@H_3hKAfD!mH8.,1GqK+(SgEM\iI;OB]benqH'0U-XLe$G1\
%;H;JOj.jA[p=,@j(WQ^FN$>DWZ5)Xt_AeV?c!cNr&SoiEfGig:NVH8V,Pi4B4R_j7K1=3cL8E:29A8-<8O$5T_8LH4<b^D)D]?8%
%.;(-&]fph=m\lTQG1oS<S!*.I;?!F(@%Z[;e)k$3qqJk+r(`@s6J(Fo5@#[e0"p;701O+j1N3(\F@[hdCRP,J/&h>@FE4c_dQ4bU
%1[ajT/%Un/XKn:W/6qfED'Z$V$>9gkdM3PrG"uQ]%%1*]H%1__l7Es$4[q\H'$%]"e&AG3q3!"ME#[hZ@sa(a_E%T6Mkim=psXLm
%hp;*uJ@Hkp.8]A-nV_YY8uT4V(E?f+_A>'"BJuE%-g_faius7BpJ"8FUes'b"t6\eKG?5cbK?mIIhN-MMc5KOE#<JFWMH"TLe6ng
%)tG:#eOI3?Nn-oI_M#M-(faD3-a'tR_er8uZ`#G=I3+S:p-+e;Tq:V7MJ5pedAB3T5Q$!C,"Ilt$koemFD"OR_m`;;L[@s#diMOV
%!?05;/i&k6I:ifWFtUG,jJZX/J=>hu"D?DE/qW!FfINAuW[g]4kNd4F4kpH[WOe,.0'Au8%-lG1$l&5FE4pJ#[RepnSLDg_ntO4R
%$m=I7KI1-Y>3:J<YoZ$@E/gIc+*@P$*Pn]E'&%<e1KD7_fEt5B>>i5l`P+?0,t=rh5(&'E`ZS!V2uCITgb3I1SgP\6n;Cn(V/eh"
%LEq&Zk`tQOV&4ZYAo-pZ)+>TRcpg-OA8@YNQj*]$mZ#n$Bq?-Da^j),l_.D]*OS[`!t:^?gF'\1CKpbhl%sPJM[<G7`K8ouoDm0m
%H)A8_CF6L&mRV;Y!r[9Ldet"b#/'i<$D:58M-1/+D/TtcpY13+DV>L2#Z'd#gjAS#gL\J]pF?g?rAKJ`'?hec\:\c?6q3U;FDarc
%Ip0qdH9;?ZT&5!`&.IDC$j*lR2_l&kiBBH.HWp(81+^P['j@26#s3;3DkbhZgG)T3djnP=9[3+:fVJK>5HDH.&NgeViET<h_EoWb
%]Aa?Kl&.h!Xs<oooD]30X+C>9AQUF^j6d1XdIm1t0[ppH`u)2i>g#tb3lhPHF8=^*eA2mu\I;bP^tqDqn:tPGWU<imWrcqE?B>)>
%bIi25'*;osSTg\'-$VH"#afggQYpQa)Drd&?NqQ+%s*slC&+$spklbueX0;@8:mLt6ItCo/0M/q&V]3>FVoVJ,Z$!j0g$Y(D&YD_
%=M%J+iUg$:c<<m-;16."K-.a]OVDd62;p5\U['i,%Bu7IMQ[[RlK_"cnX=\Hg"/>)J6iZnTKG39$I+BQ;F3_*Zq^^rM0<+iJs1IH
%JXN4pT'_%D[muq'#s"cRl9<Ot1T7iulYVl]PK6!TT`H"b(io:h)_E`^:0V#Xe(CfBnAbC3YV'd`#"F<-Hbl:>VG)RO*,3VKg%?gd
%;rBHa?t'`FnuKpY0.V:$`@+1X;]it7-\G>n;Gbt+V%,tU^:<fUWqdO8;d+'3o+Y5lgYNZHfE(eO5@Z:%:Na*cRi`<*0P#Q6e:!Jb
%"so^d`K,Pkn_'p!#[p5S%.C>B.DkNVQ0+[TfSiaA@)EL!='15rs#[fCUaT1mRNQEGHT\9&E)>ZGGErMhZc3s;0pf4[Nh3Np'CESk
%1^pAgEp3fEcJI'rrNUQ+!bpZb8[GM]>",'ZfbisMSXH^^.9s3C&"JMR6P'QML9r!ArR6_8ngGs6laRCtKZXk"0&oc0jQ!%b.%(VF
%TfA3YGQ%k.8<.5Q1e9*4"j98LJSj7LeC'RD:3X.Y@-N@Z^%?A:G]@()d3VdO1tC4K+jc\+ghZJtK$dL(,f]YW.jE$=ODd-MC,PH3
%/IY@#ZJ7-rjd?p%\<ChlhUFp54e6lb&1f7.9YaVAf/("mPuAF9!q:-:%eBmNZ>CT2,nXfbY:W*ZSr`:,*rfB@,.jfJJ%]JB/Dmj]
%m="g0Eg`N%ED$"sZ>jMEj9,2RXGIsC'J\r6^?_de:)+FNr)Wls*TXVM#S,a`#GHBc.*fqF.rq2'f(19$?Nu$8".=_Yhr!SB.k8=-
%-U>1?9,sCH.:C4BCAb=.mDIAUl6e=s7jg<'8RcjIe8,hq4s&KLkPDIkN>r;1!RF8PU@n[_qS;+gKUcQ/1Mc=XjPTX/m'$Z=n.a<6
%'#a9I>nW=1^g5sAcH?J%^BQq4r;]AGN3E)S/&r\R[>8di8s'Ud_de4]DL4U8UaBA.h(qGOWm'dQI.4`0@&F52P>=apf/aRtE^c^r
%/7M2NT([9XT-%Fpi1=sG%ff+[jAMcX&l[6fe'c%RY]JPkbIF)d*)#eVmLq=pU2A+!#<2<AgcFVK`pi^BlGoXK%uYJ"rtLN@oDNi0
%$u,E<B97\'/.-=DF@i*4ego$52F[8_5"+]Yl7N/db+<a./6&)HMc?U.Y0$/##7/G!;fmReP3UDU9h^sD@\C"h5-2igi'-sPk6VJ?
%]c@:l_+m-.3UCIc=rU.7A[=^bAu7A#c15GpFg?PoC@W%8$h6oS;HBW/_/m4a!Fu,pBPQl;E8l?G=7Esh4o`YD<RmU496ZZ1imQ,)
%eYJ+XRg"@&0-H1-rcJSR]D["%h@:''=m*1D`NoR'R`&&'l!JECf0e@bXYlX9>R._<nboIWhc'O+-h4(&Hie2Y5T3s`g^`h&1#DNh
%4H;&"BZ[%hK/>TL6DYCU?`ije<9^R$[IXEH#U1]\XkEoIC5,V%'k&tC<NOAMkcb=9"E`rpWBcT41MI!a_hal.GlDk[IkLP<SF6\Q
%FJ"MRA?].#*NimC0nJ+h%`@Hk/NZCY)9'bgO_$@DN:Yu5\Das0Y%K/!o+23A;ZerB>8:/q3kT.d:0j`(J9t5-EnlY;Q03VniCOF+
%;nturs3'92oN]sQ=df5Qr#_Z$cq)ad!\IJa8S-$n,uao56HG-O.>009eK@fgqqB@5F.\85pH#af/JXU;,/;Ii46Jd(Z7^3Y3T_/_
%)[/:;!m),3HTrRIh_f9nhPKq-k?C0rNUn\^9t8ZjHoHfkB>s+/3GtVT*VZos^Y-P$qu,b]G]SD"8-g)NC0jm2\ZfG\lI=rhR%AGZ
%2mlXH"DO)r/B1;b/"mjS^ZoZ&c0aoS#52Z447.lC[a4,+HeOP<Cu#_Uo3@pj8.GQ+CZ[jV[bC)9TgZG>QRI4POHiK57Zki^?33hd
%-Hi9cU&+0A5AV%3%HYjkF5!KdgY$T0qn#'NYop/SRW@"!*m@Qd_&TgnP(V/PmWS1\PmCV"au#Bd>L[*0R\+%=9!)_p"feM-cI]O:
%[\k<l-.QbPdTCPiL6$pJo!Q;mIQ_0P/H.FF2Q&Df2sg(Fr)sBaqPaWJ?3IKiOf`mt''m&pJ8KX?aPu:$,,RUJBhGV^TeZrO6??I7
%fb^HnpgtD86G?B3q!JD7=AOOW$_H',DmLjt7D6M.`Zoq[ELmZg'V)`e0[0WYT[9?a?qK*qd\<EK"l\^i4Hm"M)E^"&bgd\`p#21T
%e6Xmo99LD00bY90(%;3&>4TK3@&j20$@suM)]W\B-kQR2jYkE"^"l>\G+n:2>1MD#MYQ^8\YUo7#@N.ZgP3k\Q7?KPN-=e8Y8q,@
%U>%rGmM2#jpMcHfEn.6FHV;9CSjcqDi&'j^gTY<W#mBs:'nVZn]<;lZ=M*AI4OCItR?ph]O5Ls=^j!3UllO&K_Tq.7Na(=aKUh&^
%[=*M+n!2-%!+&]cl.T?RNV*aujl8RR^lIL,MiFYtpN'+5=YMSAXnX;2CqE.pQ/1OuAY:9S3W1B*h61fck2$.E]AN>c:>4;t0$OD)
%1*"o@>qk5-*6e%^8:tRfg5@4Q_<6s\]VZ!l5r/Y0.@I9*%.37kbAal^$<.!\\NZ6m&O'>A@nWR0cjm<fL'/X4-8+6Q+s<3".CVri
%Q]^]\$ASer<L*pFG>K^"eYU);7)!6qU&fb;Dpu+\;eMfZcd:L!`?94g@qpbFeAU4(U#BYobq;b*L*fQ"pPLjA&H%,jL4jG@I]knV
%;'ss;6Ke*lVJk\L*+LXnBT?p>2jkskq-PfVk`W3r=<aO[i0`!<R,:/%^<?B?3fRf@B\-U"-nbgV0Ko=W9KqJ.,eBF!W96f6MV#ho
%&>o2lM-jT"J"Om^o5=Ef[J$J/\)[W<.B_uEnDoVrs#E/(Z(KM?3S.&.EkLJrI3!8+n<fdXoDI)=OKYbSqCZThV%+8[2d0=m/0mYY
%-dnhW"^^0!f*!7:c[a?r9b,!J-[:=_0Vh5`[G1#PDKP#5?a"^P\P3b*N:IRL!o[qBVHJVDM98V8&^?iB8#R`]=8_En7%EfglMu'F
%Q1IK3-_S&?3%=D,$Db2Rluo`43,0)'NE`fBgtlj/me3Tm#;RIi62'\bTNmU`r:nUq2GpEc>[,3cWjQt>A61nNNF<3`Q9kXY*#jTk
%)145L[)U#9BLPTd.23rN=a)c(*MlW?dD<DVd+_EZ@5NN`1RaY7k7G*TqJ%*5'oVe5VB=GJ`7Tl]'-#Ge3)H3$T.;np-;$#f7tH=K
%d8'%1_4RHP+J4M0laEAl3,d@`I@ILAe[AhOZCnH(6l7hKNQSXJ!R3T<TLR!?]!PBbI!V&+ZtGBn?/"):D_,_`6rB]V9j,Cti$>Rm
%3P!3ZG;)CZc2JWWDnAJ9CN!3PBXH=XIm,1hkK2]43?M%PF6n2)]q(^D6j2qg_Fr?_0gW`V-'aiIq49%7`DgRG9Y'<:Dk/?MSgioq
%.;Gs89VK7uR1^OfAOf;6\Pgp7_[pgKC0\`S!NLf(_CKu.h)brpZs.$P^^$(eXJF2V`+k4d/9cstLTg'.X$tmgeYpEq&QNkXQup`q
%:q807XikS>??GS#KhfZj<+II[G^bVb38aND(tdtnajTnQN:6La7=[r1e[>3=,*WCm9enK2a//emLB#_XJ$B.*j(Wn#EmnWL6=fGr
%(_Dci4%h1dQ-b]C9Ou9$)FTD[+dTYS*LTNbd9s`g2[)2f&O[sG+/*WD(/C$?h/\m%7Hi9i"e"%$6u4,R6bR2[a3!W%AuCGSfJF\%
%J4CNR(J=[Cbt^5&A0`*8*D=9)PQ=7qkTm>CTaq/n:,.TA=dP*4/r)5lM'_X,YlV[e2D(HaL";lk!(+o88eRVS'9KcNmQ72g$:`9J
%rGMOn[I7!o7c//d1uV\IPR;r%nJBEekTYf8WiW-I6#DpLI-Y`J!d6AK3!!?cS40.jE;I\g"H9'J6$q.JA[O,nq>E=%9["1_A^NLs
%^"oT(A:tS.ch_EU*&cYM9!f]pKP6[dM^7HYcd")tP=@_jrNjVq-,mq!&!S)Y9><27Lm!t3>8h8Q=]IYDLLd<rAPmdF/P.q0a\]Tf
%d`u;2_/SG*fh]r\#\!s0??tC'H"0LQ2-Qp7A.R6Q6WTF_N[@B:$siHVQsuFB!%Th9L"hqhiusVDFBH$q;naHY[af0'67$T(GNm,5
%Tt`PmZk*li06(9rCZ-=]%8fi\pnilB`2T3%ot#S0%17ENE)"iAk;MITp:9'$G/_r(q1k9P%ett*!1DBE!uQ#6Tb$DPb'"YHCZX'"
%Ak6V\X=TXNW6JKTf8f)@7Oq9Y//DrLQa4?ID@]n>RtUU)>9@nT2sL/S*+#c9g+;g7Y(jZq8ChY5OnK)D3oWg\4R*>\SPZHk)Kl>1
%rg66CleX8W92md3IC[F4fs4#qef^R+'V(s>>B119^<mKqGpSOcFb00ukQigH6=ks'.f:q[9mUW(2e6;qN@gc5NB57?e52O!QmqSC
%MkU()f]N6OHF'SX^/8,)meA^5_c5MWa!4W1`&*N'g)4ik!cqu_mne!c<T_RqQ"0XO<2DV,F&&!m@tj,@0hFQQ$J$/;:frX!P:3M=
%)mV5h#NP2E`3"*lJjFKN0Mp`je/Y#S;s-rA:qN=Gon0U+0-*V*e[jZG/^%;%&c5s8T2H.iIi$W>&.clAhsNM+]:5PTK'"u/T$Oh8
%%?;:;7XkYu+j2NEkO*+!%Nsbd9c/"FUpTkop[W+Y$!na:?bOIU$lUKO&r?,hc+,fhZloV2OS7Bq*7>28;+RbZR[A9tQ5gS<Do*>C
%55b[k)YF&Jp3d_iTa4pcp_=uY>?m&`fB=D3;iQf<YU2`@_sQI)R+D!;m0V!"J\H'l@56UAa!q'0Of)W]"2JnF&c:&K6%A]_9';8R
%rbJU)NsNN7-9.cp#9;cWFrWc0-ZjCE=3a&>LXqR14M!9(%+VbR@Vi$*?R:/<\H25^n"LP^OkPHh8Q(f=K;:(S2?f.;.ST#Jm@mek
%9"cap'lkQU>C?CJ<l9UFJ>"_DGVd==1o$p;o<A);FgBU;J=$9Sj<:0L/Y*T%&8saWpiE@jI4Tre3dJ')%d;1O"$2!%IlP1<jQi4=
%F("^4(k>--gQ<V&,gsBbQlYF)-ed8nL>.7fG9Y;&=CP1PhTd7bJqr_,l#>"+\jRab7kV-nF'?hgc>FQ*LJ?<49^)S4%(V>1@hp(V
%85HD:)ckFEs)ao*SN*'f**&,_?eWN8A2AV',pC4e?UJk#45phN&=&I@e)ai)i4;L!=')`eSJTW[]]eBQ(GslCLE-fB\5SC]GGi,!
%(/7HqBfZp&eH:'`Hja$3PuYlOWE5'>_H?Tb^G(.J!h'0Pl:_5(p\!L-@PEVJM`>`s7jIl7#oaTf)iiE+]9@q85our2X<,^V)s)dk
%9pCurS>dnidqrKP&E<T+IH8+5_I*6]F=('gJBVBEA260@C$H3-i`7]i\hkk*dR'1I2^[^,\3qNT.`@Z-U5Z=u?&"'4LkM$&';'.G
%Y`)j8ekMmuROfl-M5DL6E>X2t^<V(AI5c<cBt$E!oRN)>K%QE&F?1aG>M]PqcVWX5OM$ET*llUkN&i"lLK!Ye1qkt;:WMke=FP=A
%5>*Va_T]!0F"$[Nb!Bt27aD.bTa^Uk?:DH32/%B1W?Zpp<2GF/SSJma1U;;<?Qp^5fEP3A9@DPGL#=ma/=!<F"KX7AM^'KXUmg?J
%[L49Nd_a6"S;lZ7MS9\C.fpC_q<m5jW;J*S>%/kd8o.*:^#?RqE6]IHo=GJDr@74a0umkBOA3dgl+dETiC1Yk&MV%DQMQT_e^`MO
%31RqijA0red:b6_Y<-P&IooDAW241.s.S<?XN.uQgRJU5cSEkX?6kP0Pe#7DZ7X_sHKJ9A`%"e/Lf2t"8lq5RGeds_>0_;(au8P#
%j$DLFO`%TGJ8W72pY'nLWG[NUGmKX0MVoV4oB:KT[(ZqTP,dQ&#AJaO]D+WWSpZ6q[ON\iVE#cU<CkJj;Gtt\)Ie$Mk92M]IC4tX
%Hb#!2OR6X;e!LO:VH@u>C->3sLD&8^N"peP.X[3hr?J)r^jA'3,G$`L"4uO+auHUa%NLNg&+8t<T5W]elWU<A;I^84Y_m7sSh$fk
%le$sR95[5?<gDE-,^C+XY#Y?.ZCXFU6]?,CUu$c0#NEg]?1O,2ngCGU4nds+UAJs!54%e%PMgCh4HGbO,aAmVQ4rHC7#a2]BV%>U
%2h[]6E-r"dT:t7!Uc\gPk6U_lb!+kAO)a]<9NTp[.1[bnp$jL=h2;smfCfgVZ$Z"6^u$ogTG5#eI4>d$"-m?e]>O>]-9i%/_ZBd]
%8e)plVjaV\*F["6Yu?_:W>k6W[J$K6mF2O<m$MkF2X[ZKh/qj.EVdVWIRD(<ZF8*GmNVi,5ZU%1>2SgVO&Xd7V=kr,G&mrYd;^sN
%8S_A;CJWQu:kAd&2@<3(qpt7tiUu$roe]Nc*YQ",Z-q5aUR+3#5Yol=_*aB-(`8jYGKLFX`CKYBd2@1G(\\Y5i$HFDD!<Z,IZEWQ
%cI,4E7Ye5RAu=i>Wr>g/'MO'TaHW,2&j+&d"\G-%\.5Q1\`nBg\so;ijM=2KJm=[G!XLiLO&-0+VIT^m@i+%%hs]&2G_C:2edb\o
%Lcl."$EU8nT/J6(QD+/@eS[A]s,b_o+0&(oe+5f;V`1gOo_)(ejNW?=c+VRGI5@E)V8H5gnQe!b6ttEOS=U8Wcgj1L[tQ`4qjIel
%Z>-)T2)fHo-uYNN$phLK(S."9$PN0@K4)FSYJjUMiL_XFELD2h=E8mRO!LWHm+o/G1&/Lq=(56rn$'N#@tW=\crs<Trnu3NBIasX
%]\Lro?&3:_/Na<T\5^;/bk4p>KMHBLIhdk!98A@76)pPQ9qeVIa)+_Z%IIq,>fNr010k"M.=.Q8/gV*J>&3cQ&33i.c;m;lk$,ja
%G$.`!ROo';J@i.U`*J\@U8$0$CgM'T1^gTjk.<e7Zs>f'Q1GJ";-V;nFh?K1I3(sDAeN//aQ+g?]B+&tr_!74O*C.PNhse^41s\H
%F?!!bdfb"R(JiNR0YQAFK]Ade/Zs<`nA+c_o``!D+a>maS9bh)[4`M-YS146#$3lOE!N?0%B=UT!)Gl=),`SJO!g%[#\:Ta4:^#b
%)]/bF^tXD';9$lpnmUfn;(/s3mfS=Sj0Z"[GG*Dkp"[uUS)5:mgRDtu/ZOM*%&&;J*EbV*FAu+O#Tfd5!fh:iGA@M_TVOmYN]ISg
%K92@m1=2:p+>0MC:M"_t\\'o,#b\p'C_.MaC#6F$Zr$o'5i<T]bfGp'";E>X9R#?e1/I]-!:mcgK:]<p!F.[\:nge3Ntb4*1r5nc
%Ole_@j\@bJ:Fo*nGd/[I[j`)(^KHfgeh-^;U:g<.]U>:*YUII"XJuNf?r8Cl&W:[p'8nW4?r=@N/BSPU8d4ir;*pQ^MfQdXL34ZV
%J/#3R6!LkKD%9fK=+$CSP1cZD`@3*6/GlPcb$)<.@7s[lXAd,^_=7d50!5""Z_9`<ibmAH_(f[EK]J@]+df#2]'#AqriO(o?npl@
%`.O>$D2OP/"HnG@E^"Y$Nb@4e]%qRpib;0HC0b^l'&*3jGq0I1Y"8]Q6=,UMAOmF_SY=i;;6.[W"JZbBL!gXe")8Y]Q$R4P-:(Is
%B3V\S_+^e_N(E55ME-;!4,2g@`ij!Zm^KM!dI"NhX99"O+S=J^ICa^Zc>U4FO&b&c'mN.H/$@=k&HVc49(B4Z&\1nf@oHKtEH/Ks
%>bfAWC,TAlQ'b:(%R7)7a$0)"@F(_g79(-r*X->3Y;[_bA0H8;!Plj@*2Oc+*>1FZEEsOge9GSdgm_>WL&C-fNN`IOJX#;R+\/ta
%)U_hZS##OZaJ%-b@.NNV^qlnC`X@T;A0'2"Yq$@U4F4!b:7W83cTs6Z\2`$'iV/k5O5-<?"6`<a3>,U-FI5#*)5J(&[c*6$m*ihd
%3W>;/^%d"r:?:0NhpE?OEl2Bh2k21-:0`ugMT7hM$@rtKN]!L_&k+nGF=SgRdFN1UB]*_>BMkXlfPMPS?gX2=&8-uDHtn!qG?#[D
%6tFscHN`l'eg4ij=6.L4G<HfPGD:4Q(i,jG';7ne\<%P1KdaUIeYHS/.sODpFbm2NhHn=8TQs2C4g_/82W_^#ob%\eUI[)"*.a;R
%Y*?2T1l1`QZV^\-^ego3$;8a1Q&''CdI?-@VTr;/pC_Wn.Bf65:8BZjaLbo`(+;u,bp68!G@1Cm(?LlIMI.h:8iEf2?-A8XT$^Oq
%$J.p,!6g#-I<,P5hW3Ll"o"XpW4;jg5014U:&Pk=n@)6o.FF%L0/ZF#s&T]us8$$Vs*\tgj'gL(QjE,p0tQhas"A;*EW=Jpm_=5S
%nitAV,6,.9#C&c<h_4PMN_*_Q(i5E.+THM#qR]SpBk.'+rf<Y'e3db4^s7N/YC<bq29V'As8;,jP5j9_P5k8Nra,\=b2Vq_r_G>k
%s,o;-U"O5P^\T4)$i,;-jT#3's0pqcYLkA^E;qpjc2I+g\Gt[QrdQ]r?PeY$BE6]$r*MDS?i(ngIuZ3;rtS[mq(MG*I,WGpEs!(O
%<"2O,YYtW;!LOgnhB!YloAsosSPH6'Z$&2+cDTa^3'A7mkL96KN#rQ,dggKVXH&e(g\pTO<M$YKj5*uGD3ifggT`n(5h*5$l:1`N
%?0F6cciK/[$ii-Qo<`0_1u0Y1@W:tIeDO8QI-G90f+Cj716Y_pP.TgK=Dog''fcuD/Z$nJnu];0n"Y1I%;CZf[%H0;PD6EXO.5aM
%bs!_e*:dpGgsW@\A$=PQ"2t050Ac5ka7e,P3KFjQ'FC:^L-p3*N'cA)/C2]*'EPmGTf<<YS:iKNBOI@[1(L#sDn9C=-Q-;lVB"-?
%FfBu:F^gP9G7Wt:LQ6:eq:hEA:=&4]`&cj<RA*SrMsY:X+B#Pi'GjJEf^ugJ*>YkYp48g"qq8Li]ueJQWb)VRcERM=fR47gHe=EI
%-Akq7RMq`j9eZ_L%^P3)Q;[EY1UZfaamE3P+5Q4bKi4)7s!3"h8+"Uq9'<,K)0)4(ofWJ97Q]%_ps6QKmi3%5K#_AkGm[+ROm=I9
%rBlB'O4WQ4K#='Ac%n<Bk;:L[oC6*Rf:hs)e0F[aSa=jOG3Vmcp[XicISS-Rn+qj3*Ckn!UiQXeZ.8*c'(r,KlHj0dCr\SZUV(;G
%3An=Zm=dR.c(*L':7XAroXUR\nul]8^C04%7GR%Bmf[Rd8E69eFJZGCS_1)hRg#dD\(c1Gk$RAgZrCtmh7VKYNr.7=s#TOhV`jR[
%G946H^CsN;&UXA#A%EaJW[EsP7_G>>fFpJ2_JBH:mKD77dCg2#G^p,3OQ$:e49CaQ/[We0,?-]MO,"G@&FLOuU/U]+%^QZ8fHFuk
%L3LS6.8ln7:#_./[ZEq65!X_f-[e77s#SN=+/-Y$r:gc!4Q)V4eFN[$ri,N$*`[lsOg'<d2]R\fa5Y(3aDiV^S?U3>k'6qrh]\p'
%W:^/3*eE&M;e,-75q0<ukTd`pBI^0WDUJ.Q9ls[UH;J6=Bt0eShO1s:.T,Y2Nsen8"djBnnDY8c8:[U*+$itk*'Y1""Y3RV4nT(,
%*gB$Qkkd@SGn/At;pFN&>l%sgW/nFX25$Km+t.UBZ?;9J-+$G8XNG_\%1W)((HuhrcVNKpW(mlqq;@lo\\Fb8`ddfZFB=q_%TNPE
%AM?O_!/j\bQA7nrn*gM`bjI6-AuLTrl*33kYDiW)XSDKcH2-)0Y3ELVUQ\8%B83rj^#_d)GI`tgFh*::\FgNaU\OPG)jIA..B\&<
%#3iTWOG\WnVV1WDI]]8e,$_3I4W7V6Go-X#!>&8hPAH@Qrfb2BH<.Yff8.,KQd0%::1_ZOFLX.XKA>e\d]R9E>^sb19UH'FBY_<u
%AR?2%<`q'*MNko6NeqTt&E4(EhIFW;MJJ>W`I)h'>k*4fc(SZpm2u3@9$5S"i>moPG9jZc>N$JTR^G@KbI=M9]M7]`AR+89Hom7S
%,'J'h3(3A5X-N?]?E)RU"2SG0KoCMljIr3plgl2FEW(+_mU&&gX4'.Y^4*!=bU$tu6+[.,nmkl^$boWD9@6Kb=BL)=Rhha>.bo\j
%o;s'hc)Xg4%.XT5AQJ>J6*fQkEL7B2A#=X@5efM/[-&+uq`e4R>)2f#0Fn0SHAUTrY_(,!AQ:&bgFE4Z2-HYh.R,7+'S6o/m79/R
%8iXAu39X+0e#t]iVL19kb.d\\a.ND)\!HrpX1aP;+UAHR@Vg#0(>9j8!e;knD\=e2&DThRE>R$F4Dd$T?0T"QSbBYDT(lppA6K=g
%@(7M^?5&A6-YY^PIMlAS/ha)MPEfQ.-rOTtRZTB_=dnf-G42?rPr"_HCG.>dMerRG4\9<)`278YdhS-:f"0:j@fAG-@r*'pnh'd9
%qScI2'T?TN\'V47ke]mLf_C9$CsAG%LD/$lSrFm&4F2^b,[l!Sko"3`Q#og+Id=-.Wn+oq+6?q4(_Td6h=NhSjO9';9[:uIflbWo
%s#)NakBepdn*pGiDu%Y*3)6$n'RMn\&'+Z*3]QO!D[qKMiUQW33?:\hU[)m?ab*^O8Cu'hmIjdUGGiecEP@"^8u5cR-UCl=%(%ig
%.cPAl,tNt[dp_S/I5@/7Zi7<mc3rmDk"]^`\;^IU^VsmR8i;rZdVBpO[F+'jm1j8(3?WLsONl-i2l"nN70WJ@Gq+sBeY34[\3g9D
%[MiKkYC4%?U>'B_2biO,*bV#_gnseC!&8J`;8t!_XhKepiKZHY9,Njs]X!l*Wh]^!"jTV@T/I:peoY%g+7(D&$SU4/YuBI$fBlg/
%P`/`7L:#:6m%O',2#H?lb&$9mO^1o[RR9b;/-?i^C@[-t_RjcD]\`:hrEtf0Ag`:LJK&!+3AdWqD)$s6M'ZRg.?WaN)\5gZ'5*nc
%k\,7]M%Lnf:Z?R6]<d@`l:/EXhZr&)>aEn*koZRmU9EU=il)>U+<S'e):tc1+prDd0/fMS<A772BmHpOL<(pE,3W,u\LN^Ke<<fI
%rf/cS=n%:XBW4Xhf?+IlPIdZCG,H*;ELo1NJK^V'JpNl(B/fls_9Id!fT(Li61L?oO'Qr3e9p#N[<aW$h7Y2_Q4;)I)$171KQ4.C
%:iTh;Mem*@SE+S`CT?H)qd6Z`AW%e,S>^rOLIc9cf3<DkJ3#96JG^$R!Y/R@aU7cbVR_a^<e%Jr(bc,[aEQHU]:WBR>t2(LVB[mc
%]<XAKk8O$EnGiJm^crY)cNX52kQ:_o^\G/$eG`84Nq\%o2h1MdJ+]kWr:EcLrV?,)^\Z.2jRepko]_urqX\(nlMA!U$eKn+dF%r_
%[jko#V+mpIXsF[rbi7[j+i?,N)+[2^lM7n1'8hK2l:9\L?N&s6)@^pI8k=F)E42W`1fZCPU_Eu73WuV0qX.A![oP[ISL+BoT,`8)
%^OXC(L.HuV6e1OA!_;G0Cd>`&n8'WTP$t_d]*Rj7[]&#RTTd%o2$_#p)I;5iolEk+T,jHK]eVDEW98dC^AL</BKm'#M7m]HPeP6U
%87'Fmf;cE<BR6/@"5;(-/W5j2,b5&N/lPbZ_4Bt^LF.e8KQ,OA<3E[DF=U,/MpGO`HCTkBgs5('kArB3(ou<s9q0T#h55lG[N(P<
%?Nlm-=]?-/W`OhTi4j$kiS!T7fnn\`2o[C-!rOS6%^3T]2q4k[[lMlXfR'5`Rk-aZDqEdSmPCoiY!YFb?W$)@&IPT'9<E0C`2YC^
%W(lg6>DOq!c:I[[,+oaeLKaIqRF-5m[cG%])-P?hG,7f@&ju3@;bR4;GW?:Dmh=e]Z>e8%g"><<aTMSs`-^%;,;rTQPS@^5bGs2r
%BHe)&?XroDYqNA\E`2TU4\<+)Z-DJ]6"Z2k'k8"oeC_K()'Q7Y.l3$jkU/Ht;Dd*tr3pr*eo>(0O70R\fp&pl=JV?gm>(dJ*a3@m
%?Pi9uTTA?l14jVS<Y)0TJ[CTR"OL<bke?BOMEK%q7G6(Id##1WE03A=^848l;OlF!9l1Z)NE=REQSauLPAu;[>-bYl`i^OVG=+6q
%`TL9_q$NEhmFEWE@;.R>TM<aY6Sm9:%3o4SLq@CJE=?iLR#`\4<`i$ogE.e6$HC$qS#GATo1#?:rKI9K5QBpHkL6('oe6@6s5Q&Q
%qS.LNJ,]#Bs8&(sq>@GqjhLfPJ)&tiYpXZ9>oWYj0&USapYEjgEfFco^`8&=b;K]fTW6`4Lm<c6KKV]^fl;m]6l`#6j$8Xf:HfhZ
%A:W,93TQ(VI=+;L$sC["eNHHuZ8b+>Kk]=H4!eNTR5106.3RiM4WPr!WhgRjT4nHW%buF>-8k<b\qcJ?TJXt2lV&$.GX)-$F[25(
%(Q>:gD\t!KKr_e+1BG#C.QjI;!4VHXk]bbf_c;gAECEIef0tiojFR`"-HB3oMm02KIV[>+,2;NuS?*Gq/0b"IGL9HO[`]2bmIQr`
%/eKsBT]Bl-e<V=m?qg6l/flS519deo%_k@?3^/;`[d@6=_bu6I_Q+(SdqqY6/S_VP4CWF)Ch53QFC`Y^,\ZMP(,*n>j_27<49u2Y
%q$oGAMCrT(s$\j0\g0sj2p+cW-UQ$@eL6JJXXIJ4;7&WBOC='<-3j^:1hX06jM*#&5?`X(]Jm-3.gh,`lYXZ>,%qC=JKF?m!5"t0
%f?u;^IMH-nhd+\2'@!oML0Du,\^@&s4Hg%!X]n_JM]5DJ;l4$blS%uqmV^0u>"M-3`@['D>T@#q]:dDg3R1ljU,2T[Gn^,:LqNKS
%"s>4BBKDRXY>*57YB79&5pE(G-.uc*7+HpK5ZnilM(pqoYVXk-VabQjJm^0'*K'uu$TW,q$s.<]8$uQ+3VTP#K0-"&.^-?H0,sNU
%:g)l;gSr-U?T?.,<[[kBMg;@N<k(Z7%P2d76[$o[o"S6%9"Ha/9gi.$_oNokM.+:bp>EI+JNd+BaIDBbTA@p"MSNcmr\R;u[WaRL
%O4RrXFLGk2-7nL?&bu*nLMQHJqd<@OE(BkXM]P-M3Bm@GOZ.#\Y1#L)rrG?._1M=B0'[OX]o^kl1/rfNh$]_g)!8I,gqG@Y*epuP
%lml#lr:GSJMFKX\GV9%'qunFNGXJ/a;3Se0`k#@&a\n%]\Ja/ME-gmQrjr)aPP-WJrGFk\@"bLhKG:jSP"19,-:34gA8groJfA^n
%4'E,_$Ocl(.Q_tHKJ5Knl@D?]X^a?honuo<[9O9ecnusc1+$W7iRU"/lLbe!JiBVk1^NDf<qT.\B4FI-XNHU982WX*##)\-%.:*6
%3*P8jMtL(a'ptTO9VV5Yam*[JpI)YpK$&*9(2-AX<aN)/,!FZ3"o^OoKIak%NgUeORO9M``Pq>%o%dXX:i`+l.NNE]m!'A;@1)o=
%`=5VtA3i+J:h1)cI@=f`IaBJA`UA_7s8G:ZVdK"EroP;e1B6D#s6!1-q9#9"[C9^Do]mNr-Ht/PP"s!LeH<g.<G5Z&S;PF=4%neP
%o"Y2"ol'm#)Z,:c3IUb):]L.GV,.-j(Y=07Qe/(,KYhH0#eHs/>jH/mh%_k_;I?,;WN.Vfc6r1-U*la8`o=nL\@[$12*rm/?n+p;
%r36N=$!eZiDAfIE[:[Nf)n3T938!0Vj)U#.*%`[>.=S#&1X(cXJtNb0F)k_"+&>=uC[%Li6$&&'h8(mbr5U,;jpEi'6l:&p(#:s6
%gL-Xn`<`>,i2`S8,J"<:X[38YndD(1b.$G],h=<('(]dnQE%.:cuYatT-g'\m+\Zd^c+%skL(EJlN8TJ/o.2_B(67V=K`ETFp0EQ
%R,Q"Yi"HtV@:Mm-i>#s#jiEStkfV9L2$>'YX1a'AkcA4`TXN]GA^euWkCDaFglRE@O/Y[>-C1p]LXWHXO<@%n%GL7r-XC0_0&rYW
%PD>/\`H),4ckh6uE?Kn$Q]Ob-bd\.l/3,e`6TtV6e!,SVeoiq(7'8QFBqfeUgpL&$BCc8UBqMG_.?b7$m%[Zn5:@(AH@"1_-u'eB
%mF5A$q@J9k!chAES'*0O/=>Q&)P,EBD*ZS%4m7G2X.)dn:504P(``5&[H9l:Ncmd1@lF5gB2F=\O$siF1`!^uW?_*"39&XpK%eI,
%.^Koom3%rsY=7T]]B?pWK2K5m5L!YFc\LOTVpprl&C>QrF)_?i("n0^+!X&3icGt#c+K/JTQE1F>ZVh\=;I:lP):b!n[f+NdL!RP
%&CeXXi`lk:])i]L&`%p'(fFPGgD4W@3M&3c/nW:#[)/=G[ut<L70i836b&Q@)[9n/*G.kQjW5\A?d*\R?%%bd$)A:LLV/</]u+O"
%P$=t5:""7T4@tpNciR^)h,Z!fKF'/m3K,Kka4s/2jncr3VQr]We6N+iYEr%PWuc'?=8$NB7O/W?/b&Hp40K+]0=Ktcq#e<GH7p_f
%6djpAf&W1Z`H5nM5hK]N]r77AI*f#UFo/4maNCf7-_h%(eEaQ)Lm\C4Or$VMV'&UVT9G!j4+T@^?i766J*Le6fBI?^*he1S<f6gt
%\RK6dqJ0b_Fu)d:!6,mi],K2<-g_U?!YU)ni%WWSLjU!_PNs3)L/g`^P2?/e7SqX4Q&+_HQ6sQ2XQ)TA&=1_73,>]34^\F2KSa*M
%_Ri54FQFFm*ZX1:f9WC1Y5,1tJsUi&+EP&%cg1FQMq(0%rq,V)jND_Y")qa'Ekjtr:.8K1jlB!U%70)A5W"81Zl6Z*F*BPGcm#AQ
%>.Q2/59cgHVs"mTNu;VG\V$j5nV?QG>H=Z]%]%+u?X:UHOBa8GqJ^tg]5.C`Saj<ZDehd;;Nh)2aK^LehO,$AWM7D_WCoQnS;BHs
%a_3'dSBqC$U3""I#eIY%lVH5(CRVf@fW>9PnFZ%*G(Gh4i'',ch(IVt,Mlra%XC!YC6mS]>3=K8aIhaTFugs5*<_P-]S;[!GorhO
%V)146`$EHpE)%%nF!t?Ba-7E5PO&fIW>H,njst%;!`_Qq8km*94\CtT-$iUC_ps6-QbY;eKY@MaIqT@D%5:WWN0.Tn2L999##bHj
%mtr&QbIuK15Qc^m[8sdccpd_Z@cLJ]@4Di\M07(;f87Jo6J(lW^0n9H;_a(1k8MU1JB(=@,Kl,?f:;[gidTDRY),CtR+5h'-j[',
%RJ5<h]"pDM[sN@0"t7TG:;1DugnM34X?=i=[9;17e$EF7(-<8Y"'s#N(E8!\Da\VsL6%REkcdgb@8TY\E<aR4#W@'M(oHQJ,VUcp
%[Hs4F/cAV"cu4^&'l+6B:hsg^`QMOm2$lg;hNV3]AoU:D`uk^hm\%B;Js1Io&"nr_ra3&>dnEJ]ZDX('apkiV30]SC`KIUW$SdfA
%>W.hUXd_?K`OIUEMC`$MK`t07.'Cd1'?).S5SdMWnVco9e\J<dKHVF5d@iN&\*&'=2hm?<2'H[C?e;&RQV$:(+1n*E)@=LDd3*W"
%64l5WefN/7U>*[0@s\8PYloU:&bV^Jm3Zg(m2bsL5=f`__\#ml.F7aX(s.&)'`jtgTfNc5<nV[4d\A4m[G'_aeBq`]S7ARWVr-uG
%C(e"FpNJF^MolEK[-3-2"rln@fBtcYVD*d1kEul%o;6/Hoglno60'KG%(Os[B\B#LS%rs[D81Y-=&cDWiEscu(,0<lEWd`f'X@BO
%I,jVV0`fpE*n01(PE$=E0e]/?pH6Ee/)dj=Nf32_g3^!K2p;!VC4GXWa,T,a^O4gfcJ-ii2gat;Vg\*BH[aaYNuRW0rVF(&^Y/IU
%-cGTj3?:"GfYlPYK<$?XlY/YuM5gkrfK#">VL(P'KT3.SA*3P@^N9fT,(?G_c;`!b0iMXh%OJ&t6E?WC7OdH3[Cf(jPsMJ8%c*/P
%597&r@kqAaJn#K*K:cm4l$cK@507,W$k4K`BZX)RQMmno=>0f>):]?BJ7R%n>'c%<-I#sn63Ki-7r-7Hn4>eL,RHk.WiVp7.s\GW
%\YicABWL_*@0"5o`G(m]m%tkW;sMM*nn=BVdBqZJ02=Bn8QpjpY$_nU;5NChPt;@L'NCM@R(K[+$@n;8@1&2\XQ]NAHfPZXbCIuX
%Ch^E*B9KkugSN$1BdroI>"t0Um#51nb(!lr%rWG(^0:dr;?UHDC7E"F(7cOM!b<`?=9IbZ:RuQZmfTEO%crpPi59^'o2MWnFI:0.
%lrk%XJMFiqGo'*R/Y7W9kA>41$;EiiJ5T;+Gc$>P7/SeLh51]>)4+"QK&cN]"Lm*=)mqI[eN.2UPd!ZE_:\lD;HsTJKJtLW\h1X\
%]Q9limk<*pU^S1\%d8M?`t0nua'NVbVm,-(SPS.I;TL<;PkQ\K(jGK]D#oUs6kHt#(%FAQoFM%N2%]#lH'6Jt6j2W7Ce577mlr*.
%=iLc',Qmsp6^I[tiK1hgs8Cu>22o"B7224c#b<P,ESq7238Dghm,nTH5OJaL5?Qe66DG]!=CJeaB@V@'`8Xmi*V>'IEK(Y?.T8^1
%B:0.rpm_`BRGB!aVQfcgUp_:4i@=J6LmO711_B3lcD\G-OL2)q$n1Ar1-r#Y*CEI3/+(a%!u%qsci3&@-Q8@C0'KT?<R8ms=g0;2
%ZAm06)B"UN91oNoW!6)=&'V2K5a=\p\Q+<TfQ1(P'CM=8..9d;$ls0$HV-o/EQXMeX.LHC93GQf2t0!WG=I$N*([QR314<.A':k`
%95#YX?Oj#g#,4%5>`7VN<:;meL.m!(q4m8[pq\,-C*T@/G,Au`]M_N.Q_*,*\h<Q8aY+0Mb/(?]Yn&%rOfWJEjYEt??2:MC'S)`i
%H;>9rM&got(qMh$"?:$b7b;QF<k"8u%:.C2ABMD8H8s$5gSG2j+E(ib9kJ]"KLq)abH4f,-T?^paF:(bgDsqV@R"E&-FpBId&'S/
%[k:RHQBaH.&?Ftp`F6B53#P#;HZXD)^_GKiN$\:B1:U/qi4'b*nH4"sDU046PE;KoXCCd0PkDo?ZKAb=IG42;MNKE,./2&rAYh(9
%\[\u:*KiZM!P?pE`PZ.Uq$MJ$Nb"Tn:oI5tZZjJj8V)2F2g>GLd#@VIl*A)^MRn`2(E"^LFM+91);nq,a.KmuiZt</Z\3/oAH/>?
%0T?._K)gK3T"i4=95<Yg<duQ-FC[8<ZU-Y&V72'7<5[m48a[ouK;r.C57XWd(NfUIS.hG(g'KNE%fjG'>^+BjLDVM-pb$N!h%>2Q
%cl8C.fr]mL:G,1IY0I4L6HN(u6`P0dY^S"92KYnUk%0;Rp(^-5\m&XLP5J<Xq'9CFb^UGk9jkG0>C`5?]-T)-lR`a;1*%-DV23NN
%>(!*#JAZ)Y'["%QA.)j(d'8rSAFVj,C(pn1=XH7MD/tN^:p?R4g<suu>kdHh8SGI/I^I5i\7P!EKO!3;#-%MT<ErDui>8+;DS/YP
%[r;aCm]gI.Co\.gW#nd20>AT>Y4M]J8.FlP*]&(tO=m9m%@aQ5cT=1$PooqMEY`hmL>qA6Z-OcjS)2sJ]*`OQ?M^g./CLR3EZIKq
%ZNmTL9uc$9@n[c.gkRXZ<h$ERJ`WhuE_mP)4OGNN-#tTj0Gin>)$2hnVHg0hm;r&8aaHe,TdR;sqC::RQ7t?'ciSiM+tpVT?9d9*
%^";kr?`6#`fq;in`C1tg8PDbl#tK-cC_:*jZCrJ%#"iT^]P+=Tm0sr6(Z6H.2L8iaCA/8tcr+d`&(uA,0t<H*;%=t[qKYR/4JR@s
%;?+h1;89`=$O`_3G[usrcn;SSNH@R":*djK>]&B&/6?'tH-"U0H,tJZH,u(]GOS3C31"B"hH25cW?.+,OBcGnF3,^I#.Ic<'Q/FE
%;)e$0n$4OK)QGQK+op;=#8=%),6=PK>H^&#Or99P.`,nIBICh3(_Y*jRnFAbEhbs7:k)0p9_'Iee7GT)(=>gH6*$^5W/`rK&GYqR
%W[0=WB=+JgO1GNaq*>uUa(qM@Un+n;GQb58)Y-?b2@aHqDuI4GKj^h]K85%[Y<cCV2+[8NMD[U8Df\#t1nqG&?7AQJ'YRmldC0@a
%b-W/cRdUt%PF`ARnR+Hc%5u9o6ONh"W2U35V3/;_R&b*u>1.+t0rgf&g146M'>8h37oLP*2KMp>1`MB,<mIA8Z&Bg)/:ZmmA0c<N
%rSi>7]#SHF0`PsL:dR7,_8-Rp6sR6U=7LiAVlr7nG>E\EOiI-+q`PgJ&)n_HLj^&Z"+p^S'VN*68WXN5G0,T,ch"%m;s1It/cl1t
%r:SL9C5O&.\H',We_(98$g07LaaZ%7-kSBOo/09nlc<moF*O&*k_^=D5D`u"F6YD*ou,omj,>"1a&&^"m5M#G^&C>RNpJ<+r'X+a
%A;c6'PoK"^CO)5`C@4:cOp#;<cP:ZLC2bUk'lq9GqJM+>=#iN(r2Z+4aWE_D]0e`6pmP4MT5#Td_6<8t1iLbgk==MGXM4IlA]m6^
%h/937ocj,&h\#)7cB;tP:nM1.!`CrE:GQp"KVfp7PP#_jhF/U5cNAsn/#,nGjaiS?Ui$g%-`(O!qNg8<\%;j-:ou'<k87#'!d?Cu
%<+FFOTf<cqU;"j2Y0uFO$EmA7AingllXMNW%I_?R?Lrr5EFaF7#9m-enbQiL/fiCm141uk$.Zq'kr@8Y\8la`Iq8A`f/N4.Bp_tB
%5hI>R4#ika^:JF`aqF?`Mb/J9_mB.=OA)g0F>^%3b'G:]0MT+9'.*<C>Wi^):INh;?1u4;[?bL,+]`qA-g>GQq\&b@;A5li;$q=.
%<;\"+[Mqk!E);s9#I<WOdX(&i*_<S4-LHY/HQ_IBke$;Trl<X_I$a"tI[D&"q/`-?`sI$Y[cdIWV2e)Wd#1dnb(O)6E0;DLQe6[8
%"Lp>H@GA9-1&WP4<Z9r4pb9'"J&P,OiXA4'$1i3Iak)g;9L0C_QWA]uRTIb;9gF-p]YdTOOgT31S#mU`Vg(Ed6Ees6N1\8g;hT@*
%;7s$n*SG_H=Y4EUR#!ilF@n\D^kJdZQ@lN2VTc5Ma2HjkkrK):E>hj88i)7W1)CkfY[1;3>U=$4C5o//YC1?Ha<%3hWmHp83^X2n
%JAPnrZS]GOHe]M\R>,;X-]fh3RI7cNTN[rXLILq4?FbQ1MM7:L)W*NDQ;p7C@]*'g)1Z7%9'$cMJ&au]gbKJcZW+GW7[EIk>Ko;G
%$Q6P(W>:U`Q4$R^'E>:b1"q#qSD<A+,nK)_/7nZI\(#4tSGd^m\J(f6D9#>NVEdP`Y^1;r]_#dXW0PUf_69fff1_C3coC`k^9ar%
%C)qmg62AB7EnVR8=^R)u/&(M(Q<jgcZ7453rEZQ8f0b"/fV['ho@]qnedR1Bm`=JDV7(Kjh;iK,aU=5Lc0@^6UY5qZ:1:mle8=X^
%5ZI;u<*mhKL02c7;tAW\!KAu'?Zuj>.40;RrASkH#^0>)A5!hZo'mEQ+^8-]MFJ7-5f7H<@es)MB`NYDTI'Yt#'FJ(?>A>pKdQms
%&gRc#r5ArZQ9_u5=@p)c1@!<*Wo2VA`U_1pD1?^3nBF>d^nJU&gkfu`=ZA5r]]jrk[RrY$.aFS$`tjY%,KFLC3:7W=IH@s>*HnI3
%IWjTC%Qi`[++7t8?d:b)@gE$<T?A=#qWDkfk1DY`0@*#LFB0F-[):#[p5#5ZjeI5jAHZF)rmd`Cn/_EOE(2CNpt]B>Y0s[8r*=lK
%KG&$KT<eCYOiQg=&G8l2&iYUh9b0FA@trq-.hC'r2VSQdVAW_ebI!Bf?!leMTnFL)2iAP8\:pDAel*B4&D.nj=nYaG?prs@SeZNq
%2:&*_2S(V3i1R9%hi(Td?/6Ib57RUp:^la4o\>6C$ie59`<pu/>rXuA6u,>A+OudS*D[>kAG,;*>GJGhGoK,JDb$R!LJ]93ZF$0)
%a,(@2-\.Z\P@i@DGJ.\D+pjW/jXb4*P0VB+PP_&[Em%(1PNP!Xapebt=(sY(i'a8Tj`3h]<]bW!`d_e3pc,*m]E=_hh+4],/\a\9
%W_BM:4V.q*i[g*'.S/,Z<5._H1uj3[Wa/6kfP&T*5c84f7mGD+lfd#mFQd.Ze*M2?ME:B)*Lj.%bugm(X`J:0UBg/4.JBX8m*L*&
%kYO@MZ5n8J:7ZCF"7pW?5#1"q+al>pT1Al@1jF`dcT'r)O;n=g6ZhoH$p)C$LT'K4q"4pA%^FeDk'P%$cN*MUBHADH8)/D#E"A*#
%+^R>:eqXP/'W8\RkYI?@1I(Z%7VKi[1/4nUf=As2Po'Wh]5j@P6YH#:nq.(s"2+Nrg=cYh4!9)eaRF^3*Y?D::ur#44<U7lK_0ej
%54R2K/pkHRT-3S7%"<fJ%p\p`5!M?u-]WUC]+:S0'0&59l];&D7uRC=#iMZuE6o:Y.1[Ej$(`=F+3m$mQQ?[Yj"Yj@D\!*EiV<DV
%LgguZ;YFa0IgA#oJ]T]o3Cc*UE9IiiSYN5u(j629:*JF:n9[W[LCj"oB-)ZPF4>LAD\#/'3EgldeVE)[*2F[.q*W5Qc4-@*`&Z4i
%PE@t+Q]DHu3>6^k.R&s7'0c6-0b7s\4';,S*dD$YGZ>Xl'o><6i`tD$<'m2LP"/eHH14`mj/K2$'&e(+FZe/9NhRU#D31ZEa@Tt(
%WC?C-.ll0f:IWuM*VWG!I9)%DL#ZZgq,rE#<2tu_m6f_,=W9Skd%?Ts7kt!JZTf/ucP1mOW</^<P_(:Wi:"?#*[HFePMs`13)Ut2
%"H!</il&l^O>bt#4!$5?-WfA".614#Sck=f9U63j`Y8%8^lUYi.1^OD1GA>EIIf_oI)?+NO@Bc1dN\qg5ZN4F>0kFE'1MU[UcgMO
%&(KA:JbMuiG><)ta`?L[7pWF5fB![0>*_)SP:O;I^9_<^TBu2]_sD+hW378,aV]Y'STV@Vh%F?>*6?!A[ml1e*B2@C6j\"":LT`s
%UoFS`d$?8c4[R@]E\Yf)MSYu>:A/5cAi7+rCnMl+q;R!]jh@t7=OFuuZW"=IQ<RU@PAHRDL@OMRLL:$KqR(f,qd9b9XZfAoB?OA;
%/p#]"ge5i];VA!@2W'XZk.-:bkO@:]lF88VK'Q*pDL$Da>:;$1;O108_8O3s1.m($MRa$p?fEATn`8^"oc*DZ['.+<97Y.ps2FZl
%mRRS`Be6;&RW:tt:F7O[S20ok8^H,!WDVU.&Lc]P>$?".pi?bUnDQZ]r_pKlI%0Lo]@8R8G?<9:nGV+"$6aF+2%"u_E1>j6K#;Er
%\!OCRi^:"j,tlgB<HBZ?V^.Dd>Fla(]RZ4*/m,2>P/31<T"ZCCoW4``9n8nWd&pK0b+2N<_mT3L_%%oGntM6JG8\V88,/-R&R`N<
%La,n9iKDr7r._O.rJ6P+Z`kK%9Y9+=9`#QIQP^E^BanX-FNWQs@AdOG[8O?X9@5Ys]E_2N=]XgdZFSmj3>$X&k!.P2n"WO&Q7g8*
%f,TqSkLJ<Ao(;(dSX-p:,n^:jq5a=-=2#If7Ak&+hK?Ut=.#lJZrl-u"pbSFAZVJ8fcG-*67-7MZa7X[&M'e*3rM])auG>)^fTta
%%g]WGI81^Cbe[.`RYU_hEoEtfl=]q=GE.ho<.U*6<gpLA9d-Qr$u,#_<2[?&Qh69F9WtGFJDh=pk4b3mMjLGE4baTuo!:?/pF)7@
%r<P6sEUQNDl8<nO$SuS`E[NMrC\DtQP_?YQj]@?h1-'7r03/s[nYg&W$E[KGrJC_i0$-JXihkC@Y\)"F5nb)$Fh4#+RqY*m:sB4B
%/2hT?8ZOo1g<4*R8T+8oU*78(E^p3W%bRsGY84"YZe]pne32X!JZE2OX2T>7i>-EDp9[rITdXbYj4n_<\;I\,]NXHc6>9SgU=h;5
%+aF`gF#@pdb]He\oll[rWkYL@DIa,c6))PT^]uK;=9Y=(Cl:$TA9sN;pB!!(diqQ'n!Fm=/(961PJN]=%:+0n?o!j_BPAaa@0hZ%
%dJt`eaK>/P)3aZ4;KIc8B32BX=)i7`ko!XrBn3UQEi@uW70I#0`)K28=]cU3iVBZcTmb6hJ>=KJU9,'E<\-^Lf`U;N3fL\Lp(d4.
%+c9+G*6qjMPteC1RS]Eeq5U?"_<B8(<c*tJHZdE532Plf?d&qaWZE5B'4H`0Y(&aMM#=]D?#`5+J^:cSlaP[FZO>K0$e$=ClV?Ki
%So<1)a#l_3ghH[7G:gJV!>e2(%UgDXC$?WQ^&`>];=YL":;]3!J4f=`*dGsQlYIJ8p<bLe5rZ-]q`O_HIP7Y)#+E<8["k<i\JGdt
%*MtPD/j%$]LhFnV[9n>[!1C$7i!--Ri[YkG9.0ej,m)L/9)3'$n>e-E+3[_m*Zg[H@<4Ep+NLU]d@I)n&o8">SZ>sd[u1"mG`M4.
%8LER&o+kBJe5aY>7L4N8TZJ?b<i4q(P><T,/SYVMA.U?';M*q)cr]e<krOp-05(tB]sajGT'"SrQUSj@['e=F1"?I0<Y`84`N]e=
%]a""GN>tKICfIFDQ4CR/\Sod8leKGBI)XJlMj%P<Y4hqV5gZde>p<Y^aW9?W5/m#%DFXPs5Nc'@@Lk@kL5&>b*0H['(mu:']Oa\&
%?d1/h4Gl"l,h%>=obuqT_9^-["d=4c=Dh_`*M1pfa@M@[@2iLJZWTPgocS6\n%QQp<*.(a%li^VAX)9hMp?-_7,%'(9[UN4[5)f_
%7RTW.d\5<fa)m8Tnj2"7-n8>M:MRb/I)?@#<1fj:Y9FuZmS*e1EjlelggC.c@&qTKM="M@`MVi9do9#mQoNi(3j\nkhZg<%)[G?'
%ZiJ5A)`@>>\"-F5kffd[2M*AWG?h1L*>sf>E)I&d,jQ%m2c__Hk]KPkhG+0D:NfAWZYYfRB=]`pPPBPL4qn6[gVa4GDKFWjS@U^S
%-B0rU[MsWGZL&FTG2Dl2k3B3%o8&OmK.>C%-kbg+XVjJdjF4;KZ#d")KJ*X05?W_+m'2huZIFAidP39W=pdS(HA1&L8&7\_.!tQ/
%"?M&[.$Aa*hr.THoJ"ZrV_uZ`PKn?G(o<#)=U)D7\*h7ACIPP7&M&M5jkY_jki1ukW&,kO![kX3jq3=PP59`4`aTg+!?r&E*VgMN
%$/T6f..;G.doYXL_GifF9kGLVQ)9l,*X3]S(4/HKSh4"R&:DhCG9T;=#Y[/DZ4)`$?:emrgo?/7,sFji"3ki-U.>\i"'\ZJ=cj]m
%d6lYiJpm=h+&U_F6eAKdM6J[q0V],481P:1bGm&_nmRCedShct:$KTRRZMZFL`>?(76ZDHg?S/HrFU+l\6"CWNu1(?s$s;C8.!SP
%__]CoU`s_tQ:#\6b^^1kdNPGJ,[TXBm?#I2'#%:<9I7,9g<nk3/<tN_\Z_&VS<<2f7Af@+1>2egd@4]c:V9h&>Ts(kNi%TCG7/[&
%f$I5=PVbn%:0Uo.QCLESBX-qW`HWi/7@J5.>JWc"gDpE"k2P1(d7oS9d#p$ogONO1oj'i/&_F\S!&;u5n)>?Y#SQIlh<l;dY5>iE
%C\:O_iAE==baiIRq_"Vnk#k%H5l(dog_U_h^3I,+j<C]CU'ZM?S6f/(Zf[-5>U*IIeEr8l6Fja./)Tks<W(i*0.dXE&,)PE/AslU
%:E-^.I$]3EKI$+KVKY;Ajo>jq&@*eVgHc*F%q6'P\2^48`u.%Le53e9e<3I\Lt7nM-R<K9rTKuJ=Wq@kM$T8qeN)`gmll0p6lX-D
%iC@"r]`^N'"k8J_[A#<e?"9[TdtncDXi7I@'pWT@\4-k!"N&YC<@?Jch7F8d'`<f#rqGMt(]KgArlbh$k(Z*A_k4KuceS#&DYQ"H
%r0\N'bRK'aL-KasT=Nq\b.6J\pr/m(RpZ*HIsT-=pa:R_=24`9^\Z,Ls7Fd4?iTi#^\l@Ubs2'scT_='07T89Dm%Dns6Tn7^rDl)
%8p-%.!7Nub!?GXMjPW];pl<aSF`#2^0^7PP6Gb'mq\n0!4^$3YE\NU->d(o".USn%/,A^qackL/Z72RL2+Z=FiY82#6SC3q2+o1C
%TsT"A'Rd9?N]#lr#a^h@RCK?s]K3eGYD(bD(g:Tu>>9aWG<'*$nrD7(-E;NY_l`=o,E9,a*nGMlW[SqqRn*jpeL$rjp#5A6m8-13
%@7f)RqHPWrlqt92lXRT)9>;P_Y1hU0BkL?eL7DE?I-K$c>H8hmd83Ac@(ao6\%Tl4l`Ea_eEh.Nel.WDWFlOLjm3<"9C:.RX55^Z
%opM"H\M[(Sk@FAcV_UsGK69]pX7rYbF&Tn^EDO$691_9e`N$inNa5hN;9]umOT^5!-*Mqa09TI`BfZ5<'[kRT]C4X@]!SlnUba4a
%=sU_M6EA>GDjI+fNl\5JN6lV-f:e\)=/!^QV%TE-Tahd*2r$,PX5:#7I=2e<Tg8V,[J62Zpm)g?Gu7d(3\[:kRs\BG8gm(;m*QY\
%,q+ktBGiQ]'\oZVON+?Q>_s#._t0.LSbaDk03lA>kW)cB410DN7iq@&@cn:6f#0XL1ah,Z-&Q9c86s3u:h(i$p8(e649f@=`O!Ct
%@]Q+U=3F"3M/O")`d*hDE;!W\DFpiZJh=5s)FmhQ+Dg_rkB7rlfBk-*8?K7<JnnOZL_7KQ94EQrD0ddnkTH.(J+LBU$4hu*X2+$8
%!8>XF(N!.J\"LB>'-qc*/Et0lP,RRV;.%A).CuX?BEjWq_&$m<[H73Tf4BjNRV#fh_)22[b/#Oi<:G)H8B,)I`5tY#/aeGS2PE&?
%?s=2+^=p$56uT'r8qT#.g'$3g5d!uA*3oN.diF9/R[V%U=63EX)M;$a)!Xb^T01!7,LSr`p"L:tHg_ALVaL0)n&iKa16YtI/s28E
%]?4OCD\hOS;5p*PP2HO7DCrJG%knD/MstV2c2`L*4#BQT7:[RH15A=Z>%SBPT)q_[*u-Zjk'N-7^4T0@flu-Hd`[E>0oPhV2Qf`4
%1OUnH_(p&h7h)Rto`LLA=(s7@E*^(s't62<KCumY-pMO;BPhApC@0XpWKC@0>>Rl8[H:">)Yg.0V7HVk%<o=7Ct'N^QIUhpk4A#M
%%3GF,B)VC$`S&W#&[PA>XW\9FB?M)9p!`aT'nKAqN6s8eJqUd-2J?[fjs?3_Ds)%t-DSfS^l-d>'s88aG&IQ%K]/^khd/rrC?Jsu
%/g:C?#@1%>Gs!9noEaW@q9V)UI'd7[7@&4T&k@N8X4:"lM>sJWN)rh(H5sWb6O1"E^dOF!@]-ng@*Dn2Ahn9Eo]&R9QO4Hql<9'U
%G?K]gW:jM1iKT,@ma6(c-:otohUN[&E(fr36Wfa+7%8?He$0*&V\'[g,M/Rc<m[M"Tn].tq+F`7f<%/n&K[mGQ85)3lP>PTO+-kG
%>r\6lnHm^*\$\gfc2DmJ?iD<HrEifnjjTk%UJHC2D[?)eaoD1+Is=E]Is>@d5)J6S'B4N'J,T!)hu;Xnp(,bCrUa0`rp@HnTDndB
%Y5e8MNOaK<kJ%q%C9u\6%dJ-aO=kUmfY\!a\,ck,6k9CsFLTudKb%5=Xd>.PkUW\OE\Ar`)3n5JMtF4A&UVXNp.+;V's9(3BWR(B
%:&7,VF8]-%Bhgh*I@&L8,FM=_gS89;[W\+5CEigthSFYrl7QK%m>OJ)L_PQ+6"9*T"aTl$,1>ZFrM,KaFRPmkOo7cVi(ta['GCsF
%LM(>\=Md$s3Y(85F5>n[?oaH[hUZH`Kq1U,k>Wh7SdP$`fo^ltZm&Brj%Z?=C278GeTOT02IPLI7dX9!X0Tb,%!>!b.ln"Gg4/E,
%VD.b5USre%BWn9E:I!9\JjjCR0j@,o`B4'7pMBXZX,^-I4@_W]jhla9YDhWW3\7Ws/+TodTBlC15&`ruYr"qub\FV_9Xu07Z)*C[
%&Q#N/?WE@J!peTN`<Wl$Q>Y^]l0r:L^VhNIV,^]n'.no0k+6::&>OLGD0R_aFEtab?Tn8$eIUm@)5]XVq+oN?=<0A#&Iu4'2arQn
%n`!C(Ga:Z[+)<3Yil^/6#h?sFbd1:?Y,(Zfr>[:TD^n?)K%$\KFY$l_b?U*3fXY[=W31P"_4=5AVjcJ9o(T"LpoGb_.ZW]?jIq<R
%WcXh*U5.IeTu)+.`?&d&ccY[d"FR3a+"GFrddtKdos9JQVV$<qMEabsmn2r%>5Y.)rs/Vm/c?P9HjhCJ@E7uX3Li`\%^>+^G;p$R
%RqlsjWk84M\"FeY6FIX69n+VKlmakl)9CuJ`I.i31hHgGb>tABHn8[g_tI;4^?bA42W\:q\'qBHmeYloF4H5E;LZ7,hm,V)MU5Fc
%5"\>k!n4[mFXgN7$<u[#fWeELZ(Q9C]H&MEO##RehKP<>SrH^1G,o[ketIZ\d,oK=#CH0(*Lb039k]<>e[)E$/qBKBA^>DN\a9#@
%cTQ&gk@3>J.X8$8^*tg$X-&I3jf,b8/W\fN8+t(gJ+!oj+m,6^;o/6OXCh.M?.#LdX=KHMFu(B;Pc_1jp8eVB.Ud(Nig/5A[!>G-
%Lgk]fm8%ZTg.#^/Vf$6U,CD!.+KK%0INV7cTS(]5,q*$BHY@#W'GqB")JCg$QcW/iBAFNaPknCd79W7q)V<3;&mM,Q3NQF;CDa%D
%<,7s6^en>@f!t$-iCAPL=KAS7AXEOD"UrM)JDO,5gBt3pG`)Z,L!O2UMPh%!lYm>11>>]XAVHmI+sF9uh3MBg#/42b//(;lCQUl`
%OGW6JBF*<;R1.7u[T^G@lkTY`PVK!rO1%flaOhhP6ZAfq?Qtn-$Aqr7jZZ&H)6kpMkc\(9<G!H/<+1]uJ>k-)N&5)Y*,QW-+LlR5
%bX3HD:#9u&Ya&*i7n,k7$&Lk5X_Z#469e\;Nn\.LBiq:,Mj?AV2/Zhh+hs*0;LBp3`')Js8=F4\X$`$M:&_I@VPb4?5M_,:3C,`r
%elU&(F:"HL.uQHG!B6E(-XK6]7sDeHLf2/+?+H7L.ZE_M_<p@.1KhXja6_5AiZ'Boe`FHeX\,W4UuE4@%Odobi)(\a/I;j&7sM[>
%Xo>#PO+'b0pn/4no#5AXE_(9mR,ufg(?<uLak,;7Z@F&f88jHS(@#S!gm-rdGQddu\_,&8&tLlWcR_@E_@ic$9NJ)fC!(,n:q`&T
%$u+5Spc\=*^$^oFY:?Z;]g6j:,9JSgfcRD>+[!(?7:^<s`B#Y'"KKmrnQj!Z`<d8_*Fh?2`W<3^]S"i^fb<?c$0L1n;Jtg:gaju(
%<MK`bY>Ip/J4kJj$%bs]>IOM48@V&(ff[DP>oU;,8Mk-YPClT'UaAdC2b/Kk&gC"."<")1pK:PLQ8#/ABbHWp#FE$hUo)c%Hb?et
%.\(q;d!<SP4`=\^Pl,jK@d5LT@qS3`49RLpTg*lC:FIfOpHd$B%P=t?,tVhDFi"ZKi&GZ4[#S!hYnZMi^&pto71t$&*H4O`7HA-j
%T?W/aHRiihd]_.:YLo&e.S>dsY224YWLmJd9S"Ic0?3]9InKoJAW&2"QrZP5W_;F"0'Bj[DG[aXWlJ35U$KK5&u-H?'`0lC^;M:5
%\'/Z?=4YQCn4C4<)NFrEq@.>,U3H.?,[:A//tm`O`MSc=Hp_>K0Iss\W.PS"j.Uc4),a>fXbTmrd2M-(.66q_WO/'!<u@4)J<L<7
%;:R/I_u&fB.mJ<$]Q`l[=/_#.;AV]m\KtNN$/25)Dn))^]/JcXFBo`;Ea:5#oJUig1]-9*h([u/NgDGe8.s_:0OV:G%oa_Hf;/pi
%Gk#k?1:[=oTF"/,-YXcVAl&p"eP-VQrm"Bn+cmg+fV/pTO_<[ZSK`=0->Tq\]<^Z=,c$[s-@/WB-C\jlTJEW67QI&7THb)JLX&\B
%1I+oa8L'GK4j;h#(n0O1,dPK7+b_%F9ab694uRF<;BQ"aaS#'O<K9rS\$DG%BMOkumV=[9T@u`aZfnT5oQ:GhjorB^/NPnm=WraL
%+Qo\Q,?FLZTm;hZA"Q[^:6;.om+P6k`[KenojC[;Kg/>;=!n!0cB?Uap4u0&O=-N+qT6ZQQk(hoLNls9Co!h.p0XQa<D(B;%d$Dh
%?"T5qqbejUr7'4!0r,7:S(2s2X%kL75)4AGc\+NK7bsb;hh&:5jmE2H6V?NLN#$h.HORSO;OOZN#b=@`Ahf+kd7@O)>r3)<.1X]N
%h?UIo9lU\-4NZ>r7ESH`WYOHRH=0o"6q>6^U'PW@GCjMPAH_;pP$;Io,AOOgl,=0R'XIJ0O=)2<dp]ILET!58+X[G1dZ0EmCD%_[
%_.t1]Q9^`qEn"%ps/mqDg<,Qr>2HdbfT8lRIgn^[Iqn5aPI_Ia[,f*0.5rb>&id%KXEoM[_Su8VD'I\b3f,,cdAD"_18oLWK:Oc5
%-4/A`d>pREeH%gfV'ph`V@c$XXI1sD+5m6MocUUNU<ADqP&)Q^\Ojf&*FhXXaL6iF.-F&6ZVF_%bp<6Up@+Wj9FFGu0bq3j/r7"7
%fj>F"8Cg*u_slhj(`:CpMG'C'XbqU_)p'qXa2<p\l!o?d/$la3F8gE:^2^7cO<!hON_%;o&,(iT)$"K<>:h&Z]_'>n%<G<KMOXk"
%lt[,_7?XdL,:=dArQM.&6c<p/B[nY`C(_ks]g>EU+^r2j`Crjo/J,=dgGu[6_>>]8o.R3o`HA.@<0]?m8&-u@m81GuL>Lf[BJQ<K
%3#jpm"=KUH)&j.#F+S70K4M2Heuf8@?fXaWFW#gjF[Z`0mOZpFY*2h\$2q0[kpR,VEs+.e+X:;JV_(_.B?67W,(E0%T\OV+ZDrJ'
%E'o9X3kX$ipFCt,-'M2sgZU/J#c/JuQ'd8U?a4j>rpJ:WU,'P"'P,(JG!3%=6,G_Ki^5>&I$*o7H=T\"NZ'"P:X,kes!#/XgH'a]
%q,aV+I;XZb7@10W[>sb=![F1$dKt/(+9r[/635Xb8/XLpbEAdZ`om:gM98;s1E\,o-gar6=:@O$<G#+n$9YOs@!>^Z+3eD7%FXFh
%K0a+.lrX"CU)`GOl(pF$8%14hhT\.(P0.M\m\R:4W$L6'XfnOe87kj;R\euQ23iq&9/It<MQL^'LZ3F<=SV6HCi=#DD[U<di]9D+
%qYO8BH:(74YVg,"^NYB`$)<&'+hSfKW2j.B9PstdIi3EKOTC_qJP1b[;D1=CPu'9O\)`96_eO>j1mY[<dsJB@/7'8g?KWCcP#]YU
%+*SRj4</.9<.C*Qs/Q_j74WaGFa4[/2;YFLhW4r`SJ>)6(skk109gBHmLa'X9K"h#lFk.MZ@nESDp-OW-+=Mo3"]_-cHD#n!#l+8
%0se;\j(t.3g:Zn4Mjm+H/]M'c*YoZ`PQ:E:ieu=>GIVPoLbBI*0YW>oRAJl-S#!eFOL`nE,Lu@e>$rt,#L5lG1P$gJ64D#k,t;qI
%rNm2Y96C79ks/Z><8JiTUM:a5nUc/A5NttijBSdP]Aj.8`GFf3`q';iA>,+TJe59L5k(#eD5.Z@F!nKfl@Nod#Vm:D2Q9]gEG33u
%>-]dlDAugY*nE<A^<14HQk%Xs1t.2JH#lo+92Y5Dr2B0`]nW5e?F<bH=@bst1+nQJO$jr.;#,DcP"Lm*;jro?E\G*kJi_bRRLj5W
%pP`7OjR@Os$Ui3X+h+0u051'u@G33I;AKYQ\B-g.s,/L8*2F?76^'GRr@TDb0XVOGDjR,ZeKE-`HFn;K":C5nYK&_Cet2\MYZ-CR
%g:N[Q[N*ohBOJB,UP_6Em4X4XXP*1IO]o_[AT,I3CN]N8D5F)98Bj\NW-&3-C.\$fR8C2c-<4rJVu/KOQZ"@)\6QdTU^ft%3,^ks
%%'WD%.>4C4Rt<N$D.qbM4LesEHS!7">E9729J5c:dZ9CMhL@#)Deb[Mb",mqUiU*);fa:^0IWlM]OEnQ]9i[>Ep9N\ZE)t'V)f.n
%$06p]iCQZ]:jgGPLHJ-4);$]u=Hh3Ga5B%lB7^tP/u:+u=>>'G'eX6FV\pWc7:.dgobUH"'q(SYb-`Y_>+tX+-T-g1bJ\s8MG,+J
%"Is=+\RPQc"/r4@6,h)6U)sW3M(T%e20.Uq4`)&oB6Bgo9\-6'l\``2Pa+3*&2%p!4qTqE>?IY@X[ZgS:pNN8<Rq(X*_KAQ))P^%
%#A&$P"%c:AZ]@Y4h-l<5.[5elc^cor!%E)'0p$oLY/!K]Md:5?+Cl:R.uF%*[+g4]E:&p07TFA6+=tXq8u>]6T?Uc6fq&!L_#o-V
%l-cm5LI[XmXJsf>iOd4?XU1'Eg;06s?A<@*X)8&SMc.5j+=2IHhBNg=81_[U0%=L%!N+I!BDAc^^j7kLI1bP$e_0P:Ya`rpohNjN
%-h$$B<L;8njYg(E?I?VMM2lg97GGd\:$u3A7`KMYFS8nrM_LJGTQa853TQSue1c(4bEX+gP8BtjD"6FrQog,CNH><rnd5N<41rb:
%4LMR;gp7q1+U+APEf;,M^kPU1#5H?F5B"dk5t+Z*>\"kJl>jbdY3iX8SWU^)jl.@@NS$pB.;?poRFLK%#>9up+5)ejX0]F;m7AF>
%)oh$Y1hiYe:r>R9=q+s!9-Ht<oaE/PP7c]?C!_"X[<?,2EZ*rCC/6+jUtMe*e#B4e/G)]6kgV!nXKWGuf'riNJg6N;PJP2#Xb*^>
%I5uc'Aft*DR+f>pP2Q6fm0bH]V!'HA$DaF<+qQTiAMo,m9;]U)dU(0EaJ]YSN\[B$7]2Kb8)8ho7G[,!f6QZ59_BW7UK[YBXDk-=
%LRs*HDud)UcD_bY_3UJlRam4RWBZ/A$?ViAnfXdE@3Xqa_[1&mF[LQ"@Me2CGruIPKElLt/fj&NCg9+d>FWqi+a[QpIC4dPiW(O.
%[,eCZD?L*0Lp_j9H-2pS,[nCCIGJ*B9#6VDc4+WL^tVi6(C7[D8Zrbs0+cd=q]T>-20DN[[7!bfh9t*ckeK=SSEoT1.Vm_`E=[V>
%,>(:!N2lRVWKD+%!)!scZ_OZ(*l2o8ZA.<8P8,nN$'$G#;)4]6h79T[/_gh63,ILUXWS6Q8D;rbm67\h]/Be_QK&=5!LD,7K<2B?
%;9'G*DS+Ka?LMLmPaY<da/jTlm^e"KM3Eq*\DH1h5RliV5d.>X+a/\qY""7ji!_li-S`]22OjiuE!,rQ9-$]2J2^1O*:$ns*#Fn$
%:p8)/W?eUNCNsA+DbI*<e88c`.;u)@GWJ>$)7]V2WT`TVib[<,V)<lO/3>E5CS@G>q1o_"*%I)pE5GHr'W3"I+HD:p!5%5@_q#8a
%'P@uBUjFofG)dG@=Ohh^3o5WA5T=Cf3[I*-pa7AA-*Ofu?>\F478#)qZ9QeN-Ch-=>@k-0[OA"Y0n2jY8OA7_PtLBbe,Z*QOg_k!
%^7#Lh`5T=Di@"^5Rj;D'9N=fZ(/RU"W2@Gg>[pj"44%V)e#d"7[D64>q@e2AFJ/P>03.?lH!L$SUc@D-<s=ibN^sXhFW5.T;P^h3
%dsFF2:q@]rE?,EG`9Pg^X2`e'J2^K;Y$niYCt9KcJ-X:jKadao<Pf/N(qLQ<4_<2k@?dJB%=3&PCC`1W@<PqE@ujg>N'OV+=5e]H
%ZcjV4+f@V6?sR;Mqo:#\jnIcGLlh2rJ+713>JGl\/1M\`YfO#i7On;+8)8=$:&PmnY^eo\c+g@B1jWZ7CG<RE0FZ*1KtNb(?d>Ht
%0O-'#."`d$7ka0HP0CB!g'N7mCRZUn%QK#kNG*m.:f(_)]*pTPj?P]K+9c#tOHdfGT^$Q#e>W(-X:41:bKpG2iJ;9T6E@?8mLU?#
%\Dc<kK%qMI"auBB-jjQ"oVen(:^M4"a0>mc)Qg7"3KUG$b9c20-M@H5@)Pn;MSlE9KNo:45JNY?9A0HHaburmj2-,*;`[cB\<?1f
%l.<b";NGbik[[`8H=K93A15jr:RojT(PU"V%M'q``&W1O[I"O'P@Rrdi&s@:Y%#foY_\Za+r?/==a"gn.FBfAU3mu9r8Fd4c%'of
%&;"IV4Mc7J<76ZJTXrnAR6P8?l=m\LV.>9uMXchTiS<eC'E"1jSuCXh(@64s@0h2mjbIV"H)(1E88jXbCXi"f^d'oV'l[2ra)bTd
%c\1=+V&+tU,U2R[+g?*;[o:D[(*K]m@T(d1eSkt;/Db9n(m$K$$CkufC#[Bggd!K:cB*;7iMdEp0P`Zd5J-SqZi:rodV7V=#l];B
%PF3t[,/uJCgcf$t2sX?"l..'V9Hlh?,!H1uLcq\,UM+rWj<;9+fQ<MtW!J]b!V17HU6$o8,cr%U;Ml5H#kk(Tf1re;*T\oV`Kr%B
%rQp+[0f<=cJL]\MW3@0--F8:7G'P-?.`.HQT->ij!`0OYaQlT@"Ti#*KT3el=u_u4$kh6F,!ON[P)!42gW]n.1)A$4$5$"KO=;+5
%Ef^)mK.a3Lk$USk3Z_>R-tIqkKFfd]"f*Hs]^2.KK1B#bNtWjMRro26.-<hQ+KDr+$4[Ki\lH.m/oNC1Ksu#ZR,",'jP>2AELpD[
%f<).>/A;\l?:33QDl';hF68o-17'_hIGpZ<%8kFtq"H57:BA7$N_O=Xk+Atj*fAJ\Rp$-$gP%NB'kuQtb3fi9&s2G/4-R]qYs_ol
%TA?YG,&0".AQ:f]j_1'aOMOGp(K;ar&R"#R;tRR,T=KG/a_*eng,qQCUJ&d_q,Ft[$06%O<[i6.,8@`^K/G$F^KZs>W+dtUZ\M^d
%VIDEX42p$\9Y,R3<>Bc6L9QG0OOmP_9f?SV$['Nd1>C'W2d=P*$-RQ>3'-#M@I)'!Cr*Qtj*C:Oi/)ne2f-QJqX,sL?\-95a'ukD
%793gJ"Ng=+`%d'Md0Q"=2Y&P['b#_RVuE<R6f;[3H`!I:*bLqoH!mJd4j:hJWqD(Q<sSGan&4$k;OF3I7`O+h438LjQtpU@3Q#09
%D@d5H8?lA*oA1a'%P2&0EJ0<Lq*%!ODRpuHY.(MT<O3G>37f&g!fLZkd7BpNX:bb^C@_g[LKfTr9T+2qSVNnaS8MJn.>ZJ36d#o?
%MIkfk[rmbo2J:)gQ4SqQ>liAs\*]r-TV^DhEC&/e-Ej+lR_)jpYd,g(3b1m;W$7lMp?_7V/<$X@_BNkjUKboV@l8Kc0=e?"%2utk
%.?93WODh`T*+(Q[/]hCAl-K>YNRI5<&G+Q&+"Q&+-F(f'>1:EONLbO,3tAXaN7)j+K[D-XZ*lCuAOi6RGCl8=_R>s:fZSFfSh/7+
%cImFAL-2MXrlV#4>lr-E6n_u_`RNV#QHdq`>'#AP4]V)3PbE%PUYEQ4QR'DTd\7VeWG43HDiIRcoj.Y1?$]Tp%^ks`jQ3-LE;ngC
%@/+a6?p_EUh2A,D;`Hho^PSj@fbuioT!;GB'O-eaDUa9:dTY8cG1#Xj4]3EuVThLr,XsMZ(l^[.>R34JQd^60CmMl3bplgtUYd8;
%`"Hg`(6m/9QMJ-N1[GRon=Q0cP8N##?"FYhW8Gi.h7,ku\#FWfY-3:,otV#]o$QcUBWT`d!B5$X(fTu4(]1!bmCVg>'BeA!gMlHr
%oO`Sqc0-NZ<NRE,0c_F%bX.MHdH0N.WBd6t,13]K5,.-KDo1pL">dO$"JRPLr>egJ+04_<:CP.Mf)3SDS$pi-(_5"GKb^A_.:Tl(
%qd'!n^l4T6di)Oj'C]plMX)E;/P>c/oW?::YXPc`6OIFE#Hn#S8;'\f4;TNpNJ=`B3S$+G>Io;gmoA13j7U#?[lCt\3@Wq%ioBu0
%-(>.V)HdHsq::dDPi;]&n)QQ7b&Rb'>#+t,/'d3QV;4AI;9+b+jcq)cs2J)-7X<@>2;9csBjg#RO4o(CZgFdX80Y>SnXru]>RD==
%,:8&KXH6:)Cgb/n7Ua#Ts2%sP/g@EcQAK\9E@0U<M0b&(PYD*NF^]d#_(4U4@g;q@'Efm"I6CmWj1-lTRO<cQ*Nu.PcI8t^:5G@^
%CA1?hnG9<GNZ2b?euAs8geDeqlYadBUb",oCuK0oK<Pro[c)"*22C3$:ti=CPT@mkm1HpjnAUXeAQHjselY8%K;!$<2Q5hK41g6%
%"]f_1:DZ*qd1p&LW7Et`A;AIh?Fqfn<l>:9(Q`VdY$R>gJu:&g3"9^kUa==!i_^QMX5CnmW?!<A[0<DSG9IPNL@fCWg`AUjM1)aL
%[4=ZRR;.IQ'"7V8B1dm3FYK8Q#]DIEhRal$hHW8]FMXeSb,snTJ.u7"+T]snQ/#/g1/1JlUjY6M,BXdX6p\FR%?P<BXVt))Rb%Om
%Vr^d`j1:UZl--_n\g9mH(R/Xp'cpN+jbpD>=bU9L[V=!(bX37XOk"iIhl1r=BKLDa9C958&mt1u'EuUHZXfp1Y)bSD.S<=W"'XtI
%;PF[eV<D%ZOiE2$f:k61dU1T;@G'DJ0)\1%=L&67$?;nH?=Z>R/GK^`8`-?l'S.2B0;JJ@l6ni]m*oD)`8?16U-cr6b9%TIoa8l-
%O^&PpI\IR<8#;ZKL0ask]LTMdN0R,65Uknoq,4p')A8BH\_aAO7:6dUEKR]*&.Nmo]*c+a.29W9jlE?gd@tamTl(J6M47A,<PWJ-
%ge;ubf1RAQRYO;[]nX+4@\<VT3A_VC3`D>o2[SPAeM)%7qfeAWPOZ7RhPlHOD>B?[i.s#NQl8GGMl$e0ds^<I3Vld[n:W\8oa_R:
%mJ(J,l-=$lQUG#%%1RMn`$K%LQ7d?Mn')?p74a#S/(sJk0.q)&f-OLL;e"+7\2C"0+KSFuYG<[f/&]08^Ntt*1Lu_t-d(VI$=SQ8
%3Kda<(o5ap)2A*#H+ORVbEN-KPhi^jL_;b<"]J%J.em0fG=+DhUBH!V%O6Mh>[NrgF42\O^2nZS=>fOYF<\h@_UGZ$UMJbjU+gT!
%Co^R:Q=eN&N<kE4o\%DXnc(JHBj-c5X(UZ8Ot&`kOAmV8L"u`[X(mP2,jq&fqla"M*P_\]1]gF@U!;QF3B!<8[k:a8$q5m`9X6Oo
%U<5qi%&QudVsf*.O/#o$SC1]FCiDBR'UhsnGF!]q]TE;SQW:Hk/5*`N<2<CnqIV!<0N?T$Gc1%OU2S&R;ct?f:=URL:[^),Vm;'N
%./0a6gnUNcD:B\;8Pb3O=demTJae0'SNqXUs$+@"TA]`FnGam2rtG>1$3'r-s*oY#5JdAli;ZUBs!RUA'E%k:rr3-$ItI\b_>g.c
%s%i.a-i!]Tr;R*&s%`arrsl*=hnoHRi<In`LE##5r\(I@Ke'3?C0@4+Csf5$*T9EopuC*&AIMXXH\a3O5qmpN@\LhPb78(BCPfMc
%$]3"Ao&f9[<O\VXKb4s/L76gNeS:gG<?j$-jP!23j/]tq;Q49EBW(r+WT?r)LHa6qIc>*:f,n8_6S21f*$4B[%D.A+B,?@i*)M$J
%",/H@@/WCs:f/Z.W]CbJ7V57[6@SR-W6Pq0WrdHO>tr$EM%'FZ?)"n-C.5;ENr\OZqdu1hre_=dMQ'R<XtCm1P?qiG6V]EO4JY+E
%Jie_%>DY5miDY&ZToMT@P_OpCdY`gm3o>UU`-R]Y1+bm:g/0@lGBF.;`A'J)aX3,;]iCduP/eY2ac!Of[JWP%0VTd7F]h0a\0@;b
%f%-_eW];!HX4See7^7Fiq:N[ZWKouBDM__+Lmi8n73qtP98uQT=W5J!p*0RDOkkR6kh1gB^rUT^!faSMoZ5O-TF/(Dm;%A@6Z\g_
%Y%7Wc@2#E0]jFM@>=Ml1a1g'=S1HLnU"Q?gI?d?:>:]M\>r!..0is7YPj9d,Z=E_R*2jsHgQPJ]8F`__pF";]*:7[PBqD9(]o5aB
%7JlmV@R?8CrM;Hj1@B;0!rM8=WpCI91Y;#roSSK83N3*]6"-i^%]%0:KUV=RPd4-7OQ'ABqt=t_\rg%B99k9MI!5lCetE1@UnOe]
%6)73QrZ#]oNhB90gDrKK@&#2R[3VP2*u2T9Z*0W6-&0j(.7`i8mr<Bj85)2>,=S_QXh*tprnYq6:Y12GM+1F+BWHg>[u5jhjd'hP
%MNMY$%q-h8UGA1oYeLs`MihR"$:KJEd]XQ]1Hq(FIha3krEYFBF](k'S&/[%]Y"*?>)Apf!G#([Z?p]?^.P64.$`rkAGZ#%^-pUN
%fs"onN;SLE:VaM0'Y9pnZA_'4.XW1me0$V55lOArCnoon[FZ%C$4bDo[p*_\<&nA98<llk[bXVE]?O4#*K:LuckPJQAcC\gS0b8_
%K1_SZ'$JkE=O#[5S8Ltp@uArWL\K$jD%?#<=*\[Q?@G$i$fS+&>_OOl`R38LhecPc5S?F&[Td&!*pTOr02G@Qa]\=q9;&=7"X3]V
%*RdOCG86Jbj1@W6kf]":a6m+f_tgIB@W<)UH;s_QM#eF"3u,r5gN/]+-P\cB78V^s#1J0[NIp"NPZg5)i\]Qk%YZ\O/!_5q/;r&t
%Z=gt7F<mKIG9oa'b5,kYL8fQ3VJ<Id-qYeJQT"Lc[=@q;eVnlmF<b'H"bkIGmt6<2-VZ^K>1uXI/3:Ls:.R@A-9\bAq:1Xo<+`Q1
%"b]nj)W"E6c7rUqre&Lj==Rt<i_2e.A=22Q-GY^*0>?'Qf*8+PeKZFN3\jseV^$EkIA-'G_8G2hX[p%0''lqW/TL$`GY%WLa48b8
%U?kbT?$/LR3)C'9A"WM/[Bks7iU!^$"bTS3<]SBd>qab;)A5Y^W+M!BV`],>8nIhS'][NCFEP>rZUWW$9dD5Pi-2fEb)9dC\$'\I
%:b&.WRmoO;Z'NpI[S6U`@-19r-pqcJRHa+Dd>Z[+MbUH0pZ2gL)S@IQ*V%u-$1Y`:O>MQd1[GI>"gWjsHCSE=6gGmY'KVY'XuF`q
%d\QjpH@N60OTP]R^!tdnWTG_;hslT6RP%J?R6?W@6004.JupcY[+ojE.<>2\_tc-iW#fZ#=(qYT;>,3*^\bTtg35pSPe4S5G^`T.
%BglT)I1Z$nfG?s0CDs5=)krG+s.Y`WD=Fug^IpT84%9u=JW%-h2;c5GQ.Z_01cs-L5Gdk5@96O"YN3Jp(5gA/4di3la<kC=\'RcD
%?6Ds3^(pLkeuOlQja>bWBZbt0Q-hs:`97e90Oc,.N[<LK%C)/MQ@%"n9!K@X8$j5;8':0m@Ou3RkQ$fggjS6]KqJ+c6FP9XoW&.A
%._HhFQ!HV4T&pA_4!KW`?+EPU`Fj6-aO6O%Co)<^r0TH&a(tX<A=*Z-6$@E,FBH!`/(&+]Q7TDOhT,QeXE.'<'g7I;>P,BMB)Q"e
%b_<1R;MT'n7<@:<'UZ2M48"t#Ju@]>[OaUM#kbo=C+FXFbuXTKYl_M1=%&8W&L"M;mm^3<\/h0l?c[O_A>0[I3-&^7M9N7ef_)s:
%8KZ40b8Jh_;^=&em0%"K(!gYI+1Ft`(PYt$=%kf-$lLu*M$.Zf;jcs6o7.Q+2ZeW&/<+nV8VXjR.)!uN4O(bfYa/!"TmpqLQsMT[
%1<c9Vl00ZY'aB@K#f3<K`>PX%C8e''67jF"`.<U,KsGdb7/@M#CO"GdH39#[3NCRt"q0tVL\)rZD9PDs6Wma5H0H/Vp4Y:Pn%3oR
%n5j._"'m8>hT1#@8VZ4n(("r5="Ysh5,;$M82058i:ZL].I-50XP2FJ(RXN2?7N!ceE)):>;9#%X@2V2(U`_HW_#*B0E[E7S-Q&I
%m\R'S12pBYRf4;=;lOs\jjG`)f'=lL3>r"GhT!:_mM4h*jV::FhLd1'.=?]cEjIFIh:`Y:W&!CEW4o(UmU?nED2IAImrlI)Z0)%7
%+4&.&T,SQn'SX'._c:G43K^VinCoQf=&mDQh8(g?brXe317GqA8I@c'!DPs=Ss6].%+TDA)h818,nm_Rm!tsZQ6d:)RtdAa+VL7@
%YUm"ORKk-Jlgn%J$L!)k)*:%.:]69ofX[\]i[9WKD-9Jmfp='h-IuL=3Gr<?+ESZhB1o+2?r5Mo1m=U.m/8X11=Aj!HPuKQ*L8RN
%CSV#jFj.SM7R/Fi@Pr2ZQr@3?"<$cE:1^sM#0cF*94b6<gu'GjX>cOUa=2r8M_ohRir9`D7CG:j0$\_C@rdD!1`7g1`(J;u2b3+<
%-+JmPC!;JeWZ3<JWMniYQrU2?F,MIIY9N-D[D5m.Jm3-PAO9dfV,mZZGZMo]a&#^2;BGS;cS-h]oDA[+_<RKSiEHPQo78r&8gWFL
%;%+)q]]+.)[-1,PY:;krQ`3JQHW2+X];+.m19IE[QfoMqBCQ,<CRU>-P:,r!`g`(-X5@(fb?^Cu]L]s#A?!RSA)`IfRTK\1>*7%K
%+YQjf8%%aU)^t3(_cg$hD"Yd$1P:uI8VQ`8W+u1Z>1&-_)uBZL`SA4F1g@HkcYnZ]<`#+s&HSc4%;n'tFO=QE^R*fcm$gYn1=+CB
%?_[rk/Elkt't@H.TG(i:X"deihCX[s;&5tB]$7D8g<(79o6rp[Zu@a?PJ'U<(UmIO4"ph>kFlZu43[$`%%!IjPaa2+nk=[qF3UKm
%[1T+hb`og0n+%F.qM>Qj>BVd*hND^5-OQ-5_kb<j>/)MJ&BXSI5.'BDf@7F(J,\l:>%KA<.tteWmtY)G$HuH5&GK5Ak>_)A@T6aU
%"ViQ13CPiKGpro60n8bQQe"R!72Cil+$r8"!Bq3kXo,?NFt]13gBq$jd\-S_!^Uh?Ef6:AA_6j7jd_Jfe':?g*ZB,=BLjNs6[=n4
%B&*-nfb/Qi:E9CAH#M:afs4pshB+`WTl+u$i$N&`a/*(ocpgaa:#!0lN&b\raYkWj*(^qFpH?PQhT/^)B&l.#DooRE&u$(%F(Jt-
%M"bu'@i/mAU[(\+$.sD8pH.@bO'1HQP+kn+b]ES1GIW$C#+AmFFBA5=2q5N#@"/j0oLd#VcVcg`:,d&ZRReSV0Bb]o/Ip;WUa@(R
%-raXr!O$qWA0;l60+8!KQ<Gk<^X5rK^q?#l>K++.lal)#X*!_&U.O]!M&EG7Xg3:B%GP;j1)tB5Y*f@bWn',e<UIpq_7(Q%Z6'tV
%TBc?2*?-EM*qfjNEkl"#&C;?$U$.dh1WC0g'^d9hVQO"dpqeut^u!OO0%6e3(GPSMOZ5`,?2Z6e4mqt*p=kp89B_\&au:(hG7#2)
%I2J;J3pfq%?44(@NGc1,C("kVE#F5=2nc$D:E56!k\9m\)>,K-H\9\a1qnq)c&;$P;:9oEC><:=&rPrrM2I1gROp(mju/MIXP3Yn
%-q)9rgSeu;R1QH>g5$+*U-q\&M//a9;Su['6-,B15W2<k)gAPPH"LAkn[S*s`u\CsH@[4O4c6s+P>'!\;.guA&i&24)rSI.3)<Vp
%V5mij*!$F#P8$_kSfc8lW^6SPd;-?:#03.,i]J(&:`Z:)FM3UZbV/=3-%YTD\+Ujt'1YA/bpY]'$mpelGXfKJI#7)(XnH>i56)9Z
%!M-?RT8MW$3;AC1%]:pJiO_Ddc;OB3dgiSH1JGuem>#`l`YrsOEL74-Dt`"tC,YhW'NZOrCs4T4ddF)>'\PCuE"2Bi\A`;2Es1[2
%EFl7A5m\1GiPdn(2C!)\gW3]8GpuJBqgc$C<ZUr!CB8H[)bU;!JqLWRB/Yn0r9i--ct3'5=!1lrq`lp9rId&4$!LL7I90UnbR=C8
%[l-jX7b/7<0UP`==`H=,OGr)ZS_8\]X=!Q/W^4a(f0+XJGn2P60"?MWPKjk?c51'/J1@3?_-;[5IK])Pa&3Xc1W"G'-YkT'_AD=>
%ARc>n\BuegRgA-mCs'%FM\@VTCJcbM=%isJHJp>>)=:Q,rOKLkJ6oNdFiD[<<eMJNp's4p2He";0524I12%88?7rQBX!^c`\Ys%+
%YDh+-NIsCf8Q8Meib0PV+C.<[DTjT0%]CZVJ8@nWoPXl1Uh6B%I%Zen#\a&jHMk0O0ZE6WL2WF&#r>Y%84"Z&%e5G6g52k_BpP$k
%p.lFad'HLLr<M;,SHbAe#b6;YCF(r0G<40=$KWXj-+ab&AlT>/C1;U[2VlGF:kS^(^QU&BV"(>p/Es43(m8oAUgV,2[K>rH[6H_f
%TZc%?EI9Mj(i#o#;`NH,;oPF;S`:@<Z*V.RDU/6\K%s?S8Z8aA<j*@bW[6#OOM5d61df7$6U7cZ;3HEbM3b3]5*Z[RQ=(eRY7(*7
%bcon(5@%<N1O1US]0LCL%h""$f]D-R.:VRI;2Nc.cFF+XDrU?/+ROti,7bbU)'sl[9hRH2PA#5O8jbe,9p`3"U)g0s3,770<eESc
%Ju6tW\>*es#*_Nk$UsN3?%A0EVj\%Ce0Fk/N7=[t9G*p++>o>*\>Zi!H_J?)8U@1.;tk;HR!"%p=[!$5Z[57i]>0)"BnmNL/YN*!
%7&=<.A8oc&Y0ft)c:K]:5^O3dacA8meXD&i*lQL!la>C(>sLn4PqgIB$E0;Ah6%*]ji6HR7p*'d?^mRt'e]KnDdEk=Bb1[Z8_KF)
%+q6gsp3;NUYBe,/"2S;`(8jrm[$kerd:V\e\eB]->3[]HR_)D-.97Hf$i6DR.[<;!ca-U54t_G<."J:DBM5D0lj4ZR's6,Rel`&L
%&qG/6Cu5;U&XTjV)+MP[P;k(m9u5>LfdV&A8lQ.?],9kFe>GbhJ3c2q*uPe\0=?_MP3].PBgW!`?HI&*/Dh6";$BRC7)-nIJ@KD!
%#W53+().OiVoc*aOr@#G;X*/k&M#Hig"$YIoeYf!GIZbB+ren1>;86$X&(Cp%XJo0&Qtg,!.qs!!c$$h6K3?^78(&UTp2pDV1M1E
%/+ckS4*VBd?%1?6+/>`QI6?+aBD`&$5(N%`!2rXR#e^q>n,tE&Yj3N]_DS8&a^??jZGrQ97>3S=KWh0eI[+c/0.(3^$9]Y-.Of>,
%<(C$_M0pB7G:fZ=?I-"m/d\;ZRR-1lU:'u('g**IGh5875SS!h:t;2#87F6dEFnc:0>(o$N@.e>/eeCs\dI_N^5QkLQ^4m:?J%TD
%_:hH9S!S1!R`_1uGA::XQY5GX?F?O?'mNFmBrUG?MWTjG8F$R:Wl^d[`*oT&<0qN?K14^-hKiCa,015R013Dl%o04j!>pM>X+'NK
%7,#=a@u[O17YT9#8.NI&04epc@0QNLm`fU]e3<;+CL/SA\V>0TD"F8LE5p(.2prQYM<]<hINBf^C1G]I5lpEhpI)EN;dGon"G:jR
%O8"+mRWe6qKF_V.0XYXcCJsc9>TeUch\"N!\>VGgKBU([c6I.^4X!_=27BieQTu=q7+FDp%]<l<RnqBrJ4MJ$c;QPN^#I>4)9.*U
%i6_t\c-EP[5'I=SV,&MqK2%H>^Ka&D,:96("sjCX9\M*g/$5q;a=\=B.T$E$X:4L3UbXV=&UCSH!US!%biElVa3ra0-PF<?1JPrY
%:b.d)0k7dfd-os?q+auEm[FuB!:`+YKeZ23/0u#dJlY#L:Ojah\U5l)mDYi5Q]uIr9cM!tJu-9ncq:)k%#;$"%S19S@r(o]Tib>6
%,H</OPaELDbW@Fh"8[JVWVV<@=Gld3"A/;9_g$3C/O$4ffA\=Hk'C-Obq2AkJmC\RW:ap"^$lk$MG5DD)-Md#3Y\F`SaUcE:[(Tj
%qM"\MPC10A+u>eNqFQB7M!u;]9JJb6RDsSZ+:SmJ)9NqaTu0u<,M[.!bQSZ5(O"_:#1b/\SmN')?9CVX6I]%U2%Y4#"<a,dqb.B4
%!e3U#UoBKu%iNTmKjGCG1+hJG<=oelMj:]$QpQCPN:bFZ6T,eVV/.*51KYKC`)q#@<EU`AQrF=:_l!fcP7F"R%PMf4<mhI<!F;+4
%J.frqZsEA#U`/SIHVp6\7-<9<El*B14S7m^<]P_$PXi3]QQBuEnoVK,Mm>b/R#'EQ=F)\TgX'iO4HOl_.oKBXB6mqBZ]:)MPXg,_
%HJl\;QqinuBqTFT!a'u+1>\JO8'9E\A`R3^NHa/@aa^]pS/R%'Xd[<G6ck-mE]"P\&=Y(nCeWF&Ya&b\NaAkjg<W85$EF=B_sP<X
%c"I[Z7AtG&h,sM^es>:[p+^@K?j^$mpANk9igF=W^0%sI<+AE*GF/TPfUej-/X-dF(*cc,RA2MCLpt.dNKI8\g0gJ*i2YQS3>@3l
%ok\JDP_8@<$#U'5N1+s1mbL$/N?BkX.WT=.e5sIjZXK@ePnsW7;IDG4KVg;%?f,EL#uoTL:'ola<guTeRW0eUf[egdl6DWkT;skT
%@osaohr,udOaCm7HbTD??V]`uV:VB7#I)=(<[^@](g>uOf5ujm@IOt\N^.V.#i=U.BtD8PQ0r"VdU]W::+I<$Sk3;DWnrIaHfo\H
%(kKLc4JVXCg,)<,Ef?.D^5$'L:rh"OGc#KcehH!:9K1Nb#\2MM]N'X7#g"e2D_4XOPDSJO(oj,K3bFu-Y>H4Ls.)HE6PVrOW7"h>
%1&YH_D]b5[XiqKAUGA[&V,>pLpFAMoqSI7Z$n*MWT.<G7(l$aMT8"G).7!d9qTC\u91(;^-hD_aQjINaF\3Z63%X\jl%UW0XB\Z1
%Mfb/Np05@JE<"ruVAITCrh9s>$:J[_T3E01UZOFC9DWt^>+itHKgA0(:+QCB#bZo9o68l)6Am8_!o7eLI3eii-_O*P^?fPh4iZU2
%F9<9<^$:"TJ)ciaFUdjqE'7=_;h$]F/X1R:AhLJ&F/;iHRCt2,?9go06C8Da$Q$bZk2mS6MJ@IF$Y2,S14sa:a_H$2XYB^DW03BH
%1HmUEVU_c#_oSAB7J2]l4?kE#BJS-Yp!n5frdnnRX$rn9Y[FAO7aeS5iDiUC!M4f/)"-Z+52I5^X3R()\JMZR=*6A4Bh!eI2lug:
%CK)t!pbah((#9l=[H9qoCjjVO$E0f>>Ls.`Pf8$^G$q.U`LSI0CK?N0<Po#7QL>'1_"'Y5[Yrh#o&Vq7):bS[0(lPsICDh^hMaqh
%,+#NoEJKWoNZ^WAbKHt:.b_tWU2i-6??3l2:eCWUXVtOjQuJsll?l_Zq[;!f9A+tOqH)>mNQ[N*X<u55$1*</J_K3X>.R0W!L4G'
%%n<J^`<7uUqS\r'!B)c>&=NLhdOP3<kpoIjQsin`I4:SDU6IQa/@&QC)A'*`PaWsGT$M4bT.)Vf71;!!j:b#mSPq,*[-K;YHa6c0
%c(sEdM,*`^J39cueR+@b?*ChWG>Kh%^I\UiQE]nZ6,APRd*,`<Pah6X"5+`#V'R7hkX]^@"Jo>A99!'m/Z"Q"`G(c28QIBI61_!P
%DU9,3>]0Km!@qgD,'#:_#=?On;_(eqr9Y?N-D)^KGfn=(,;l'c:A)dId]sLd\U4BQ>qG+*_l3,t5a=D%f$3[Nn8HB$ioW,#g+@q9
%b_pKr93Cr-1U8ek&=-R>/)[#;U6H?/d8-9okU<LWq/u:6=jZHaZ?KkjmiAc;`=rrLaL&=o8'0VL/*N;]E1,mH&!?54E[:\d=[.dk
%I3a1S.^X\.QC>11`>'tt,[Z7U6qMXjG@jCoT`*!21lD@OkBONU,Xpj(G,P_W.s.4;@S)j/W5FGn\;=%8de'I*\,K3E']^OKBFEV@
%Y[Bc5d@-s8f"'D-<Caa+oO@,))8LSK>F;Wu8(C/K'isWa;*D^_4hl<tXfOcfKA4:hXZ_!feFQ(LYHcSW#i*p?nl1Q/WV;Nej<?jI
%ed;\B!Y/W)Ra8V2<h[28ddq9*if0s20s@E&7_je4Yfd]Afjk`MB9J3uN,\q.R<d-l.ceoA_lnPC;iLb2^\R88rq.A\J6Q7Tm>m+C
%XUgQ(J#`P?n,Daa^\M+52ecALk-/dAV-';P%o]ATlX]CmH!AE727Zc<E_;G$h#Xk%YEN;7s89M/Y5drthZ*F*pY+N\VtS=6q;qYR
%pZ]kNr9aG)s6oiCW+3"?*(3iFJsE&;Q*VJ"PY'/HW3OsfZGaem,^l`P8;V`FC)lE2`ZTQYNc2I8V+D6TVmbH!Bp[,KWX9C-N:Hfl
%mK4t^(2Lc?+[e`?.HD7rmRjqN7"LOYoP8jK$NX9b)$d@fJl_*q#+tVbkC)11])O;[np^XCJc&#O"l^rn4#=Km8fb>JDHhr<->)P.
%nk'Kk>QV%.F7@(Uf!\kQ<$$^b.IZG!2;l;L;85si3<b6WmdkX'MMa-)8TO[,mFAGA,[lBg@Cq`4HReXL"eoh]IY1&>]7b\QE@e]@
%PlKb8`W"lc`R+PK\)nk-o)<g4!@BjafiFeE_bgq:>*<7N!`cWar=9hMEVV?j2aR4\[Tg)A@)3()1@<6td0F^V"'oa=8@8Jc3n#Db
%pVH;u2<S!-m+Lk>`sIIFJ5R)uo3CW+LtIoL:S_N2"]>QGP3NLARR()2k*d3Kl4Oj$&T8[.&kkb=>]eFD1HUP^kU`g<MV%n4.eu`O
%P;MG>:8ELGfcL+L<S_M+ZNo:KdVLFR9ejX>^hCthO_Xt*)qb=6mLmhGUh5gR-+=)'n%=T3PQpW/h-/I`4+"YJ-u9ofBL6$;fF+U+
%@`,s/^KNO"fuK7Z=`b<a99N(P8W<DhZ/\/-SY6m$@uA@3]O8>1F')1lYBInR<?X?B9E<1iY_SFj=_=$]n9tR7?)[\@`u<1dl%r0i
%6X*Q`V1aEY"Z1iG6-RHqN&tEWTI=?*P#P(?<Gmc&d`Pb]_pKgY.-q[B5?+)<a<`*sh>k'c^q3Q$)@Ga0pc&Pt$D`jE:r0YED6:EC
%"Gq6/,L\eUj'-76@)6PWV/Qr;0l;d:"]W+GotI=2'h]e2N#9BCk:4:\MbfZ4[8`h7ouX>#KnM=C%iK[n"uQ';@D0fAF.0n!YT"?X
%)nHH4:OP%lJ7Tg2ACo&L\4lKCGLu*%.jL7Sep#3B4?[thQ-Uf:mjH!K><@^3aKmKuQL-%JSpp,U&Bt+#:B3AH9V_u`Wb_J`<m=/\
%mI%p;S\pF'a>D'E_C"hLjW=6X4uVUEe;3e`FHT3d$r[Z6=mp=Ia?dG](>)?;\ZQD>'=%qm)[T1CSkHt0b86qgmP7o/Qki"UStu`L
%1`SQ2#ccN($Oj44C%5MP$"\drk^@O1W%O=KR7%#d0=G=^J/UkT/M<=Y0cgehW<ZTPRgUHTX.%f+D3SEo/j8o#UD3#L=[t?n:VB\C
%3i$LNR&6c!Pd='sT<#^!Q&Mk'iB.S<i(HTT^smP(J.'>AE`n6@CB:V=2UMOFMH!J&M2!A?MGE]sbS:ihr2JLG!a9Gh`A^QG%BB\t
%00r_Ic+fd^OV;gR07kc&\7]bsAq>kK:ghdWIBG3L1=NiqS4fR`:^UfL\/?P+QAQB8CDW=[<*,N[8^#TM$0h^$nT%?s\Qf0WL,q@6
%Q!;\&?d#;JL%FE4I+rLH`&t0X<*EO)/"il>"5;1?+iKT%AuL+c;_!-eTlU(D+Buu4QTEFQPrb+L#YW_`H:>[2;HPQ66+bWCKeeh1
%F.Z$X?Bsjk<%Tm$;-s`?$f(fm8la*X(Y5HL.&?)4iS9Iea!$=&,p>mQ&Yb4(+j)<%#s?S4#_e-;&PC^g$>"+4W9nYZEk0on.73!%
%&toHVWAN)RIM\^MPcjI"PS"Lbl!"mrPSt-kOU=EGK#N(+-kW+WY5kEl#Z(q5r0[O2iY,hoM,.<n-g(2O(S<OoO0O;l;b9BmL-_FJ
%9]<ktgH0p=f9h.H$PEFc)=TL'YDrZmT(Z4bMSSmm+hr_rF3+e6N@PRDQX$TN"I#mdJ?(T]MaW25YF./2NX,'/'k"?*9kfn5+E$,g
%-hlA4if]/o`4]QE*MH1[Q"IElH!;U`PP/@Z9`^p\CRD*+OI4C$)nuKmBSkFA3_m\,gSrLgl!V%cRlGoXC!s"_m)7#Vo2Nn.<!-jq
%(,V(cp)k1-%:bTW?lHQYU,7.0RGn24^Ne>kI]C*Y=j&A]=l7V^o9MK-;$@qiVC!\aZ[V8s2o;t7#cPVJqb.4;F&e!/W2]7>T#*@-
%<XIFL$:CpEoU7R%eH31J7)gO60aoS2fEiCN'X1:@94IXQl-9UgKNqafL<MrZ[koGE&3j!K&+a^D00;!^0SMF_JfuBD*Q=#^J#g<o
%\OO%fMb9Q:'$s!@$Ab(QUH*d,mAFM[3.QXV34b<[h`3ZpK,ZoL]7XU@]$GRjs*.$T2sG;Crlk&A-C#H'f3R#d7uZ_l!%PW(3G_Q7
%E4+Z208o0U5r0"\XY(Z0]"2=l;hIC,8W/u@9fi]W'$dS(e;k*O6g"iM+YCG*02Pi&CD2*t+$LttLa>:qMt[@BYeCr@U8P*I:dJWm
%Z/Jm$@eE2)-CD:aXbp+"U2.!q\U()t>]<lkp$60#OaH*G;O*9d3fTdMM?)PDl_dham.`g6kj.KgdJPkI&juE?:T"T2p"e(/Pk_sL
%nT964XF$/Gq7Dt-*)]FG%a'pl/k0nSIS-H*18jM]f#5[3f9")#Fd*RDO:c's0L_f?n%#_N,ou&Df*L+b`$;7:#]jAo+"pPB4!Y:-
%9Wihb`<cHen`,K:<8Y("26.gpT]45VGs'%.F$:Y#e#@VaX<4lm5G$UtCBbW].DVUZfF?CQ't^t<T.T:d>LH/h1G*cqgu\M&XAnkb
%Ia"51qKV,G.84^JYH59&eiY-jT(Q%1>XNI&XVF!O`>lAXn"GuY(2pj_Tn^ib:[s")mZAMeV1U"Ba,?C)<`q[u$EOY)E'k^Fbm16%
%D\o[8gei&HTA>m^TC3]N>;2\Y:>VT5a7H8M9,0*aC6"J-8CD](U==McO.QnWk2D0r?TX\%%dWB/%_g9*>0fs^7pY2(<#K>DLasH8
%OTR87K'd'/^3T7ZQ&jc#GUA<nUE6+dPdV@16/A6.cs2&@+T`HFL^$fY.BgU7cc`/WqZ%H#-u=bJr2+3kD_Ce5#!D:kB63X-^M-S@
%/L@g%JXba69d+NXeoNr;J+h'#\q^@&[jW:[.KtTR_QiTLM"%!Ei&P%)`0H,Ao1^S2bh*G?rAjn-ed2i*KQG]&=e7Se1!\=06WrJH
%4F'k:H'VqM7@R4ukEe]i\cg(\m$dIR+'*SCpeP8Ii*N,rD!hJ,_)&+-"Dg;$%5+i!E8K^7>,!!1Nq?gAGa=D20O8nF_2t?e%XqE1
%qlU,:`I;/'DWjet"7e3Y!>:%+64++\)7F$=prj[QalU'.pFPMKb'rOMi1Z6W-o[a@P)&ViTu_LM_c[0$-&VmL\dh"-ZTWXhMEObY
%G8\'UAPaCHq`Q_0`d.L'i9sY(r]rUmpmf?OF.i"_gNd<t&')0>btn?/ksLN7p?@^3?Mh'O%^Z/VL`['(.D1$tTnc23'`:0oKMre/
%a>T>s`[u.LiU6/_aI=129hlT*V[?+sVg'poM$$?o_7kE=GJ<5F:Odi%O&(1OYog`0NTf\r;a']S6S<AY7m:^SkMQ5VIY;OMrr';O
%bfQA`qEZNDI>_QCd>5?I>Qn`6MF'u6X;[h?!_:dg3Dp^%7\N\3HYQC*RC9c%XLl4ElB/GXeP%++L%n[_$cW+FX1gE,6.njT(eR,\
%+E!P=V3X+m(X*=E5'7;r(Tf##$SQnMI?Xo0[?aPg<3Q&5lPLp$'M"Cd[-fT$KbL/qD$Y72X$K@'nV*f*idkrN.FhUe/N"+=@Or.5
%OL#buit<$/;%$^MaWZ,^;NtF41;+QG0C^;TDFT$(i1jko`J#`K-gn5gAO*qL.`l/!2N3S!N)surV+SHZ[:_;PMgU;4bZrD'V2<Io
%WsEQS6;'oAaBFCj@)jG;Q>,Jr<Cm+A[S3t/$`+ag?LONln_>EUTg3A\ga['ho0Ho["q(rO!\4:-NFo=1l'@_$=q<!T6F_bNVT,H1
%$Z6E7#0Wq-4dJ9/eJ+UdV[1qTUo0SL<*]]AR>@tB9kcWKj:qUW\1e/LlZQTkiIt_nTpfKNk!Ij`P4XX2U""rSBdn.NQl>ME09QYs
%CQNkTY'NQ0/m(:Dq'U5F:kd'FGiaXg'uY#Eo$AdU8*.I_b9-p9[pAnE#?d$@^<td9J<b+.cp'K/"0Xc-m\eedMPN(s[pW'Uj_*gD
%g`AppCkJ#MB5?_4=Aqo^.N25fined6;5dNdBZ3E/6sc`i])NG6%0939bEp3]FnLsAK(A*B8^=9m)BX.en$2cd97fehU;q6H7Jukj
%LtCr:?MbpE'++qs\;4!0Xj&2@?c3j!d3?`ELt@NR#Z9aq2_fXNE>-O0M/2!:ATGMBO.2Nga%b(>i?j.9jsDSXcqU#W8CBo%d#X)>
%eQ-"-'bd^-&*r%gk/NLY$1id+W<nWfe'ip;`)=hgK'3Vd2c0S;.Kn4k>ep]3@<PSqjkA<g,[$(;;$o%7fbIt'JtSP_N`jPa\D7Ku
%A@PSC(J:I.(\sK99U/sImb3;Ha?63NG@<u]E=_)[AS-fk'STdmAU5Qk#ieMi8'Kn3bSU^4*\R*J7!E@-j%b4VF((M[R6,^"pT)ef
%$Y<(RK\NqN<?L3g7$D_MM%Ci9b++QkWf;pHY0RW6"B!FlW4Eki(4o`aI1t/aE&]BQJ6$ZsF*G>pn5c;q_8;5\\SBS#aZ5F3`%uFg
%.aPp7=12lU@$bnd<0Q:<7BK+R[2EH4YeMr09%@NC4p@LYicUZI!>h/iL6?(MYWQ;0[?MVas&s_oq8$g"<KSh9;=!4#Fg!Z<TKR5^
%pGIfnE_SmsaAJ23d/SA*-%<dA#kY&H>ap.Uf1@r%n'b^mZSKt]e7r&Id;67jj.f[e\ga4IT>PE)RcmWJ[9ti2`G/Y;]b$ZU.cIS,
%nY^[#,t?I3"Y%QXkL.?C4IQKMMn#T!@Q$"p(t?/Q:b$:W*eXBu@2+S^X48hL/@E.*F.1*BlO,U1LbH3K%r>*1K1J1LC<gpp=Dknc
%g_EK#ITe=8X+<?4<_Gg=Es;qDeMkk'eb=9bcRc8n@2gK9PcH.YP\TG@`ncu0a;ci1mLDbJH3B74-L9oF+@V[1V-tKF_EFLZYNWM:
%G(A%^fW)iD^=dd'Hk*>\#1_WtTP1DQ';.pk84,*_?$ut%!aR8Ti/]RF-ijuQ%V]Y='#W10`TNP%Kh\$49>_N<K`^cD1b1FfZ1;J#
%Fq<b6s&Ybj7#[iP.HTFp`[""^6lr<%7R9@nfo5/neS1?tF8aGu;@CVuRWN1L"2L(@;qNa;YqJQdW,f?]<pa(V#,CWh:TO'%4_CsS
%3oN`5ltA@-Ms0pp)!+A>_/C/WdH]h2S-D";8;Kc#R>9jB^nV'$Kh_k?_/j^K'KZ3>!?qYo22OO^ZYtE9)+sS"6p*&C^:&r_JkVb%
%^G$OWP-Z.eOOTt/)M\op7!\8<Qj]3KI[`'eSimnG*8CYLJt84h7BH^O>>MmVW&&[:noTp,@4"Y<&38b'8a\NCN#<p2rWhC?=q5+6
%dJ0,XCjjTp9ASG.5MbG5c@Ht9T$F9!pN`-u8,g'F+,ut$N6iekWm5'%_='-)SE3opbj^b^W%Z0=AY/"m$'7ut,XCJF$.*W?$qaIH
%T=I.^5:u[*QsQg-[KRi<Y`n9sp41ul4fC33?;KiCQmL5jRXGqq^l3_67@e8(?KS(or*6S`?N[je;/[*+5j:Sl7Y42&'ik^*ZR[B1
%;SCZ)N?o)@jUc8FDck>Z'gK\C^#\ngRt'l_Z9-!Sa#NT#:S+<+@sE<U@o(M?3@mA4cd+$:EMgGX?]mdA@^0d*0:I[r5($54@sgJ=
%4SR2^*mqj!7afplYtc$YgFRDRSq,"G-rT3?5,HKeqjET>IR9A?)Q50D-X\Q6_eJX_89OM2T-DL7Ai"/p,#Nl-@j4j!NNfL@0kHcd
%=es:7e`40Wjihq:"o,Ue6M#2S^;2L;9c6airEr3G$D:@.Y[*.9VTj[7`8li8?iA1lJ)#drSb]q?hcZ=t[cG">]jP<\WX9j>:-Wil
%%pN]5O=3M[VgaimO4@WnYlLZ0gioHdp*`mVi!P0qd@sN)=i-G]*0gl4/sV=I&#G.M(LOS-dW_g&QDdfBpSA4]lR(0\Q&5HJnj^EB
%:`WC"5g!$S$o-?<C9lA.!5K$dnua1;E&fZm>$3:$#?%nHc%9Y"6iN9!c/m@ZQk!-;7DH!Dcp]-'$]n`R.TM$:FVpTr>U]e$/!K\-
%ZO\gXMb;/-o;q6VX(0U0/>&@#Q_K<dOQ`X0&OW8R@\?i%oG&d%aVC%Sd`0J#)oDUG:dseK@X@f98"^0_pYA)+!hI30,pU4b0=X^&
%F*/=(F@*68U21*%H"\eXB#LXsZn(DjE98u-!5_\F8Z3*.(&Hc9'u3PjWGnOM0"e-sBmMaJNom!nCA4;Z=IQ7N.9fF&/@?ul@_u5n
%]_b2<ENg\nP7rAaT'5_%`s+7r8jPmKZ>pHME'?l[5FBd;:\hH:XA;(V\M*.E4)FQJEL`ZUoD'F;_>1H#:Y"FfS^6NY0V=C'kI\Q_
%;a5i4CdHiqY545N@("H[q5A75aHD=G;^3>P$<PW!LA#)%3a)iOZ>#4<ku[LG'dX5kh83b=Qg*(Tc"_S0VHg9Q@0)("Y/Hm%5%!(S
%=]`#f;R8t(R-,rJBVirimI3&sllkFQ"if^2q@IB`!qO["]5Q83%451/VQWM[;>LdqrV7^gUq+'Z\d8b#;5CbEC<6jp%@)k_;6\>8
%(,TSgVbj+ke4ml^FKLqa_?r"mfrL7rW^.&^$H#^,YL/Q&Zs#lmAc_sD`IbNHRB3d'':Lg)AocEX%SVJ#llt8h:7S-.HRDL7mJnZA
%^lCGtbUFkG<!:U@K*"eNV95^C[tG2*B^a5BmiNi4S?A`M\'%f5(iWn!f=8EmfX+LUp=JIZb&%eKkl.U8j?.1m(6c=dMbeWg'#YhK
%%c*^-4W'ILqG)>(`NJiT6/YEhR%S:L1pSU*!KRKWop6m<J)'HA!7J@GR>J46W_<k7>6h8O9e0Ie]l\8G6qu+(l3u6CNWE;2iY?WB
%]aE@ReVM!`dLZTKVl"$cOICWe]'P8?$1q*,IfZ!S8KZ-(A+`rhO,9l)A/EY.aO.c$nTj%\$@TlC#bFdVjU@&a<a9_/1\!RfcdVPL
%K864J51#oD`Q'R%P:W@U=h%c?p@J-#_S4.?I;41[IS'WVG_TIaW9baP'=$hO]'p,&-m/rJ)p</h9Yo)IC+J":*^knZe;X+Ng?kjT
%h'im>O7(M.BRmM07@A5K"-P$KNecV>F<7@GF98)ToPp$)k<70=6hG]aq-.mu7[k*k*M<[Lg%dcantV1mGXlZ/_2TM+m2N6V#]2d2
%^rJ_9'Mgr'mc1/DC`Au>j/lHKf`-Sjq!:b!Cd(:VUaj&W"$L3rJRia"*LdE:G%^7Xm]RBBnq*h+@^VnRPCQ=UD*^(?4*lciIV!B\
%d007\MhbodTquep]f_c@LK;]iT$O)joOoD=HVLE8e=h$XVT8@GL)jH0D]10^:<]D=F"$sY3s<kn_R\WEkY)um(["9.Td+UAS#H=F
%p]$r'E[XmObLu'ipSgE,.&3F#m>&RVWI02uo,ekPLUP$u]l7XP*1@U\\f/oCo!nc!@smakI3o#NFQ&`k4S+V$P&ei[%U%+$2>V-E
%[LIR#XFj[QD#_5hHRg4)6&c8M5__l"Q6e.?`,gHaaU\Xa4EhLcTST7K3i*C7M2tiS;C?%0]D<59mca?VarUZA6XY9ITKe4bn&"VU
%MDFZbF0$[AIDr^u;9EOU9&6<MKBRX"U\:McdAbq%Los7&X-2]J6O2S00Qd4HA*B45FHb/,%iDm`.s_EIPlT4>(Pn)e-59b]@jjCA
%VQr5QMlJC\U0BjCU0@YmUIbZG/tQ1Df)6#5D?boW3kGe5U%Nf<FhL)gM=5J04<)`t&^Ip(^laX_Ifg_djg2N/^Z)-j!Sh[FJ/kg<
%:JAk:G]H9P4?FdCrlLX!bFp/%khCKfICo7QW0&//l0!s$Teud#i'3*I]2!T!$9h(;cYCJ1lLCs8SD0Zk53]&9H>^>9qQl58m]d4H
%mc>NOrh#kbmTDd%)[D>B)%:ONN?#/KB+W2dX`D4aS78h\cFR\J&((iQh9M`!n`XS5A3iHTR;_&Y*rbB][>s\BO9_;]Kl`OE:sM*9
%]q.*KUEb/4bC`alH&23uX5[h%BqXQ3QS_SSGVh'aZ-H#%1IN:Y%5LOHH=Lb'O]b4aX<?R6)J3BY1AmfXFWO!ZU48a)0/05tE9b4i
%[uXk3['7As8U1#@pXJb?9>PgKK#(d&G5'GNAc?M3)lg'8JOFZR+(QZKZ,u)>!16pdGU4Ce)fs@WO:-6;^N:dm"klYZWUsk6W1a#F
%;Q\ZHSu4rL&t?8]OY+C!,Qn.e?eMU686<$XUI&kraCY$]]i:f<(9\s.7LU/Hr=MuhG667lkln>rmdJh*J^!->2-m=R7LN\E$3rT^
%4^.p/+-)b+mNdbq>+M>8XN3E?O$u;!We"-PXqmY3i:UhNcs+R:OEdCp596V,Z[Of`JhBT@`<T)[-Ptu!3&ELnAc=tT&jd"Ke.e[A
%1OhnkUb"pE7s4%$W5lsm-S'%6F".j"PR&/'ZSTQ[]\nDL%2.2X$$qIb&?8ugRTHH<_[o!+`"iDHU&r%c;7`QmJC>-PEA"-[X2-)L
%kT3[e`JTObL@+'g.=SgNB!bXeD$Q$B0mk`VhL^'<;TNmKh"Q#TZRF4C9U_=#]pN].!7Jt/"c[&Qn&`5$rp/#OI/QQ)ANp_&[scnu
%Q"+pgRDRmd>Lm:?,QI+=?U!h?U7;`U4ZOVXqYmj7r#H7$V8#&YO+(M\mQ]QVq^r`>=HbB(Q/f/H9\FN=\8Kk[&#1ur1;$*Q@FC_^
%DeGkdpg,fX,oNGL'Fk9J:W1FX18A:L=InoLA@JLa9&gl53<m:1'-mN`Tj*h9nhfB+;Va=/XR*q=H8[;3PWmLee53EW[^aqfK]qia
%NCm8\U#_SLncc3NmHCA&Tg4!fA6g*"6[<LK/4WR4_9"AL&=RdYN3<n(k$_\3L+3-k">QW;U+"6edjfEP)O8Q5<fduF%Z"_<W1tMW
%EUE>M`t?\B-3C_5e1"dC)/B!V)ik/F`:X_L9![:gg^)m"[.T_ZE>Ya=4RiU;dK51)JV_sqD:,sQ$-XNdTS'Y7UWCpC[QjYA?eaF)
%HP]<?+V[V0/8-C[ej4g&fn-Il:aDur!^]O?D207=,8\JipqE+m?>X5R_<O;:?pG61QD1'\&/-7*QBuMCfrWj#i<B!NU2oA?.;k^*
%U.T*Z)qOT*LD7Oso+!4[8Vg>=O#<bO&EV(IZk\cbI1ooNbZi:;Mnka-X_JQl/&@?j1R.6Kch/jBg8O('-=^:h9<@31rdZl'$FJ..
%c=At"P+oh$Hc0&U!D7+7>3<akm0WgJVuT9]GZgM*<![&&%qP$$pc`@j[tm35#i<Wbl_h->)]CT)Z8qPkM/^G:$?l[<8aS-=S\.J2
%P#m+OP5,hc?9=NB(>qn@WNp,sgo^E[.^Prk,##+nFH2PK7&Y:%%g<(':_Ug>/tBM&Todd%+1SCHhP"J!jHF'G_F"oU@fZB>e\5ft
%B!$ThZY<(mWmk?]8QN6Qd[!8kWjUeDL1HIk;(A@%%7%dITCmr#DgZf8"KCGbI5(=c+VOeMT"Zh,S]./U>(WdLNYBk6_qj4KjA3;%
%a7V6-&07@c*i6e.@^='K3rgD)@QIM7;h7mm:0db!0^E&/WnS8?Q#N+h(i9($cfo\TTS1!oj*G[GjXkrGC3b:8^rj`3YI2k==-W,r
%A+Eal>6NobKdsdA'S59Lq9W^KLCGSC[*s`<0j^;N<$u+G_d4ecXFUDNCW1YnOHfR?`R+/(C)RllTUc_8n:bHMMdg$'f.Jcpnoh$b
%8>Rijltb:Bc:3&^_.'iE_rb[Nr<kC(^i?YA&_s=QGHb/,/Z0L=CP<A5T:J2-CZ@a<,?7PH;H9re=@%7`W,g%tF'E&WMK`FFjPUe$
%YggkHp[<mSKA_D#c&b/g@on)])O1H@7F'C8Br(7%KF#rE$=sI^l1N#,Z)0">lHt6\eIpYOMD\Qc0F2@8d]a)9:I!>0`8f6\j<_41
%>m9XugbbP%YdKWuItcrH\MLF@<!j]&@W;Za5om0G$QH\rEU>p<Dp?QLTT$tkoG&c.KrB)PhjEJgnNIid2u_an3_h<iNAimYY*4Kb
%isSY#oAj5=Nqh\@O08FU'Q=Br:4^C5#_)_0_a+eHKh3!]VBfhdBWfIqK"_8.p's&E1>"p+<uGi3e\fVlGiZ8LCsh5Tom!@rSG\7`
%Lu`b==@mrZL`\>rnChZU^E<rMroV]ojhL)mLdab5ULI6XZE+@\MGS!8/gp\S1j5!^iT"<$Qu*>n.'caYQrB]3nA[@-N9Ja=*\Hs!
%F<:qhd1JM=`PJN9+77ZeJH119*;-h!qGsApZHCrP;J_./^X[N41-?6k`^YGa,-k/,-);#0%0^9"eV$i.i0_XuM&r'-.BcY4Emp.C
%7&=4`ie2cD/7u.:hU=O^bpPmT['s\cI'VZ849*DEChGNRY`O&;PrX+;iGsJa5ph+YOmKG1fe,iQ42G_NC'?C6[Q#P"e0U:Xm=gKR
%_aMsJEYmh^\\gMOlEn'e'n[tU^l8RualD5"mE\klE)-r[l5*YLmH-i>Ta.auG6<aU>*,c%Kh#%f4UlWco*U0JgB,ol?(Yk=U-;#>
%KDO*qo!UZ's6XSX(AE@[ghs:kE*@AMSL6Q\h32o/HVtquqK_WR48/?61CTj1r`<7g;&hP0&`2"V%Y]a,q;PZCGZI4-Kp/u'(<)fp
%7natU!WhBUT9M?/cnl@"fsdb_]%4K%pSUe`Lf7=3WP]Qu+k<NLMa>F\GQflJ!\ro8ns4[2HmqL_[$>Ds6%`H?odbHZII:fse[hmh
%S*ndg\#Z0f6`9X<XtKIU^aFNBrMO<;:MV=n3BCW9XRuLf7?@/)W9sHS,GdJuIW)O1;aPb%4O5JA.@E=E]l3K%@k)oJ\Bh.bjDX4;
%o(22sO?=9#1]TYH2F#e>>4ImGQ^6GR_U3b4rEP]1kTP)*E9"<^>%gFh(T#$]5#K-J5o=*/'(q+XmQ6%gqRJd%%uiabN?2Mmf8,n,
%J&0J(M69=3"HpRO?2O==9p3V^h)cDfIjtENl/HVeMFS]\=Kd-Og-&Ge5?3Teoje5K`H"qWOor?.)B,B,#<G`Yp`@p59#=_Am\T84
%;qr3Q*5$-.&:U]h*/Yc7R`I4)GZ3fg'gs.O;qi0)GI_5;<Iq?UU,Q!:IPtJiDK62G=.m?UUF/#75Xi-CK)[]UUh5J3giKD)qu2Kk
%)kR/W[qMI`Nf4J<dkT-/`FF\%mJHBJ%Uk-:0,HfBNbi_-bCO7`L+g_t[_Ug^%h<ahOnFN]VpUL`ch%Lm,qr[%RJP(*'QYbWS;TIa
%.aXkiFG_]#0b!?r%h[D9cgLRt:OD\F)\3m:GV$o)r"-o@UA\SekYt;<Q(?c2W"-5:;p"?1*BP"a:A)'9L4B0`TUBGgAWhXD9Ql<L
%c=,SO@N6uCfa&VBe]Fi)Bc`iA9W*?hW?V<g,Wg]tk:#d5&0:qo2_jG<*'K"XmipOS0RO4r:Z:u=rUr/T=8;0L]>C3>kEkeTrn:PD
%1frd+G[W$e,rGR!Q"`-O%[oIq'!SUDiHMKNC5GcXW"@J0cu*,Bq(.LX+bX(nHNbtE]PaP[oO@;jBIR"=HQ9ne?WoWSFT$XVs,jnl
%k^`rmCb<Bk_rrgC6fDm-[s<a75!4bP1E4I0#LuZVANYPR\E82<#Um8jERH<k/lSkh#WaC>3XHJj#0-iSi2?[u+-[jt6!Z+hbPKKL
%*sgQi7mVaA\/hM$:3$ShZtf4C"GQo6^r;d00qpW^E7_;u$WZt&:%$@*8m\\]%Ln5j83!Mg;s?d!J5@#&'`qp-rMD(Y\9(@FjVMU2
%MXU+Ve@ec(5PKk_D?Lp%CLrd8>nY+6hJ!92jP#,&&K[2dQN-+*mt'a=1S0&hgG\Vb<s_+>f*[87Q.ZlI;@@[5N^W/pUfe@@2T=b8
%C6d*q''<)JR,Co_95BJof(Cb<e"(Vr%W$>kEo-#uISn4)!\4l.R/DGlHk"JM2lE4kK&C\0L=[Ru`b4/59?[EMOQbCs/;d^[\Qi%-
%kR.@F)n9JPR>fEl3,T&IN-1#W"U.ZV#`Q3CMO0bu2)nfEDkU(D.[D&gn#4X-E)3i=:sOpp[*m_B=`-2^Np>5G>l:$g`p'H89u#pt
%I>\S^DE\B$mMnEl$k%Z.\5iT2H`;#9Arc;K]ZTUHCHV1k4B0JgKj(%e=*"je=WNDk]OXJKX[oCnI4Hoheg>gR'c^Dd\#Ab6cf(H9
%DW@45X6@1lCsbDgr]B&>%4+;^!OXHhmj5p<"/i=.AAdKmNp82FeXup,G,SqR6$o8]`@r0DpFI%>TqnS>hDuH=`(n<U4eLBYms*]X
%8_j^a08SJf,LP8,2H3'eVY![J\jg&)1YFctlPsoF+r,@PgH\8IoE,3%G&%?H%$\dL%+6cQ%GjBHq\&g?4^u!Uj2#X"rjA'(Vj8[p
%HnkG\/+,lBF$j]7)fjfIdiP-R`o4HK*q,S>E'',h4<'uK3C^T\V+Ep$;`(!hT7,&%9:_U+ad.V1.:IA]C>0AP4I,P0FoOdD"Y`nQ
%M)Ss$&1`Y^X%S=Le_+hVT11:]@&CbArh=_j0//XU8])gBBd_VLF$";<s$*!#rGgP?qXq4>TA:ZF9FBq4#IoR.JK3nMhgsu=KR0fo
%1T'AH[1:dTN?LEOb_'>PF+0rY0P7O0"mn:>rA:'EiThP;l1`s(8(75jm[KtNXlqV(Aa8!4W<qM\0a]m/$`Br_&:XOl<9M^E(l!"6
%)@,U!`Xj.Af#b'8&*<WbT$I/D.ri']LHG4l3jRQ$PiSmZ,*4>5H=c/cRh&B<+auGj3U];/6hGJXZJG^pVqCANj1Pa(:QaZd_E8'u
%H<?q@Oq:"BYkg]XM3S3;V\&L_nf4gckrQPj\L/bIEb6]6pG7*C+_N:Q-GM`W9D8!"*''J%Kip^CPVJe2@/9RA1,@scfbUOgE@Mkg
%n0Jke"63!BWG:7`nnRZWne]+_>aeNlX(sYoMMH?#0hijhMUp8,?d01S81jCZbLul*!3=9>2-5kbs/pEC20tLq\B\8mT'<)<RV^41
%$BpbI7#P1HAD2])c`5XTgT9glW*j2a7Ht9:dBXU*mM??YI$D-uAIrpTTk7`Vd//cd59jf+a%J4Q)?@A#KOqIIda17R3b)nD\R6ad
%:lKC+W66UM'MUM:(s&^'\e-?T$k;mbGHjmGq<c]4hdRHoC71?.LmTOnO0#6'OVS*CVFgDSVTJr$M,49k!TA*&.4^KnJb5Fkkr$jH
%k#Z\/HjRTHRi;/;.)L#87!4d:r,[uoch):jer'^pifr9VGpN$:mX%0cEObD^-0C#;&5nSRJ^QoK::W"hD!b*DOc(Um\3h%MRX)0Y
%l2KoL?X+2f]/QGAO7"*dg%PUb!^UI!Ob6^urpaG^Y&m$g?nHFq*D/k&e@,*s&1-%fU4CsZpQ?5f,0@of`fq\0Og,.2Mtd>GAsjeE
%7[?:g=\EKXd&(&9JjjHDK0&$-O(S6PH?ZPQ/20I6pY,$%RPgALLaQ\97$'.C7p30-D=rMs")s,X/,<&AW8/#?6Hu2GY+r4E<HNl9
%DXX;H^_OY04.gPCk'[8>Z7f'4c+;5:bBHU5Ms=qU<PQrsP7%*;_^VQQ.H^V^c1NTe*P8khe6Jm95F3O`$L'!u8.g!1BNK=35AKGP
%JliT3Ap;p785sGCG*Q(JQ]t7=Yt%FT&$0V,KJ[OG@tm,a)^JbD*3!%XY%J.=R\S1+;?<+_8Y-g@o\>f-LlpDPT\gFCF0#,e\j%-q
%c/Q:Tn@4$%3=K]cBu8R5F:#E2_4YIOjH'*:"5[J#FT@Wkc4*D.Y=PZ""G&%faM^+7]#8g`h/-a+8;K'bleXcr$7Zq.YG[aAl>&;N
%?d*$&[K=%R!;"8c(X6/X</+DkQX209krr;He]YHnabi.@*ZYm8$].na`R4Z`"^5nWh.qm0ddH+R)"F[Gq]%Vh2/R(UX"_)")c(sB
%r)J'j"%]dt,$c`Y1Y)i\a^M<gX1CJHCP2T8g/8(5\)17aI!ZJB'5jj4iMat!=3^VB*/KCaR=VPN`SAifJp$F#eJ\&*.?mj.i\l$2
%9s\nM<P!Fa.WoG="=[$2;lbG,.@PIDb[D:r@ElnGqmd_0prUuLK7]Z_O+oY.>UOk,9Job>p7g3AnDt>+6<[9*EN9J)4TPGL,&f(7
%?OW&gGO>Bfcl?#s[6ZOLW..jN=1Hl/SC3g.,n*`Sk&EI48J:_M-c>pU4E!/E_F]?)a7RkPqJKe2QL]kA94Ud-S;Z\!c0:+OQh1'2
%E1Cf4='Z@Z.`4rmX%Up3eI0QrU_6IQgQt5pX1!g!)7*GFfFtg?.<1+>*_q]"F8O)b'l,FBDeNfYOQ]QhQSjq3(HaD%O@S8+(D4()
%]Eq<4aA@,=;Ea1.M9.#af%GIhTDTQ_jAcU?@j>U8kbe4Oh+^gX@Lh:[5s#c0703a#M>>S)A/om7Yr39=gsLu(C3.pR!@Na\I2ei=
%ntUJ2]Y)=.og+4uHMtr'/`@Sg!*ulGi,?#(/s,m4*E5VWhc+B\G;HjE9G"g>M4o.48?0eLQb6N.fLVdWLM'%3,]Y)1pNIEP93Q]1
%<Ip%oCeaPCfJb5>FSpi(^T<YH!0na^!d2I^?d[gXVGQXDZs/p"l%Vsal)?BBHs=r5c`c^\Qar:&^2q/hOFcP(lABt*?X=\N"_*O$
%EPGe!j0CVcCA7P[l&(Ru<=Z)=W\s(ETX/TEBgqNO(.f`!\0s?'Tfc;K5#/!7&_Y"6EA^mm?El?5>gZo=:tZhc([]cg;lFPg<NTG8
%P1A!/5B1TneiZt\3]&Y0--4=TO&98Q8S_J4frUF6>\1jG1hKM?4S9Zt_/$^U[oR`"TRjI&"gQ=VpKTj0[5*Vt*'K$Hed+(*pn$f5
%`>k_qLThVM&(L\9-'NtDg6J,]bg3SK6&P$bS^-p_HqPk\<SuN#mk*HR;8NC+EiNd7oh<b\RNBT+.H`dgLHZ4[qf1dq&D^Fk.C@j_
%3o#!j6Vce+BU4Y_lsT(<#4[]?I%&`P3IYVO:Ib?E%,Uc=PD_H3U,QEEjPZ&Yn8oYr-hh`"hctoR[5m'GG8INsEpJG=.2FYKHRIOA
%AR^mFB'pZ<qXT%IJ'.F+<<:tDqLQBW8,_@FB6`:?A$tOU8rPsm5MuqLoUjqIs7H>)s5BUMja[3Whu3<,s5BUJPC)7armgK:r:g6;
%++EsVs5Nd&q!E#!r3(VEhgYUeGCTFTJ+Yb8qjZLCfD@d\q=?iKric@aYQ"%g07Wqmrp&sZU,TdBn0`_Vci:1un_;t!s"9o2Rf~>
%AI9_PrivateDataEnd
